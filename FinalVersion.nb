(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1401951,      29539]
NotebookOptionsPosition[   1368606,      28732]
NotebookOutlinePosition[   1369177,      28754]
CellTagsIndexPosition[   1369086,      28749]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Final Version Of SyntaxCorrector", "Title",
 CellChangeTimes->{{3.707779247836567*^9, 
  3.707779255946064*^9}},ExpressionUUID->"a62f317b-406a-411c-b1b6-\
84bd6a8d504e"],

Cell[CellGroupData[{

Cell["Defined functions", "Chapter",
 CellChangeTimes->{{3.7077792601336007`*^9, 3.707779266868038*^9}, {
  3.707779324087281*^9, 
  3.70777932588417*^9}},ExpressionUUID->"0b2a7c97-6769-4c60-bb89-\
1ed70cd885ef"],

Cell[CellGroupData[{

Cell["Syntax Corrector", "Subsubsection",
 CellChangeTimes->{{3.707779953452078*^9, 
  3.7077799564833527`*^9}},ExpressionUUID->"e88bbe65-c3cc-4da9-ada7-\
7ce372171907"],

Cell[BoxData[
 RowBox[{
  RowBox[{"syntaxCorrector", "[", "str_String", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"inp", "=", "str"}], ",", 
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ",", "openbrack", ",", "closebrack", ",", 
      "openbrace", ",", "closebrace", ",", "openparen", ",", "closeparen"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"openbrack", "=", 
      RowBox[{"StringCount", "[", 
       RowBox[{"str", ",", 
        RowBox[{"{", "\"\<[\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"closebrack", "=", 
      RowBox[{"StringCount", "[", 
       RowBox[{"str", ",", 
        RowBox[{"{", "\"\<]\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"openbrace", "=", 
      RowBox[{"StringCount", "[", 
       RowBox[{"str", ",", 
        RowBox[{"{", "\"\<{\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"closebrace", "=", 
      RowBox[{"StringCount", "[", 
       RowBox[{"str", ",", 
        RowBox[{"{", "\"\<}\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"openparen", "=", 
      RowBox[{"StringCount", "[", 
       RowBox[{"str", ",", 
        RowBox[{"{", "\"\<(\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"closeparen", "=", 
      RowBox[{"StringCount", "[", 
       RowBox[{"str", ",", 
        RowBox[{"{", "\"\<)\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"openbrack", "==", "closebrack"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"openbrack", ">", "closebrack"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", "\"\<Closing Bracket Missed\>\""}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Close", " ", "Bracket", " ", "Inserting"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"s1", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"StringInsert", "[", 
               RowBox[{"str", ",", "\"\<]\>\"", ",", "i"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{
                 RowBox[{"StringLength", "[", "str", "]"}], "+", "1"}]}], 
               "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Selecting", " ", "the", " ", "True", " ", "for", " ", 
             "SyntaxQ"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"s2", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"s1", ",", 
              RowBox[{"Test", "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", 
             RowBox[{"Column", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Possible solutions\>\"", ",", "s2"}], "}"}], 
               "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", "\"\<Opening Bracket Missed\>\""}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"Open", " ", "Bracket", " ", "Inserting"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"s1", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"StringInsert", "[", 
               RowBox[{"str", ",", "\"\<[\>\"", ",", "i"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"StringLength", "[", "str", "]"}]}], "}"}]}], "]"}]}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "Selecting", " ", "the", " ", "True", " ", "for", " ", 
             "SyntaxQ"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"s2", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"s1", ",", 
              RowBox[{
               RowBox[{"testAnalyser", "[", "#", "]"}], "&"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", 
             RowBox[{"Column", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Possible solutions\>\"", ",", "s2"}], "}"}], 
               "]"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", 
           RowBox[{"{", "\"\<{\>\"", "}"}]}], "]"}], "==", 
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", 
           RowBox[{"{", "\"\<}\>\"", "}"}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"openbrace", ">", "closebrace"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", "\"\<Closing Braces Missed\>\""}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"s1", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"StringInsert", "[", 
               RowBox[{"str", ",", "\"\<}\>\"", ",", "i"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{
                 RowBox[{"StringLength", "[", "str", "]"}], "+", "1"}]}], 
               "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"s2", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"s1", ",", 
              RowBox[{
               RowBox[{"testAnalyser", "[", "#", "]"}], "&"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", 
             RowBox[{"Column", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Possible solutions\>\"", ",", "s2"}], "}"}], 
               "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", "\"\<Opening Braces Missed\>\""}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"s1", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"StringInsert", "[", 
               RowBox[{"str", ",", "\"\<{\>\"", ",", "i"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{
                 RowBox[{"StringLength", "[", "str", "]"}], "+", "1"}]}], 
               "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"s2", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"s1", ",", 
              RowBox[{
               RowBox[{"testAnalyser", "[", "#", "]"}], "&"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", 
             RowBox[{"Column", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Possible solutions\>\"", ",", "s2"}], "}"}], 
               "]"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", 
           RowBox[{"{", "\"\<(\>\"", "}"}]}], "]"}], "==", 
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", 
           RowBox[{"{", "\"\<)\>\"", "}"}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"openparen", ">", "closeparen"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", "\"\<Closing Parenthes Missed\>\""}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"s1", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"StringInsert", "[", 
               RowBox[{"str", ",", "\"\<)\>\"", ",", "i"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{
                 RowBox[{"StringLength", "[", "str", "]"}], "+", "1"}]}], 
               "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"s2", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"s1", ",", 
              RowBox[{
               RowBox[{"testAnalyser", "[", "#", "]"}], "&"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", 
             RowBox[{"Column", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Possible solutions\>\"", ",", "s2"}], "}"}], 
               "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", "\"\<Opening Parenthes Missed\>\""}], 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"s1", "=", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"StringInsert", "[", 
               RowBox[{"str", ",", "\"\<(\>\"", ",", "i"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{
                 RowBox[{"StringLength", "[", "str", "]"}], "+", "1"}]}], 
               "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"s2", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"s1", ",", 
              RowBox[{
               RowBox[{"testAnalyser", "[", "#", "]"}], "&"}]}], "]"}]}], ";",
            "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", 
             RowBox[{"Column", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<Possible solutions\>\"", ",", "s2"}], "}"}], 
               "]"}], "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
        ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"Not", "[", 
        RowBox[{"EvenQ", "[", 
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", "\"\<\\\"\>\""}], "]"}], "]"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"result", ",", "\"\<Quotes Missed\>\""}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"s1", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"StringInsert", "[", 
            RowBox[{"str", ",", "\"\<\\\"\>\"", ",", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"StringLength", "[", "str", "]"}], "+", "1"}]}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"s2", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"s1", ",", 
           RowBox[{
            RowBox[{"testAnalyser", "[", "#", "]"}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"result", ",", 
          RowBox[{"Column", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Possible solutions\>\"", ",", "s2"}], "}"}], "]"}], 
           "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", 
           RowBox[{"{", "\"\<[\>\"", "}"}]}], "]"}], "==", 
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", 
           RowBox[{"{", "\"\<]\>\"", "}"}]}], "]"}]}], "&&", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", 
           RowBox[{"{", "\"\<{\>\"", "}"}]}], "]"}], "==", 
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", 
           RowBox[{"{", "\"\<}\>\"", "}"}]}], "]"}]}], "&&", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", 
           RowBox[{"{", "\"\<(\>\"", "}"}]}], "]"}], "==", 
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", 
           RowBox[{"{", "\"\<)\>\"", "}"}]}], "]"}]}], "&&", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", 
           RowBox[{"{", "\"\<(\>\"", "}"}]}], "]"}], "==", 
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", 
           RowBox[{"{", "\"\<)\>\"", "}"}]}], "]"}]}], "&&", 
        "\[IndentingNewLine]", 
        RowBox[{"EvenQ", "[", 
         RowBox[{"StringCount", "[", 
          RowBox[{"str", ",", "\"\<\\\"\>\""}], "]"}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"result", ",", "\"\<Letter or Number Missed\>\""}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"s1", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"StringInsert", "[", 
            RowBox[{"str", ",", "\"\<a\>\"", ",", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"StringLength", "[", "str", "]"}], "+", "1"}]}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"s2", "=", 
         RowBox[{"Select", "[", 
          RowBox[{"s1", ",", 
           RowBox[{
            RowBox[{"testAnalyser", "[", "#", "]"}], "&"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"result", ",", 
          RowBox[{"Column", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{"\"\<Possible solutions\>\"", ",", "s2"}], "}"}], "]"}], 
           "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Column", "[", "result", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7077806580362253`*^9, 3.7077806743488665`*^9}, {
   3.7077807498808203`*^9, 3.7077807552089396`*^9}, {3.7077809143034496`*^9, 
   3.7077809170378485`*^9}, {3.707781328988783*^9, 3.707781338941992*^9}, {
   3.7077813871455355`*^9, 3.707781392708082*^9}, {3.707781534787425*^9, 
   3.70778154205307*^9}, {3.707781609741151*^9, 3.7077816936637664`*^9}, {
   3.707781749257992*^9, 3.707781755648711*^9}, {3.7077829949888844`*^9, 
   3.707783073944615*^9}, {3.7077832373147783`*^9, 3.707783277866409*^9}, {
   3.7077834139032893`*^9, 3.7077834376020336`*^9}, {3.707783474227249*^9, 
   3.7077835277630634`*^9}, {3.7077836117333345`*^9, 3.7077836269540977`*^9}, 
   3.7077837471569624`*^9, {3.7078176137844934`*^9, 3.7078176317016964`*^9}, 
   3.707817714574114*^9, {3.707818411702544*^9, 3.707818422714859*^9}, {
   3.7078184621980553`*^9, 3.707818466561493*^9}, {3.707819939277491*^9, 
   3.7078199712889657`*^9}, 3.7078201048266163`*^9, 3.707820210431608*^9, {
   3.7078202622927227`*^9, 3.707820325882953*^9}, 3.7078229487021255`*^9, {
   3.707824524402979*^9, 3.707824619200276*^9}, {3.707826463098995*^9, 
   3.7078264645600224`*^9}, {3.70782673936674*^9, 3.70782677727562*^9}, {
   3.707826860062278*^9, 3.707826862090723*^9}, 3.7078272509986067`*^9, {
   3.7078318552704945`*^9, 3.7078319074703736`*^9}, {3.707832615988408*^9, 
   3.707832649395997*^9}, {3.707832713516615*^9, 3.7078327162705464`*^9}, {
   3.707910653156809*^9, 3.707910655783203*^9}, {3.7079107347526617`*^9, 
   3.7079108151006966`*^9}, 
   3.7079108526284943`*^9},ExpressionUUID->"6428a9cc-8000-4b7c-974c-\
379280e2015b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Message Analyzer", "Subsubsection",
 CellChangeTimes->{{3.707780927875899*^9, 
  3.707780932454116*^9}},ExpressionUUID->"1b0c0d7b-8834-4ae2-b1f1-\
3dba1fa70aef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"messageAnalysis", "[", "str_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mess", ",", 
       RowBox[{"s", "=", "str"}], ",", "res", ",", "result"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"$MessageList", "=", 
          RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"res", "=", 
            RowBox[{"ToExpression", "[", "str", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"mess", "=", "$MessageList"}], ";"}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"mess", "=!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"result", "=", "False"}], ",", 
           RowBox[{"result", "=", "True"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "result"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7077803033925424`*^9, 3.707780306408246*^9}, {
  3.7077804864723005`*^9, 3.707780492972303*^9}, {3.707780533222706*^9, 
  3.7077805813793683`*^9}},ExpressionUUID->"62d34e81-7383-4d16-8b12-\
028c83402eb4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.707910515453227*^9, 
  3.7079105183146524`*^9}},ExpressionUUID->"335000b9-7c3e-4bcd-a947-\
d2e0fb3acc90"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testAnalyser", "[", "str_String", "]"}], ":=", 
  RowBox[{
   RowBox[{"messageAnalysis", "[", "str", "]"}], "&&", 
   RowBox[{
    RowBox[{"EditDistance", "[", 
     RowBox[{
      RowBox[{"StringDelete", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", "str", "]"}], ",", "InputForm"}], 
         "]"}], ",", "WhitespaceCharacter"}], "]"}], ",", "str"}], "]"}], ">",
     "1"}]}]}]], "Input",
 CellChangeTimes->{{3.7079105258052435`*^9, 3.707910555912406*^9}, {
  3.707910669091139*^9, 
  3.7079106751773376`*^9}},ExpressionUUID->"bc9b5f5a-ba01-415e-a16d-\
455d5135aa25"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Examples", "Chapter",
 CellChangeTimes->{{3.707781771086343*^9, 
  3.7077817726957335`*^9}},ExpressionUUID->"eb0b9604-7ee3-47f0-9744-\
cce8cecbae10"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", "\"\<N[N[Nest[Nest[x^2,x,6,4,3]]]\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.707781803492872*^9, 3.707781809508498*^9}, 
   3.707781882227925*^9},ExpressionUUID->"a8d168b1-3d63-4e7b-839c-\
bca13d7d63fa"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Closing Bracket Missed\"\>"},
    {
     TagBox[GridBox[{
        {"\<\"Possible solutions\"\>"},
        {"\<\"N[N[Nest[Nest[x^2,x,6],4,3]]]\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7077818829622746`*^9, 3.7077834425605335`*^9, 
  3.7077837530921783`*^9, 3.707817638023223*^9, 3.707817720771422*^9, 
  3.7078184281257133`*^9, 3.7078201126071095`*^9, 3.707820231004175*^9, 
  3.7078203324101677`*^9, 3.707832746416832*^9, 
  3.707910266249512*^9},ExpressionUUID->"184ca86d-9392-4e70-9658-\
6127630f940a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", "\"\<Fold[f[][],x[[][],{1,2,3}]\>\"", 
  "]"}]], "Input",ExpressionUUID->"e92d1f41-f078-4d01-9638-1308c793c83f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Closing Bracket Missed\"\>"},
    {
     TagBox[GridBox[{
        {"\<\"Possible solutions\"\>"},
        {"\<\"Fold[f[][],x[][][],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][],x[[]][],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][],x[[]][],{1,2,3}]\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7077818901143637`*^9, 3.707783445370401*^9, 
  3.7077837549730062`*^9, 3.707817639857545*^9, 3.707817722793953*^9, 
  3.7078184299820533`*^9, 3.7078201145174694`*^9, 3.7078202334919367`*^9, 
  3.7078203338671846`*^9, 3.7078327488805714`*^9, 
  3.707910274591445*^9},ExpressionUUID->"4cd21ab1-75ca-4311-a87a-\
af607d1ee471"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", "\"\<Fold[f[][,x[],{1,2,3}]\>\"", 
  "]"}]], "Input",
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"aa740a4d-b3be-4c27-81de-ee7a8b207f50"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Closing Bracket Missed\"\>"},
    {
     TagBox[GridBox[{
        {"\<\"Possible solutions\"\>"},
        {"\<\"Fold[f[][],x[],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][,]x[],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][,x][],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][,x[]],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][,x[]],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][,x[],]{1,2,3}]\"\>"},
        {"\<\"Fold[f[][,x[],{1,2,3}]]\"\>"},
        {"\<\"Fold[f[][,x[],{1,2,3}]]\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7077818983877516`*^9, {3.7077832818452196`*^9, 3.707783288405796*^9}, 
   3.707783758071258*^9, 3.7078176438103743`*^9, 3.7078177246289988`*^9, 
   3.707818431651724*^9, 3.707820116521874*^9, 3.70782023583261*^9, 
   3.7078203360517263`*^9, {3.707824853233267*^9, 3.707824857189643*^9}, 
   3.707834951156082*^9, 
   3.7079102780334187`*^9},ExpressionUUID->"a620e078-b830-4555-8bee-\
17e4882d9ec5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", "\"\<Fold[f[][,x[],{1,2,3}]\>\"", 
  "]"}]], "Input",
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"ddc9e334-4c20-4bcf-8444-87d4de38af69"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Closing Bracket Missed\"\>"},
    {
     TagBox[GridBox[{
        {"\<\"Possible solutions\"\>"},
        {"\<\"Fold[f[][],x[],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][,]x[],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][,x][],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][,x[]],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][,x[]],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][,x[],]{1,2,3}]\"\>"},
        {"\<\"Fold[f[][,x[],{1,2,3}]]\"\>"},
        {"\<\"Fold[f[][,x[],{1,2,3}]]\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7077822488177867`*^9, 3.7077832903904037`*^9, 
  3.7077837603969398`*^9, 3.707817646102131*^9, 3.707817727129226*^9, 
  3.707818439783225*^9, 3.7078201193498893`*^9, 3.707820341352482*^9, 
  3.707910305586026*^9},ExpressionUUID->"3b5c7bed-0de2-44a6-b2a8-\
758bb873c252"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", "\"\<Fold[f[][][],x[][[],{1,2,3}]\>\"", 
  "]"}]], "Input",ExpressionUUID->"d3519e72-b27e-48ee-8e7a-c4151467a655"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Closing Bracket Missed\"\>"},
    {
     TagBox[GridBox[{
        {"\<\"Possible solutions\"\>"},
        {"\<\"Fold[f[][][],x[][][],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][][],x[][[]],{1,2,3}]\"\>"},
        {"\<\"Fold[f[][][],x[][[]],{1,2,3}]\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.7077822982019963`*^9, 3.7077832933393106`*^9, 
  3.707783765634364*^9, 3.7078176526671658`*^9, 3.7078177294380836`*^9, 
  3.7078184416478252`*^9, 3.7078201220051413`*^9, 3.707820345352293*^9, 
  3.707834981531517*^9, 
  3.7079103093877163`*^9},ExpressionUUID->"d3c89a48-7c8e-4a8e-964a-\
ab6b51f8f056"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", "\"\<Fold[f,x[,{1,2,3}]\>\"", "]"}]], "Input",
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"5f17572b-1c02-4262-aeca-c9975f757fbe"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Closing Bracket Missed\"\>"},
    {
     TagBox[GridBox[{
        {"\<\"Possible solutions\"\>"},
        {"\<\"Fold[f,x[],{1,2,3}]\"\>"},
        {"\<\"Fold[f,x[,]{1,2,3}]\"\>"},
        {"\<\"Fold[f,x[,{1,2,3}]]\"\>"},
        {"\<\"Fold[f,x[,{1,2,3}]]\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.707782314563439*^9, 3.707783772196677*^9, {3.707817660177515*^9, 
   3.707817672086181*^9}, 3.7078177341435127`*^9, 3.7078184776025095`*^9, 
   3.7078193605136967`*^9, 3.7078195827873073`*^9, 3.7078201352378874`*^9, 
   3.7078203523122177`*^9, 3.707834990385765*^9, {3.7078350544891143`*^9, 
   3.7078350572300406`*^9}, 
   3.7079103124275017`*^9},ExpressionUUID->"19d111bc-1516-4818-9722-\
0cb81c57e81b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToExpression", "[", 
  "\"\<Function[x,Evaluate[Together[Nest[Function[z,](z+a/z)/2,x,4]]]]\>\"", 
  "]"}]], "Input",
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"f52609c7-c3a3-4296-a0a7-243a5d12c012"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"x", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox["a", "z"], "+", "z"}], ")"}], " ", 
      RowBox[{"Function", "[", 
       RowBox[{"z", ",", "Null"}], "]"}]}], ")"}], "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["a", "z"], "+", "z"}], ")"}], " ", 
       RowBox[{"Function", "[", 
        RowBox[{"z", ",", "Null"}], "]"}]}], ")"}], "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox["a", "z"], "+", "z"}], ")"}], " ", 
        RowBox[{"Function", "[", 
         RowBox[{"z", ",", "Null"}], "]"}]}], ")"}], "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox["a", "z"], "+", "z"}], ")"}], " ", 
         RowBox[{"Function", "[", 
          RowBox[{"z", ",", "Null"}], "]"}]}], ")"}], "[", "x", "]"}], "]"}], 
     "]"}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.7078250084103765`*^9, 3.707835067155531*^9, 
  3.707910314650221*^9},ExpressionUUID->"ff81e35d-8f2b-465a-b08b-\
5f455c063fab"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", 
  "\"\<Function[x,Evaluate[Together[Nest[Function[z,(z+a/z)/2,x,4]]]]\>\"", 
  "]"}]], "Input",
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"83b7585d-f3ae-4e7b-91dd-37f92a74f4ce"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Closing Bracket Missed\"\>"},
    {
     TagBox[GridBox[{
        {"\<\"Possible solutions\"\>"},
        {"\<\"Function[x,Evaluate[Together[Nest[Function[z,](z+a/z)/2,x,4]]]]\
\"\>"},
        {"\<\"Function[x,Evaluate[Together[Nest[Function[z,(z+a/z)]/2,x,4]]]]\
\"\>"},
        {"\<\"Function[x,Evaluate[Together[Nest[Function[z,(z+a/z)/2],x,4]]]]\
\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.707782439730847*^9, 3.70778308259172*^9, 3.707783774634905*^9, {
   3.707816236199047*^9, 3.7078162515219374`*^9}, 3.7078176806627955`*^9, 
   3.7078177369346757`*^9, 3.707818474122487*^9, 3.7078189631786704`*^9, {
   3.7078203590319643`*^9, 3.707820369247636*^9}, {3.7078248804287615`*^9, 
   3.707824908175397*^9}, 3.707826092936386*^9, 3.7078261705141487`*^9, 
   3.7078350634078865`*^9, 
   3.7079104411834507`*^9},ExpressionUUID->"aa5c6740-aa47-4748-8681-\
ccfb93739923"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "@", "\"\<Nest[f,,4]\>\""}]], "Input",
 CellChangeTimes->{{3.707911801941455*^9, 3.7079118406648874`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"e9dcf599-771e-444c-9f68-332a406ca037"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Letter or Number Missed\"\>"},
    {
     TagBox[GridBox[{
        {"\<\"Possible solutions\"\>"},
        {"\<\"aNest[f,,4]\"\>"},
        {"\<\"Naest[f,,4]\"\>"},
        {"\<\"Neast[f,,4]\"\>"},
        {"\<\"Nesat[f,,4]\"\>"},
        {"\<\"Nesta[f,,4]\"\>"},
        {"\<\"Nest[af,,4]\"\>"},
        {"\<\"Nest[fa,,4]\"\>"},
        {"\<\"Nest[f,a,4]\"\>"},
        {"\<\"Nest[f,,4]a\"\>"}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.707911822722885*^9, 
  3.707911842195349*^9}},ExpressionUUID->"7db942cf-9118-4714-af5a-\
9eb194c479ad"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["DataSets for NeuralNetwork", "Chapter",
 CellChangeTimes->{{3.707822851308052*^9, 
  3.707822859066887*^9}},ExpressionUUID->"f1f6f4c8-2e8a-44f7-864b-\
076243fd0e3f"],

Cell[CellGroupData[{

Cell["trainingSet construction", "Subsubsection",
 CellChangeTimes->{{3.7078341009509373`*^9, 
  3.7078341185764303`*^9}},ExpressionUUID->"4ff5cd55-5b46-4e74-8d72-\
fee6eaa76204"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"trainingSet", "[", "str_String", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"StringDrop", "[", 
         RowBox[{"str", ",", 
          RowBox[{"{", "i", "}"}]}], "]"}], "\[Rule]", "str"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"StringLength", "[", "str", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"trainingCheck", "[", "str_String", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{"str", ",", 
       RowBox[{"{", "i", "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"StringLength", "[", "str", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.707573823682268*^9, 3.707573870480367*^9}, 
   3.707573922019833*^9, {3.707573970034795*^9, 3.7075739715458612`*^9}, {
   3.707574019110504*^9, 3.7075740394026756`*^9}, {3.707574074244319*^9, 
   3.7075740771313667`*^9}, {3.70757411086522*^9, 3.707574151870222*^9}, {
   3.7075741854349613`*^9, 3.707574221402401*^9}, {3.707833708422888*^9, 
   3.7078337329186077`*^9}, {3.7078338230391083`*^9, 3.707833823798601*^9}, {
   3.7078586538188944`*^9, 3.707858655338405*^9}, {3.707864535177663*^9, 
   3.707864574209753*^9}, {3.7078678492975016`*^9, 
   3.7078678516327024`*^9}},ExpressionUUID->"51c1216a-f6a3-49bc-8368-\
92e776e3d966"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainingSet2", "[", "str_String", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"StringPartition", "[", 
         RowBox[{
          RowBox[{"StringDrop", "[", 
           RowBox[{"str", ",", 
            RowBox[{"{", "i", "}"}]}], "]"}], ",", "1"}], "]"}], "\[Rule]", 
        RowBox[{"StringPartition", "[", 
         RowBox[{"str", ",", "1"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"StringLength", "[", "str", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7078586631869354`*^9, 
  3.707858684653384*^9}},ExpressionUUID->"f3242da5-f962-4fdc-913c-\
82a4cb21514a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainingSet3", "[", "str_String", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"StringDrop", "[", 
        RowBox[{"str", ",", 
         RowBox[{"{", "i", "}"}]}], "]"}], ",", "str"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"StringLength", "[", "str", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.707863134452495*^9, 3.707863138223386*^9}, {
  3.707863307633175*^9, 
  3.7078633100777807`*^9}},ExpressionUUID->"2ed341d8-0588-4ef9-8dde-\
aeffb44ce8a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainingSet4", "[", "str_String", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToCharacterCode", "[", 
         RowBox[{"StringDrop", "[", 
          RowBox[{"str", ",", 
           RowBox[{"{", "i", "}"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"ToCharacterCode", "[", "str", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"StringLength", "[", "str", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7078678593147154`*^9, 
  3.7078678750317693`*^9}},ExpressionUUID->"d564cd75-a7cf-41c3-ad4f-\
66b5b5d82cc0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainingSet5", "[", "str_String", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToCharacterCode", "[", 
         RowBox[{"StringReplacePart", "[", 
          RowBox[{"str", ",", "\"\< \>\"", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "i"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"ToCharacterCode", "[", "str", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"StringLength", "[", "str", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7078689978528624`*^9, 3.7078690162530756`*^9}, {
  3.707869061671912*^9, 
  3.7078690619681206`*^9}},ExpressionUUID->"93407458-889f-4719-be06-\
e57e074756dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainingValid5", "[", "str_String", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToCharacterCode", "[", 
         RowBox[{"StringReplacePart", "[", 
          RowBox[{"str", ",", "\"\< \>\"", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "i"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"ToCharacterCode", "[", "str", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"StringLength", "[", "str", "]"}]}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7078723146213236`*^9, 
  3.7078723152150717`*^9}},ExpressionUUID->"48346c79-66d3-47ff-bcdb-\
78f0145aed99"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"trainingSet6", "[", "str_String", "]"}], ":=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ToCharacterCode", "[", 
         RowBox[{"StringReplacePart", "[", 
          RowBox[{"str", ",", 
           RowBox[{"FromCharacterCode", "[", "j", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "i"}], "}"}]}], "]"}], "]"}], "\[Rule]", 
        RowBox[{"ToCharacterCode", "[", "str", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"StringLength", "[", "str", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "49", ",", "122"}], "}"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7078727743975143`*^9, 3.707872811850215*^9}, {
  3.70787288076084*^9, 3.7078728891577387`*^9}, {3.707918494025031*^9, 
  3.70791852472218*^9}},ExpressionUUID->"6625b7a1-5c55-40d5-91d2-\
e2a89dbba93e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FromCharacterCode", "[", "#", "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", 
   RowBox[{"49", ",", "122"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7078728213798943`*^9, 3.707872874057078*^9}, {
  3.7079184980410132`*^9, 
  3.707918515505967*^9}},ExpressionUUID->"623ef100-cc73-4c29-baa2-\
d2abfdf47d5c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"1\"\>", ",", "\<\"2\"\>", ",", "\<\"3\"\>", ",", "\<\"4\"\>", 
   ",", "\<\"5\"\>", ",", "\<\"6\"\>", ",", "\<\"7\"\>", ",", "\<\"8\"\>", 
   ",", "\<\"9\"\>", ",", "\<\":\"\>", ",", "\<\";\"\>", ",", "\<\"<\"\>", 
   ",", "\<\"=\"\>", ",", "\<\">\"\>", ",", "\<\"?\"\>", ",", "\<\"@\"\>", 
   ",", "\<\"A\"\>", ",", "\<\"B\"\>", ",", "\<\"C\"\>", ",", "\<\"D\"\>", 
   ",", "\<\"E\"\>", ",", "\<\"F\"\>", ",", "\<\"G\"\>", ",", "\<\"H\"\>", 
   ",", "\<\"I\"\>", ",", "\<\"J\"\>", ",", "\<\"K\"\>", ",", "\<\"L\"\>", 
   ",", "\<\"M\"\>", ",", "\<\"N\"\>", ",", "\<\"O\"\>", ",", "\<\"P\"\>", 
   ",", "\<\"Q\"\>", ",", "\<\"R\"\>", ",", "\<\"S\"\>", ",", "\<\"T\"\>", 
   ",", "\<\"U\"\>", ",", "\<\"V\"\>", ",", "\<\"W\"\>", ",", "\<\"X\"\>", 
   ",", "\<\"Y\"\>", ",", "\<\"Z\"\>", ",", "\<\"[\"\>", ",", "\<\"\\\\\"\>", 
   ",", "\<\"]\"\>", ",", "\<\"^\"\>", ",", "\<\"_\"\>", ",", "\<\"`\"\>", 
   ",", "\<\"a\"\>", ",", "\<\"b\"\>", ",", "\<\"c\"\>", ",", "\<\"d\"\>", 
   ",", "\<\"e\"\>", ",", "\<\"f\"\>", ",", "\<\"g\"\>", ",", "\<\"h\"\>", 
   ",", "\<\"i\"\>", ",", "\<\"j\"\>", ",", "\<\"k\"\>", ",", "\<\"l\"\>", 
   ",", "\<\"m\"\>", ",", "\<\"n\"\>", ",", "\<\"o\"\>", ",", "\<\"p\"\>", 
   ",", "\<\"q\"\>", ",", "\<\"r\"\>", ",", "\<\"s\"\>", ",", "\<\"t\"\>", 
   ",", "\<\"u\"\>", ",", "\<\"v\"\>", ",", "\<\"w\"\>", ",", "\<\"x\"\>", 
   ",", "\<\"y\"\>", ",", "\<\"z\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.707872874408325*^9, {3.70791849893536*^9, 3.707918515729057*^9}, 
   3.707918671353365*^9},ExpressionUUID->"869bb32f-108e-4764-b497-\
478e35d6140b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainingSet5", "[", "\"\<kk\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7078690223895154`*^9, 
  3.707869032493428*^9}},ExpressionUUID->"96768787-6662-4648-b8e2-\
38ecb6a0fa44"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"32", ",", "107"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"107", ",", "107"}], "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"107", ",", "32"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"107", ",", "107"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.707869033425891*^9, 
  3.7078690645470333`*^9},ExpressionUUID->"e7660073-8eb3-4eb0-b88d-\
e971af5b942a"]
}, Open  ]],

Cell[BoxData["StringReplacePart"], "Input",
 CellChangeTimes->{{3.7078689649037275`*^9, 
  3.707868968175042*^9}},ExpressionUUID->"be97ca00-4314-4a64-8554-\
aef24de5c73f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Construction of training set", "Subsubsection",
 CellChangeTimes->{{3.707834123497896*^9, 
  3.7078341323191195`*^9}},ExpressionUUID->"e4e1ba9e-2791-4cb3-8daf-\
55d5b31d7e7e"],

Cell[BoxData["NotebookImport"], "Input",
 CellChangeTimes->{{3.7078355434100323`*^9, 
  3.707835546804428*^9}},ExpressionUUID->"10c09dc8-a07c-48f1-a666-\
7c6c9b4b8dc0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NotebookImport", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
       "$InstallationDirectory", ",", "\"\<Documentation\>\"", ",", 
        "\"\<English\>\"", ",", "\"\<System\>\"", ",", 
        "\"\<ReferencePages\>\"", ",", "\"\<Symbols\>\"", ",", 
        RowBox[{"#", "<>", "\"\<.nb\>\""}]}], "}"}], "]"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<InputText\>\""}]}], "]"}], 
   "&"}], "/@", 
  RowBox[{
   RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"3000", ";;", "3009"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7078361658233995`*^9, 3.70783617411425*^9}},
 CellID->360473489,ExpressionUUID->"50d67bf2-33cd-46e1-9d67-ac2f3cb28986"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "\<\"LessLess[x, y, z]\"\>", "}"}], ",", 
   RowBox[{"{", "\<\"LessSlantEqual[1, 2]\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LessThan[4][2]\"\>", ",", "\<\"LessThan[y][x]\"\>", 
     ",", "\<\"Select[{0, 5, 10, 15}, LessThan[10]]\"\>", 
     ",", "\<\"LessThan[10][6]\"\>", 
     ",", "\<\"LessThan[Quantity[1, \\\"Hour\\\"]][Quantity[50, \\\"Minutes\\\
\"]]\"\>", ",", "\<\"LessThan[Today][Yesterday]\"\>", 
     ",", "\<\"LessThan[DateObject[{2015, 8, 1}, \\\"Day\\\", \\\"Gregorian\\\
\", -6.`]][\\r\\n DateObject[{2015, 6, 1}, \\\"Day\\\", \\\"Gregorian\\\", \
-6.`]]\"\>", ",", "\<\"LessThan[5][x]\"\>", ",", "\<\"LessThan[x][5]\"\>", 
     ",", "\<\"EntityValue[\\r\\n EntityClass[\\r\\n  \\\"Country\\\", \
{\\\"Area\\\" \[Rule] \\r\\n    LessThan[Quantity[100, \
\\\"Kilometers\\\"^2]]}], \\\"Entities\\\"]\"\>", 
     ",", "\<\"EntityValue[\\r\\n EntityClass[\\r\\n  \\\"Country\\\", \
{\\\"Area\\\" \[Rule] \\r\\n    LessThan[Quantity[100, \
\\\"Kilometers\\\"^2]]}], \\\"Population\\\"]\"\>", ",", "\<\"Total[%]\"\>", 
     ",", "\<\"EntityValue[\\r\\n Entity[\\\"Country\\\", {\\\"Area\\\" \
\[Rule] \\r\\n    LessThan[Quantity[100, \\\"Kilometers\\\"^2]]}], \
\\\"Population\\\"]\"\>", 
     ",", "\<\"Select[{0, 5, 10, 15}, Less[#, 10] &]\"\>", 
     ",", "\<\"Select[{0, 5, 10, 15}, LessThan[10]]\"\>", 
     ",", "\<\"Select[LessThan[10]][{0, 5, 10, 15}]\"\>"}], "}"}], ",", 
   RowBox[{"{", "\<\"LessTilde[x, y, z]\"\>", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"StringMatchQ[#, LetterCharacter] & /@ {\\\"a\\\", \\\"1\\\", \
\\\"B\\\", \\\".\\\", \\\" \\\"}\"\>", 
     ",", "\<\"StringMatchQ[\\\"abcdefg\\\", LetterCharacter ..]\"\>", 
     ",", "\<\"StringMatchQ[\\\"abdc12\\\", LetterCharacter ..]\"\>", 
     ",", "\<\"StringMatchQ[#, LetterCharacter] & /@ {\\\"a\\\", \\\"1\\\", \
\\\"B\\\", \\\" \\\"}\"\>", 
     ",", "\<\"LetterQ[#] & /@ {\\\"a\\\", \\\"1\\\", \\\"B\\\", \\\" \\\"}\"\
\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LetterCounts[\\\"aaaaaaaaaa\\\"]\"\>", 
     ",", "\<\"LetterCounts[\\\"banana\\\"]\"\>", 
     ",", "\<\"LetterCounts[\\\"12345\\\"]\"\>", 
     ",", "\<\"LetterCounts[\\\"YT-1300\\\"]\"\>", 
     ",", "\<\"LetterCounts[\\\"ab12cd34ef45\\\", 2]\"\>", 
     ",", "\<\"LetterCounts[\\\"12345\\\", 1, {\\\"1\\\", \\\"5\\\"}]\"\>", 
     ",", "\<\"LetterCounts[\\\"TK-421\\\", 1, {\\\"1\\\", \\\"2\\\"}]\"\>", 
     ",", "\<\"LetterCounts[\\\"Alabama\\\", IgnoreCase \[Rule] False]\"\>", 
     ",", "\<\"LetterCounts[\\\"Alabama\\\", IgnoreCase \[Rule] True]\"\>", 
     ",", "\<\"LetterCounts[\\\"abABabABabABabABabAB\\\", 2, IgnoreCase \
\[Rule] True]\"\>", 
     ",", "\<\"LetterCounts[\\\"abABabABabABabABabAB\\\", 2, IgnoreCase \
\[Rule] False]\"\>", 
     ",", "\<\"Take[LetterCounts[WikipediaData[\\\"volcano\\\"]], 20]\"\>", 
     ",", "\<\"Take[LetterCounts[WikipediaData[\\\"volcano\\\"], 3], \
20]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LetterNumber[\\\"d\\\"]\"\>", 
     ",", "\<\"LetterNumber[\\\"D\\\"]\"\>", 
     ",", "\<\"LetterNumber[\\\"\[Gamma]\\\", \\\"Greek\\\"]\"\>", 
     ",", "\<\"LetterNumber[\\\"\:044f\\\", Entity[\\\"Language\\\", \
\\\"Russian\\\"]]\"\>", 
     ",", "\<\"LetterNumber[Characters[\\\"Turtle\\\"]]\"\>", 
     ",", "\<\"Alphabet[\\\"Greek\\\"]\"\>", 
     ",", "\<\"LetterNumber[\\\"\[Lambda]\\\", \\\"Greek\\\"]\"\>", 
     ",", "\<\"Position[Alphabet[\\\"Greek\\\"], \\\"\[Lambda]\\\"]\"\>", 
     ",", "\<\"LetterNumber[\\\"c\\\"]\"\>", 
     ",", "\<\"FromLetterNumber[%]\"\>", 
     ",", "\<\"LetterNumber[\\\"a\\\", \\\"French\\\"]\"\>", 
     ",", "\<\"ToCharacterCode[\\\"a\\\"]\"\>", 
     ",", "\<\"LetterNumber[\\\"\[Alpha]\\\"]\"\>", 
     ",", "\<\"LetterNumber[\[Alpha]]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"LetterQ[\\\"a\\\"]\"\>", ",", "\<\"LetterQ[\\\"2\\\"]\"\>", 
     ",", "\<\"LetterQ[\\\"abcdABCD\\\"]\"\>", 
     ",", "\<\"LetterQ[\\\"two words\\\"]\"\>", 
     ",", "\<\"LetterQ[\\\"\[ADoubleDot]\[EAcute]\\\"]\"\>", 
     ",", \
"\<\"LetterQ[\\\"\[GothicCapitalA]\[GothicCapitalB]\[GothicCapitalC]\
\[GothicCapitalD]\[GothicCapitalE]\\\"]\"\>", 
     ",", "\<\"LetterQ[\\\"\[Alpha]\[Beta]\[Gamma]\[Delta]\[Epsilon]\[Zeta]\
\[Eta]\[Theta]\\\"]\"\>", ",", "\<\"\\\"\[Sum]\\\"\"\>", 
     ",", "\<\"LetterQ[%]\"\>", 
     ",", "\<\"Style[StringJoin[\\r\\n  \
Select[Characters[FromCharacterCode[Range[1072, 1103]]], \\r\\n   LetterQ]], \
14]\"\>", 
     ",", "\<\"Style[StringJoin[\\r\\n  \
Select[Characters[FromCharacterCode[Range[2693, 2787]]], \\r\\n   LetterQ]], \
14]\"\>", 
     ",", "\<\"Style[StringJoin[\\r\\n  \
Select[Characters[FromCharacterCode[Range[2821, 2915]]], \\r\\n   LetterQ]], \
14]\"\>", 
     ",", "\<\"Style[StringJoin[\\r\\n  \
Select[Characters[FromCharacterCode[Range[3329, 3455]]], \\r\\n   LetterQ]], \
14]\"\>", 
     ",", "\<\"Style[StringJoin[\\r\\n  \
Select[Characters[FromCharacterCode[Range[11648, 11742]]], \\r\\n   \
LetterQ]], 14]\"\>", 
     ",", "\<\"\\r\\nBoxData[\\r\\nRowBox[{\\\"Style\\\", \\\"[\\\", \
\\r\\nRowBox[{\\r\\nRowBox[{\\\"StringJoin\\\", \\\"[\\\", \
\\r\\nRowBox[{\\\"Select\\\", \\\"[\\\", \
\\r\\nRowBox[{\\r\\nRowBox[{\\\"Characters\\\", \\\"[\\\", \
\\r\\nRowBox[{\\\"FromCharacterCode\\\", \\\"[\\\", \\r\\nRowBox[{\\\"Range\\\
\", \\\"[\\\", \\r\\nRowBox[{\\\"12353\\\", \\\",\\\", \\\"12436\\\"}], \\\"]\
\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \\r\\n           \
\\\"LetterQ\\\"}], \\\"]\\\"}], \\\"]\\\"}], \\\",\\\", \\\"14\\\"}], \\\"]\\\
\"}]]\"\>", 
     ",", "\<\"Style[StringJoin[\\r\\n  \
Select[Characters[FromCharacterCode[Range[12449, 12538]]], \\r\\n   \
LetterQ]], 14]\"\>", 
     ",", "\<\"Style[StringJoin[\\r\\n  \
Select[Characters[FromCharacterCode[Range[2^16 - 1]]], \\r\\n   LetterQ]], \
14]\"\>", 
     ",", "\<\"CharacterRange[\\\"\[ScriptCapitalA]\\\", \
\\\"\[ScriptCapitalG]\\\"]\"\>", ",", "\<\"LetterQ /@ %\"\>", 
     ",", "\<\"LetterQ[\\\"\[ScriptCapitalB]\\\"]\"\>", 
     ",", "\<\"ListPlot[Flatten[\\r\\n  ToCharacterCode[\\r\\n   \
Select[Characters[FromCharacterCode[Range[2^16 - 1]]], LetterQ]]]]\"\>", 
     ",", "\<\"With[{u = \\r\\n   \
Select[Characters[FromCharacterCode[Range[1, 2000, 5]]], LetterQ]},\\r\\n  \
ListPlot[MapIndexed[{{First[#2], First[ToCharacterCode[#1]]}} &, u],\\r\\n   \
PlotMarkers -> u, Frame -> True]]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"Level[a + f[x, y^n], {-1}]\"\>", 
     ",", "\<\"Level[a + f[x, y^n], 2]\"\>", 
     ",", "\<\"Level[a + f[x, y^n], {0, Infinity}]\"\>", 
     ",", "\<\"Level[<|1 \[Rule] a, 2 \[Rule] b|>, -1]\"\>", 
     ",", "\<\"Level[<|1 \[Rule] a, 2 \[Rule] b|>, {1}]\"\>", 
     ",", "\<\"Level[<|1 \[Rule] <|a \[Rule] b, c \[Rule] d|>|>, {2}]\"\>", 
     ",", "\<\"Level[<|1 \[Rule] <|a \[Rule] b, c \[Rule] d|>|>, {1, 2}]\"\>",
      ",", "\<\"Level[{{{{a}}}}, 1]\"\>", ",", "\<\"Level[{{{{a}}}}, 2]\"\>", 
     ",", "\<\"Level[{{{{a}}}}, 3]\"\>", ",", "\<\"Level[{{{{a}}}}, 4]\"\>", 
     ",", "\<\"Level[{{{{a}}}}, 5]\"\>", ",", "\<\"Level[{{{{a}}}}, -1]\"\>", 
     ",", "\<\"Level[{{{{a}}}}, -2]\"\>", ",", "\<\"Level[{{{{a}}}}, -3]\"\>",
      ",", "\<\"Level[{{{{a}}}}, -4]\"\>", 
     ",", "\<\"Level[{{{{a}}}}, -5]\"\>", 
     ",", "\<\"Level[{{{{a}}}}, {2, 3}]\"\>", 
     ",", "\<\"Level[{{{{a}}}}, {0, -1}]\"\>", 
     ",", "\<\"Level[h0[h1[h2[h3[a]]]], {0, -1}]\"\>", 
     ",", "\<\"Level[{{{{a}}}}, 3, Heads -> True]\"\>", 
     ",", "\<\"Level[x^2 + y^3, 3, Heads -> True]\"\>", 
     ",", "\<\"Integrate[Sin[Tan[x]], x]\"\>", ",", "\<\"Level[%, {-1}]\"\>", 
     ",", "\<\"Level[Integrate[Sin[Tan[x]], x], {-1}, Heads -> True]\"\>", 
     ",", "\<\"Union[Level[Integrate[Sin[Tan[x]], x], {-1}, Heads -> True]]\"\
\>", ",", "\<\"Array[a, {2, 2, 2}]\"\>", ",", "\<\"Level[%, {3}]\"\>", 
     ",", "\<\"Level[h1[h2[h3[x]]], -1]\"\>", 
     ",", "\<\"Level[h1[h2[h3[x]]], {0, -1}]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"data = RandomVariate[NormalDistribution[], {2, 100}];\"\>", 
     ",", "\<\"LeveneTest[data]\"\>", 
     ",", "\<\"\[ScriptCapitalH] = LeveneTest[data, Automatic, \
\\\"HypothesisTestData\\\"]\"\>", 
     ",", "\<\"\[ScriptCapitalH][\\\"Properties\\\"]\"\>", 
     ",", "\<\"data = RandomVariate[NormalDistribution[1, 2.1], 10^3];\"\>", 
     ",", "\<\"LeveneTest[data, 4, \\\"TestDataTable\\\"]\"\>", 
     ",", "\<\"Variance[data]\"\>", 
     ",", "\<\"LeveneTest[data, 4, \\\"TestDataTable\\\", \\r\\n \
AlternativeHypothesis \[Rule] \\\"Greater\\\"]\"\>", 
     ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data1 = RandomVariate[NormalDistribution[], 500];\"\>", 
     ",", "\<\"LeveneTest[data1]\"\>", 
     ",", "\<\"sample = Table[\\r\\n   Quiet@LeveneTest[\\r\\n     \
RandomVariate[NormalDistribution[0, 1], 100]], {10^3}];\"\>", 
     ",", "\<\"Histogram[sample, Automatic, PDF]\"\>", 
     ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data2 = RandomVariate[NormalDistribution[1, 3], 500];\"\>", 
     ",", "\<\"LeveneTest[data2]\"\>", ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data1 = RandomVariate[NormalDistribution[0, 2], \
10^4];\\r\\ndata2 = RandomVariate[NormalDistribution[0, 2.1], 10^4];\"\>", 
     ",", "\<\"LeveneTest[data1, 2^2]\"\>", 
     ",", "\<\"LeveneTest[data2, 2^2]\"\>", ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data1 = RandomVariate[NormalDistribution[0, 3], \
500];\\r\\ndata2 = RandomVariate[NormalDistribution[1, 3], 500];\"\>", 
     ",", "\<\"LeveneTest[{data1, data2}]\"\>", 
     ",", "\<\"sample = Table[\\r\\n   \
Quiet@LeveneTest[{RandomVariate[NormalDistribution[0, 3], 100], \\r\\n      \
RandomVariate[NormalDistribution[1, 3], 100]}], {5 10^3}];\"\>", 
     ",", "\<\"Histogram[sample, Automatic, PDF]\"\>", 
     ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data3 = RandomVariate[NormalDistribution[10, 1], 350];\"\>", 
     ",", "\<\"LeveneTest[{data1, data3}]\"\>", ",", "\<\"SeedRandom[3];\"\>",
      ",", "\<\"data1 = RandomVariate[NormalDistribution[0, 2], \
500];\\r\\ndata2 = RandomVariate[NormalDistribution[0, 1], 500];\"\>", 
     ",", "\<\"Subscript[\[Sigma], 0] = 4;\"\>", 
     ",", "\<\"LeveneTest[{data1, data2}, Subscript[\[Sigma], 0]]\"\>", 
     ",", "\<\"LeveneTest[{data2, data1}, 1/Subscript[\[Sigma], 0]]\"\>", 
     ",", "\<\"LeveneTest[{data2, data1}, Subscript[\[Sigma], 0]]\"\>", 
     ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data1 = RandomVariate[NormalDistribution[10, 1], \
500];\\r\\ndata2 = RandomVariate[NormalDistribution[0, 1], 200];\\r\\ndata3 = \
RandomVariate[NormalDistribution[-3, 1], 400];\"\>", 
     ",", "\<\"LeveneTest[{data1, data2, data3}]\"\>", 
     ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data = RandomVariate[NormalDistribution[], {2, 10^4}];\"\>", 
     ",", "\<\"\[ScriptCapitalH] = LeveneTest[data, 1, \\\"HypothesisTestData\
\\\"];\"\>", ",", "\<\"\[ScriptCapitalH][\\\"Properties\\\"]\"\>", 
     ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data = Table[\\r\\n   RandomVariate[NormalDistribution[0, 1], \
\\r\\n    i], {i, {1000, 2000, 3000}}];\"\>", 
     ",", "\<\"\[ScriptCapitalH] = LeveneTest[data, 1, \\\"HypothesisTestData\
\\\"];\"\>", ",", "\<\"\[ScriptCapitalH][\\\"PValue\\\"]\"\>", 
     ",", "\<\"\[ScriptCapitalH][\\\"TestStatistic\\\"]\"\>", 
     ",", "\<\"\[ScriptCapitalH][\\\"DegreesOfFreedom\\\"]\"\>", 
     ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data = RandomVariate[NormalDistribution[], {2, 100}];\"\>", 
     ",", "\<\"\[ScriptCapitalH] = LeveneTest[data, 1, \\\"HypothesisTestData\
\\\"];\"\>", 
     ",", "\<\"\[ScriptCapitalH][\\\"PValue\\\", \\\"TestStatistic\\\", \
\\\"DegreesOfFreedom\\\"]\"\>", ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data = RandomVariate[NormalDistribution[], {2, 10^3}];\"\>", 
     ",", "\<\"\[ScriptCapitalH] = LeveneTest[data, 1, \\\"HypothesisTestData\
\\\"];\"\>", ",", "\<\"\[ScriptCapitalH][\\\"TestDataTable\\\"]\"\>", 
     ",", "\<\"\[ScriptCapitalH][\\\"TestData\\\"]\"\>", 
     ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data = RandomVariate[NormalDistribution[], {3, 10^4}];\"\>", 
     ",", "\<\"\[ScriptCapitalH] = LeveneTest[data, 1, \\\"HypothesisTestData\
\\\"];\"\>", ",", "\<\"\[ScriptCapitalH][\\\"PValueTable\\\"]\"\>", 
     ",", "\<\"\[ScriptCapitalH][\\\"PValue\\\"]\"\>", 
     ",", "\<\"\[ScriptCapitalH][\\\"TestStatisticTable\\\"]\"\>", 
     ",", "\<\"\[ScriptCapitalH][\\\"TestStatistic\\\"]\"\>", 
     ",", "\<\"data = RandomVariate[NormalDistribution[], 100];\"\>", 
     ",", "\<\"LeveneTest[data, 1, AlternativeHypothesis \[Rule] \
\\\"Unequal\\\"]\"\>", 
     ",", "\<\"LeveneTest[data, 1, AlternativeHypothesis \[Rule] Automatic]\"\
\>", ",", "\<\"data = RandomVariate[NormalDistribution[0, 1.25], 100];\"\>", 
     ",", "\<\"LeveneTest[data, Automatic, AlternativeHypothesis \[Rule] \
\\\"Unequal\\\"]\"\>", 
     ",", "\<\"LeveneTest[data, Automatic, AlternativeHypothesis \[Rule] \
\\\"Less\\\"]\"\>", 
     ",", "\<\"LeveneTest[data, Automatic, AlternativeHypothesis \[Rule] \
\\\"Greater\\\"]\"\>", 
     ",", "\<\"data1 = RandomVariate[NormalDistribution[0, .9], \
100];\\r\\ndata2 = RandomVariate[NormalDistribution[0, 1], 100];\"\>", 
     ",", "\<\"Variance[data1]/Variance[data2]\"\>", 
     ",", "\<\"LeveneTest[{data1, data2}, 1, AlternativeHypothesis \[Rule] \\\
\"Less\\\"]\"\>", 
     ",", "\<\"LeveneTest[{data1, data2}, 1.5, AlternativeHypothesis \[Rule] \
\\\"Less\\\"]\"\>", 
     ",", "\<\"data = BlockRandom[SeedRandom[5]; \\r\\n   \
RandomVariate[StudentTDistribution[3], 50]];\"\>", 
     ",", "\<\"LeveneTest[data, 1, SignificanceLevel \[Rule] .005]\"\>", 
     ",", "\<\"LeveneTest[data, 1, SignificanceLevel \[Rule] Automatic]\"\>", 
     ",", "\<\"data = BlockRandom[SeedRandom[1]; \\r\\n   \
RandomVariate[NormalDistribution[0, 1], 100]];\"\>", 
     ",", "\<\"\[ScriptCapitalH]1 = LeveneTest[data, 1.5, \
\\\"HypothesisTestData\\\", \\r\\n   SignificanceLevel \[Rule] .05];\"\>", 
     ",", "\<\"\[ScriptCapitalH]2 = LeveneTest[data, 1.5, \
\\\"HypothesisTestData\\\", \\r\\n   SignificanceLevel \[Rule] .01];\"\>", 
     ",", "\<\"\[ScriptCapitalH]1[\\\"TestConclusion\\\"] // \
TraditionalForm\"\>", 
     ",", "\<\"\[ScriptCapitalH]2[\\\"TestConclusion\\\"] // \
TraditionalForm\"\>", 
     ",", "\<\"\[ScriptCapitalH]1[\\\"ShortTestConclusion\\\"]\"\>", 
     ",", "\<\"\[ScriptCapitalH]2[\\\"ShortTestConclusion\\\"]\"\>", 
     ",", "\<\"data1 = RandomVariate[StudentTDistribution[3], \
1000];\\r\\ndata2 = RandomVariate[NormalDistribution[0, Sqrt[3]], 1000];\"\>",
      ",", "\<\"LeveneTest[{data1, data2}, 1/4, VerifyTestAssumptions \[Rule] \
All]\"\>", 
     ",", "\<\"LeveneTest[{data1, data2}, 1/4, VerifyTestAssumptions \[Rule] \
None]\"\>", 
     ",", "\<\"data1 = RandomVariate[StudentTDistribution[3], \
1000];\\r\\ndata2 = RandomVariate[NormalDistribution[0, Sqrt[3]], 1000];\"\>",
      ",", "\<\"LeveneTest[{data1, data2}, 1/4, VerifyTestAssumptions \[Rule] \
\\\"Normality\\\"]\"\>", 
     ",", "\<\"LeveneTest[{data1, data2}, 1/4, \\r\\n VerifyTestAssumptions \
\[Rule] \\\"Normality\\\" \[Rule] True]\"\>", 
     ",", "\<\"data = RandomVariate[NormalDistribution[], {1000, 100}];\"\>", 
     ",", "\<\"AbsoluteTiming[\\r\\n T = Quiet@LeveneTest[#, Automatic, \
\\\"TestStatistic\\\"] & /@ data;]\"\>", 
     ",", "\<\"AbsoluteTiming[\\r\\n T2 = Quiet@\\r\\n      LeveneTest[#, \
Automatic, \\\"TestStatistic\\\", \\r\\n       VerifyTestAssumptions \[Rule] \
None] & /@ data;]\"\>", ",", "\<\"SmoothHistogram[{T, T2}]\"\>", 
     ",", "\<\"HomogeneityOfVarianceTest[data_] := \\r\\n With[{nh = \
Ceiling[Length[data]/2]}, \\r\\n  LeveneTest[TakeDrop[data, nh], 1, \
\\\"TestDataTable\\\", \\r\\n   VerifyTestAssumptions \[Rule] None]]\"\>", 
     ",", "\<\"data = ({#1\[LeftDoubleBracket]1\[RightDoubleBracket], #1\
\[LeftDoubleBracket]2\[RightDoubleBracket], #1\[LeftDoubleBracket]3\
\[RightDoubleBracket], \\r\\n      1.2 + (3.7 + RandomReal[{-1, 1}]) #1\
\[LeftDoubleBracket]1\[RightDoubleBracket] - 2 #1\[LeftDoubleBracket]2\
\[RightDoubleBracket] + \\r\\n       23.4 #1\[LeftDoubleBracket]3\
\[RightDoubleBracket]} &) /@ RandomReal[10, {100, 3}];\"\>", 
     ",", "\<\"lm = LinearModelFit[data, {x, y, z}, {x, y, z}];\"\>", 
     ",", "\<\"Row[Table[\\r\\n  \
ListPlot[Transpose[{data\[LeftDoubleBracket]All, i\[RightDoubleBracket], \
lm[\\\"FitResiduals\\\"]}], \\r\\n   Frame \[Rule] True, FrameLabel \[Rule] \
{{x, y, z}\[LeftDoubleBracket]i\[RightDoubleBracket], \\\"Residual\\\"}], {i, \
3}]]\"\>", 
     ",", "\<\"res = (SortBy[#1, First]\[LeftDoubleBracket]All, 2\
\[RightDoubleBracket] &) /@ \\r\\n   \
Table[Transpose[{data\[LeftDoubleBracket]All, i\[RightDoubleBracket], \
lm[\\\"FitResiduals\\\"]}], {i, 3}];\"\>", 
     ",", "\<\"HomogeneityOfVarianceTest /@ res\"\>", 
     ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data = RandomVariate[NormalDistribution[], 100];\"\>", 
     ",", "\<\"LeveneTest[data]\"\>", ",", "\<\"FisherRatioTest[data]\"\>", 
     ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data = RandomVariate[NormalDistribution[], {1000, 100}];\"\>", 
     ",", "\<\"T = LeveneTest[#, Automatic, \\\"TestStatistic\\\", \\r\\n     \
VerifyTestAssumptions \[Rule] None] & /@ data;\"\>", 
     ",", "\<\"Show[SmoothHistogram[T, PlotStyle \[Rule] Orange], \\r\\n \
Plot[PDF[ChiSquareDistribution[99], x], {x, 50, 160}], \\r\\n PlotRange \
\[Rule] All]\"\>", 
     ",", "\<\"EstimatedDistribution[T, ChiSquareDistribution[df]]\"\>", 
     ",", "\<\"DistributionFitTest[T, ChiSquareDistribution[99]]\"\>", 
     ",", "\<\"n = 100;\\r\\nm = 75;\\r\\nSeedRandom[3];\\r\\ndata1 = \
RandomVariate[NormalDistribution[], {1000, n}];\\r\\ndata2 = \
RandomVariate[NormalDistribution[], {1000, m}];\"\>", 
     ",", "\<\"T = MapThread[\\r\\n   LeveneTest[{#1, #2}, Automatic, \
\\\"TestStatistic\\\", \\r\\n     VerifyTestAssumptions \[Rule] None] &, \
{data1, data2}];\"\>", 
     ",", "\<\"Show[Histogram[T, {0.2}, \\\"PDF\\\"], \\r\\n \
Plot[PDF[FRatioDistribution[1, n + m - 2], x], {x, 0, 8}, \\r\\n  PlotRange \
\[Rule] {0, 1.5}]]\"\>", 
     ",", "\<\"DistributionFitTest[T, \\r\\n FRatioDistribution[1, n + m - \
2], \\\"TestConclusion\\\"]\"\>", ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data1 = RandomVariate[LaplaceDistribution[1, 2], {1000, 100}];\
\\r\\ndata2 = RandomVariate[LaplaceDistribution[1, 2], {1000, 75}];\"\>", 
     ",", "\<\"fisher = MapThread[\\r\\n   FisherRatioTest[{#1, #2}, \
VerifyTestAssumptions \[Rule] None] &, {data1, \\r\\n    data2}];\"\>", 
     ",", "\<\"levene = MapThread[\\r\\n   LeveneTest[{#1, #2}, \
VerifyTestAssumptions \[Rule] None] &, {data1, \\r\\n    data2}];\"\>", 
     ",", "\<\"Histogram[{fisher, levene}, Automatic, \\\"PDF\\\"]\"\>", 
     ",", "\<\"Subscript[n, 1] = 100; Subscript[n, 2] = 75; \
Subscript[\[Sigma], 0] = 2;\"\>", ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data1 = RandomVariate[NormalDistribution[0, \
Subscript[\[Sigma], 0]], \\r\\n   Subscript[n, 1]];\\r\\ndata2 = \
RandomVariate[NormalDistribution[0, 1], Subscript[n, 2]];\"\>", 
     ",", "\<\"Subscript[n, t] = Subscript[n, 1] + Subscript[n, 2];\"\>", 
     ",", "\<\"levene[d1_, d2_] := Block[{\[Mu]Z1, \[Mu]Z2, z1, z2, \[Mu]ZZ},\
\\r\\n  z1 = Abs[Standardize[d1, Mean, 1 &]];\\r\\n  z2 = Subscript[\[Sigma], \
0] Abs[Standardize[d2, Mean, 1 &]];\\r\\n  \[Mu]Z1 = Mean[z1]; \[Mu]Z2 = \
Mean[z2];\\r\\n  \[Mu]ZZ = (Subscript[n, 1] \[Mu]Z1 + Subscript[n, 2] \
\[Mu]Z2)/Subscript[n, t];\\r\\n  (Subscript[n, t] - 2) (\\r\\n   Subscript[n, \
1] (\[Mu]Z1 - \[Mu]ZZ)^2 + \\r\\n    Subscript[n, \\r\\n     2] (\[Mu]Z2 - \
\[Mu]ZZ)^2)/((z1 - \[Mu]Z1).(z1 - \[Mu]Z1) + (z2 - \[Mu]Z2).(z2 - \
\[Mu]Z2))\\r\\n  ]\"\>", ",", "\<\"levene[data1, data2]\"\>", 
     ",", "\<\"LeveneTest[{data1, data2}, Subscript[\[Sigma], 0]^2, \
\\\"TestStatistic\\\"]\"\>", 
     ",", "\<\"Subscript[n, 1] = 100; Subscript[n, 2] = 75; Subscript[n, 3] = \
150;\"\>", ",", "\<\"SeedRandom[3];\"\>", 
     ",", "\<\"data1 = RandomVariate[NormalDistribution[-4, 3], Subscript[n, \
1]];\\r\\ndata2 = RandomVariate[NormalDistribution[1, 3], Subscript[n, \
2]];\\r\\ndata3 = RandomVariate[NormalDistribution[5, 3], Subscript[n, 3]];\"\
\>", ",", "\<\"Subscript[n, t] = Subscript[n, 1] + Subscript[n, 2] + \
Subscript[n, 3];\"\>", 
     ",", "\<\"levene3[d1_, d2_, d3_] := Block[{\[Mu]Z1, \[Mu]Z2, \[Mu]Z3, \
z1, z2, z3, \[Mu]ZZ},\\r\\n  z1 = Abs[d1 - Mean[d1]];\\r\\n  z2 = Abs[d2 - \
Mean[d2]];\\r\\n  z3 = Abs[d3 - Mean[d3]];\\r\\n  \[Mu]Z1 = Mean[z1]; \[Mu]Z2 \
= Mean[z2]; \[Mu]Z3 = Mean[z3];\\r\\n  \[Mu]ZZ = (Subscript[n, 1] \[Mu]Z1 + \
Subscript[n, 2] \[Mu]Z2 + \\r\\n    Subscript[n, 3] \[Mu]Z3)/Subscript[n, t];\
\\r\\n  (Subscript[n, t] - 3)/2 (\\r\\n   Subscript[n, 1] (\[Mu]Z1 - \
\[Mu]ZZ)^2 + Subscript[n, 2] (\[Mu]Z2 - \[Mu]ZZ)^2 + \\r\\n    Subscript[n, \
3] (\[Mu]Z3 - \[Mu]ZZ)^2)/(\\r\\n   Total[(z1 - \[Mu]Z1)^2] + Total[(z2 - \
\[Mu]Z2)^2] + Total[(z3 - \[Mu]Z3)^2])\\r\\n  ]\"\>", 
     ",", "\<\"levene3[data1, data2, data3]\"\>", 
     ",", "\<\"LeveneTest[{data1, data2, data3}, 1, \
\\\"TestStatistic\\\"]\"\>", 
     ",", "\<\"ts = TemporalData[TimeSeries, \
{CompressedData[\\\"\\r\\n1:eJwBOQPG/CFib1JlAgAAAAEAAABlAAAA/PYqxN+X8z+\
3X5GhyqzeP5CuGSVs\\r\\nCOU/6gW3Q9ODyz8UoDPB1lvnP2gtJOf678+/fg8X7itC9b+ifaVg7K/\
hP7Cb\\r\\nPvIVq8g/8VzLfwbl8j9xv1++fqzyv/ogumfvLOc/2lH/DYsE+T/snMgxQUT5\\r\\\
nP9/vcvl0N9I/ZVpzOut45b+sSWmvNKr/v6C86n7l+PM/BAzAnUQF7T+Fqh1s\\r\\\
nklDzv9yUjaoGwte/41o52nyk9L+ZSKZCVRkFwEdAlZ8HrP2/JoZVOtXo17+y\\r\\\
nFeEX9rrKP5nG9i58Vr2/UzT02hTHAMBekGiCnJ3Vv8FUfITGtOS/11bF8H81\\r\\n9L8y33C+\
4Rvfv1Hx6g0fU+6/1o7s2IQi4D+kmplJf+P3P4025NI5ONY/l1kK\\r\\nMU8BAkAW26+\
8OGXqP16doWiVPeQ/L9akxry90L8hDSyLQALfP8UG4Pc349I/\\r\\nenHoUMJmpT+\
QpZzYePPMv73mvJYmMMc/bixiaHru+D+wWmt9r37QPy6dWHWS\\r\\nlNq/BpHOWLlK07+\
EsjkVUSj6P5hjJUE0LPC/CvElnlMG9j/XkSE4Jd34P4ZK\\r\\n7oH8KNy/ssEspu6I0L+\
U6Qfx0lfyv4w/XIYCNNS/z6B++aSqyz8ulQXeVWjn\\r\\nPxlgbFUeEu6/22dM/8dh1D9fHJO/\
U7zev8pzJ0XQH9Y/lPIKHHp65L/s0V0p\\r\\nOjGsPy/37+vQAOA/gYS95GCB4j+\
BELaE81XiP0QWnKlv5JU/M8GIybwR0z+u\\r\\nL9uIFnzKvwKmgTH1mPG/\
J3NbAqTZBkDcL6wweakJQFgP8najD8u/GibcudpJ\\r\\nq7/QdeEyH8PEv+DU8Hynouu/\
hMi7njOl3L/5TIUW9hPTv7pS6rslndc/bOqN\\r\\nXWplAkCgvOdNarG/v9qFnOEhXdQ/\
3zQlbLj7zT+pSIyzS9ikP3OnpBVj9vE/\\r\\no+ll8qcvAMC4ppB+3Mr2v4nBE1WPZfa/\
b4TEMXSYBcBIu++/BeXgv2Xqvs/S\\r\\nTOg/wC/sPBqKnL8ABU+u66/iv65b2Y+eLdm/\
3Ve3tZvW8D/o8ybMdeftP5zA\\r\\nCZ4Iqtg/ns7gYZsk379CUsbj/sjmvyBzvkY=\\r\\n\\\"],\
 {{0, 100, 1}}, 1, {\\\"Continuous\\\", 1}, {\\\"Discrete\\\", 1}, 1, {\\r\\n \
   ValueDimensions -> 1, ResamplingMethod -> None}}, False, 10.1];\"\>", 
     ",", "\<\"LeveneTest[ts]\"\>", 
     ",", "\<\"LeveneTest[ts[\\\"Values\\\"]]\"\>", 
     ",", "\<\"td = TemporalData[Automatic, \
{CompressedData[\\\"\\r\\n1:eJwVwws8FIYfAPDzbl6JafJoXun4zPpbVl79f+hIDGcey/\
5NpZRX8xpdRF7N\\r\\nP/2V1GxKdWjbf0oYuRr5oUuX/9XhrOMcx53jOIe7444P6b99P5+\
vTWzKl3Hq\\r\\nBALh73F/vb3DJ9jIuR9t7bxX45TTyDxKOK6+uYn5XObnCcE5kEfNmC+b4CDp\\\
r\\nfNtI3nURWFwxrnE6LQF17Zaqvh8WwHRdo7jHcx2M1ILJ2nXvoHaHcDs9kAX7\\r\\n/uN+\
rMRDjOsxjZ6VHkNoePjIdJUaF6Isb6hZzc3h7schdXezZUgl2H/anqjE\\r\\neK57V9o3K+\
DyjCL3slfAqrEt64W9EsxcD7jUewrgpYEVr3j7JDiHFzoef8+D\\r\\\
nWMeVnJM2wzjir4rV3auEZv/cQec8IaTmJBskMReg97DN5p0JHjRl8124wjk8\\r\\\
n1V02tnxlDGvfFX47XNAM2d9TQprqOzGHkX22CKX4W7X3F696+ZDTqVbt59MM\\r\\ni+i/VtHJxc/\
oZEnKwzewdMnMOs84FQ09nMRtkWsQE91v/35dBfHpWv2xcVNQ\\r\\\
nbR2QMc5mI5MlvEjO5IAzOVF3oEeIv1wy+q7mtAAuM/oL1R+owDxKZZi0iwti\\r\\\
nu4OmapnDsO1XCdx8rIDywKi03sxpiKrYaUyrZGOK4BO3jbeLyChXv17YKoJv\\r\\\
n99EWnS1mkXLyROT2G0s40VU2br5LhkZtqiNRD8XQ5FNdlVeowCDVPbOFF3+i\\r\\\
n6vdHtxuWeNDgpKX/YkaI9KCqmef/4mOp6ESYz73fUXs9I2oyF+Go9Df7wQI5\\r\\\
n5vkkP4geWkEqn1RccWYM3+Vn0Tepat7CeW02pU/de9Z1V0DtlmUQRNgKc4yF\\r\\\
nmGdurn7x5gB6ZXnpyorUvekFwcNfkbvh5tWwtAj+c9QP/9BiQGMYLaUk2OJF\\r\\\
nR6sTurMyggDO6J356fNLLCSxwkOJWc1wgJN1PEMkwazw6w3B9WpdVZ1ntaRa\\r\\\
nAvB60HH8wvl2oOu332reXAfS7hb/0Pe9sGH1z2j2y1m0i3vb/5OWCqkkWgch\\r\\naB6t7nJ/\
OWTNxVB6W2lF7jJ4TGsYLt3gAu5l+XiuypBEmM0qrmhHd1thxZZj\\r\\nBG9a55ZaZo8KAlj/\
mDJLb0Td5unSqIg+LKuhNkk6ljGsxV/m3zGFElJ0vonH\\r\\\
nDApmmIupk5pdPJvggP1PNbpCGJxGh9IN3B/z0Qcx63wcqom2FAbJoO+/el5Z\\r\\\
nIhZys6qOlSS2A0VBrLlPXgD//D1UgzEh7DTdF3NrhgfQsJxquo2BI9sC61ey\\r\\\
nl4FsJJsJTH2Kh1u8/NO/r8V4whwzYb8IshSmtA27CdjfaPSQ9UwBy3HJ/x6d\\r\\nWIG+\
qRA32jkxBJL1B7uTJsBbKs3IGJiCtEPXfPeoD6FOYwRHWKVE01uvRg87\\r\\\
nyoEW8uPc7rweaHHSeUNgNkPIGSvBrQt8WGo1NtA9KMamcHKSePAuftdJO0TJ\\r\\\
nnEXjCXbb8NoCUl6Kiv6nVQePchlO0zoy2PvsepDOqQ0ssSaZ+G1odHk47yos\\r\\nvjQGW/\
OTmoOeSLEnwcw2lsjGlfDO1g/itLoWzw1GvteUImOjYDdIpxCD/Tb+\\r\\n9BKh0HImrG5Nhmh6/\
ip3fhNv+Fxuzl0WoEg7rFgzkIGRvTP1I6QNeKuz3SmF\\r\\n8wraEq+\
xlQFKLM39ssES55D4UbpEPinBUFers37jg0ChVZdXlvdgfuonB0n9\\r\\\
nS8hQSuZtNGah9decpgNXp5Gap80RD6ThgEPj1lB9ESZXrHyT2vozWkR8HaMT\\r\\\
ntA7FKyNp9n7j2B3jsiC8OIHUE/M069VhfKW7lr7DV8+b/nXvbYFQDorReu1C\\r\\nz0Ugskl/\
GOzkY5HyxcSkxSjY2p/T0uDIYT5G0yRlKxNJvKeP42xloLln3c23\\r\\nUgVljXevJR9UQA+\
xIW1b/BoWEs3bTyey4Inzx7UFCS/xSWw+Q3xZDqcu1t6v\\r\\neT0NzPhV1s6cAeQEtOzxmGYjW+\
9yws8PpyAmV+l259kI9E2mN5hx7oOZ8Ku1\\r\\nK4ox4BFJfBPfZRj17dPT2DuGjic/\
fC6NVgDjNM212uUd9LAT7erMx8HB887J\\r\\nN64zQOW/fkphKtDB9JGJQ6oE6kpIS+6zk+\
j8JN19jSLHSrdYsksRD4mfXfAZ\\r\\\
nKqFjx72kSMebcmwyPN9xtFwO7KDMI6uPZBB87IKmVacMvnDMf01s68b/A/Gh\\r\\nXVM=\\r\\n\
\\\"], {{0, 100, 1}}, 2, {\\\"Continuous\\\", 2}, {\\\"Discrete\\\", 1}, 1, {\
\\r\\n    ValueDimensions -> 1, ResamplingMethod -> None}}, False, \
10.1];\"\>", ",", "\<\"LeveneTest[td]\"\>", 
     ",", "\<\"data = td[\\\"ValueList\\\"] // Flatten;\\r\\nLeveneTest[data]\
\"\>", ",", "\<\"{data1, data2} = td[\\\"ValueList\\\"];\"\>", 
     ",", "\<\"LeveneTest[{data1, data2}]\"\>", 
     ",", "\<\"data = RandomVariate[LaplaceDistribution[1, 2], {2, \
100}];\"\>", ",", "\<\"LeveneTest[data, 1, \\\"TestDataTable\\\"]\"\>", 
     ",", "\<\"ConoverTest[data, 1, \\\"TestDataTable\\\"]\"\>", 
     ",", "\<\"SiegelTukeyTest[data, 1, \\\"TestDataTable\\\"]\"\>", 
     ",", "\<\"data = RandomVariate[NormalDistribution[1, 2], {4, 100}];\"\>",
      ",", "\<\"Length[data]\"\>", 
     ",", "\<\"LeveneTest[data, 2, \\\"TestDataTable\\\"]\"\>", 
     ",", "\<\"data = RandomVariate[NormalDistribution[1, 2], {4, 100}];\"\>",
      ",", "\<\"LeveneTest[data, 1, AlternativeHypothesis \[Rule] \\\"Unequal\
\\\"]\"\>", 
     ",", "\<\"LeveneTest[data, 1, AlternativeHypothesis \[Rule] \
\\\"Greater\\\"]\"\>", 
     ",", "\<\"LeveneTest[data, 1, AlternativeHypothesis \[Rule] \
\\\"Less\\\"]\"\>", 
     ",", "\<\"data = RandomVariate[NormalDistribution[], {250, 100}];\"\>", 
     ",", "\<\"T1 = LeveneTest[#, 1, \\\"TestStatistic\\\", \\r\\n     \
VerifyTestAssumptions \[Rule] None] & /@ data;\"\>", 
     ",", "\<\"T2 = LeveneTest[#, 3, \\\"TestStatistic\\\", \\r\\n     \
VerifyTestAssumptions \[Rule] None] & /@ data;\"\>", 
     ",", "\<\"SmoothHistogram[{T1, T2}, Filling \[Rule] Axis, \\r\\n \
PlotLegends \\r\\n  \[Rule] {\\\"\\!\\(\\*SubscriptBox[\\(H\\), \\(0\\)]\\) \
is True\\\", \\r\\n   \\\"\\!\\(\\*SubscriptBox[\\(H\\), \\(0\\)]\\) is False\
\\\"}]\"\>"}], "}"}]}], "}"}]], "Output",
 CellContext->"Cell$$10907`",
 CellChangeTimes->{
  3.7078362113084993`*^9},ExpressionUUID->"7bdc60c2-a784-4322-bbf5-\
81b4ea11c80c"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookImport", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "$InstallationDirectory", ",", "\"\<Documentation\>\"", ",", 
      "\"\<English\>\"", ",", "\"\<System\>\"", ",", "\"\<ReferencePages\>\"",
       ",", "\"\<Symbols\>\"", ",", "\"\<Subsets.nb\>\""}], "}"}], "]"}], ",", 
   RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<InputText\>\""}]}], 
  "]"}]], "Input",
 CellID->234116337,ExpressionUUID->"18096b74-0b97-46d0-a4ad-9ea41d038e6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Subsets[{a, b, c}]\"\>", 
   ",", "\<\"Subsets[{a, b, c, d}, 2]\"\>", 
   ",", "\<\"Subsets[{a, b, c, d}, {2}]\"\>", 
   ",", "\<\"Subsets[{a, b, c, d, e}, {3}, 5]\"\>", 
   ",", "\<\"Subsets[{a, b, c, d, e}, {0, 5, 2}]\"\>", 
   ",", "\<\"Subsets[Range[20], All, {69381}]\"\>", 
   ",", "\<\"Subsets[{a, b, c, d}]\"\>", 
   ",", "\<\"Subsets[{a, b, c, d}, All, {15, 1, -2}]\"\>", 
   ",", "\<\"Subsets[f[a, b, c]]\"\>", ",", "\<\"Subsets[a + b + c]\"\>", 
   ",", "\<\"Subsets[{1, 2, 3, 4}, {3}]\"\>", ",", "\<\"Binomial[4, 3]\"\>", 
   ",", "\<\"Graphics[Line[\\r\\n  Subsets[Table[{Cos[2 Pi i/8], Sin[2 Pi \
i/8]}, {i, 8}], {2}]]]\"\>", 
   ",", "\<\"Total[Subsets[Times[a, b, c, d, e], {3}]]\"\>", 
   ",", "\<\"Subsets[Divisors[10]]\"\>", 
   ",", "\<\"Subsets[{1, 2, 4, 8, 16}, {3}]\"\>", ",", "\<\"Total /@ %\"\>", 
   ",", "\<\"Graphics3D[Line /@ Subsets[RandomReal[100, {20, 3}], {2}]]\"\>", 
   ",", "\<\"Graphics3D[Line[Subsets[Tuples[{1, 0}, 3], {2}]]]\"\>", 
   ",", "\<\"Subsets[{c, b, a}]\"\>", ",", "\<\"Subsets[{a, b, b, b}]\"\>", 
   ",", "\<\"Tuples[{a, b, c}, 2]\"\>", 
   ",", "\<\"Subsets[{a, b, c}, {2}]\"\>", 
   ",", "\<\"Subsets[Range[4], All, 8]\"\>", 
   ",", "\<\"Take[Subsets[Range[4], All], 8]\"\>", 
   ",", "\<\"Subsets[Range[3], All, 10]\"\>", 
   ",", "\<\"Off[Subsets::take]\"\>", 
   ",", "\<\"Subsets[Range[3], All, 10]\"\>", 
   ",", "\<\"Graphics[{Opacity[0.01], \\r\\n  Polygon /@ \
Subsets[RandomInteger[100, {20, 2}], {3}]}]\"\>", 
   ",", "\<\"Graphics3D[{Opacity[.1], \\r\\n  Polygon /@ \
Subsets[RandomInteger[100, {10, 3}], {3}]}]\"\>", 
   ",", "\<\"Graphics3D[Polygon[Subsets[Tuples[{1, 0, -1}, 3], {3}]]]\"\>"}], 
  "}"}]], "Output",
 CellContext->"Cell$$10907`",
 CellChangeTimes->{
  3.707835795373502*^9},ExpressionUUID->"2cd7945e-826f-43ed-b489-\
ae8f5e77f15e"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "//", "FullForm"}]], "Input",
 CellChangeTimes->{{3.707835795501593*^9, 
  3.7078357987709*^9}},ExpressionUUID->"9368c9eb-b84e-4fa6-9eca-76b81f34d87e"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{
    "\"\<Subsets[{a, b, c}]\>\"", ",", "\"\<Subsets[{a, b, c, d}, 2]\>\"", 
     ",", "\"\<Subsets[{a, b, c, d}, {2}]\>\"", ",", 
     "\"\<Subsets[{a, b, c, d, e}, {3}, 5]\>\"", ",", 
     "\"\<Subsets[{a, b, c, d, e}, {0, 5, 2}]\>\"", ",", 
     "\"\<Subsets[Range[20], All, {69381}]\>\"", ",", 
     "\"\<Subsets[{a, b, c, d}]\>\"", ",", 
     "\"\<Subsets[{a, b, c, d}, All, {15, 1, -2}]\>\"", ",", 
     "\"\<Subsets[f[a, b, c]]\>\"", ",", "\"\<Subsets[a + b + c]\>\"", ",", 
     "\"\<Subsets[{1, 2, 3, 4}, {3}]\>\"", ",", "\"\<Binomial[4, 3]\>\"", 
     ",", "\"\<Graphics[Line[\\r\\n  Subsets[Table[{Cos[2 Pi i/8], Sin[2 Pi \
i/8]}, {i, 8}], {2}]]]\>\"", ",", 
     "\"\<Total[Subsets[Times[a, b, c, d, e], {3}]]\>\"", ",", 
     "\"\<Subsets[Divisors[10]]\>\"", ",", 
     "\"\<Subsets[{1, 2, 4, 8, 16}, {3}]\>\"", ",", "\"\<Total /@ %\>\"", 
     ",", "\"\<Graphics3D[Line /@ Subsets[RandomReal[100, {20, 3}], \
{2}]]\>\"", ",", "\"\<Graphics3D[Line[Subsets[Tuples[{1, 0}, 3], {2}]]]\>\"", 
     ",", "\"\<Subsets[{c, b, a}]\>\"", ",", "\"\<Subsets[{a, b, b, b}]\>\"", 
     ",", "\"\<Tuples[{a, b, c}, 2]\>\"", ",", 
     "\"\<Subsets[{a, b, c}, {2}]\>\"", ",", 
     "\"\<Subsets[Range[4], All, 8]\>\"", ",", 
     "\"\<Take[Subsets[Range[4], All], 8]\>\"", ",", 
     "\"\<Subsets[Range[3], All, 10]\>\"", ",", "\"\<Off[Subsets::take]\>\"", 
     ",", "\"\<Subsets[Range[3], All, 10]\>\"", ",", 
     "\"\<Graphics[{Opacity[0.01], \\r\\n  Polygon /@ \
Subsets[RandomInteger[100, {20, 2}], {3}]}]\>\"", ",", 
     "\"\<Graphics3D[{Opacity[.1], \\r\\n  Polygon /@ \
Subsets[RandomInteger[100, {10, 3}], {3}]}]\>\"", ",", 
     "\"\<Graphics3D[Polygon[Subsets[Tuples[{1, 0, -1}, 3], {3}]]]\>\""}], 
    "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{
  3.7078357993443036`*^9},ExpressionUUID->"9b7395d1-2c27-4833-bed3-\
aa78b005487a"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataFunctions", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"StringLength", "[", "#", "]"}], ">", "2"}], "&&", 
       RowBox[{
        RowBox[{"StringCount", "[", 
         RowBox[{"#", ",", "\"\<$\>\""}], "]"}], "\[Equal]", "0"}]}], "&"}]}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707820929366151*^9, 3.707820946933673*^9}, {
  3.7078211104711523`*^9, 3.707821156891589*^9}, {3.7078212477082586`*^9, 
  3.707821263081946*^9}},ExpressionUUID->"8537153c-a22a-47b1-81b8-\
18e6e584b8da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataFunctions", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.7078353695693636`*^9, 
  3.707835372667567*^9}},ExpressionUUID->"08b8150b-7e8b-409f-a3bd-\
0f052a544353"],

Cell[BoxData["5682"], "Output",
 CellChangeTimes->{
  3.7078353822262945`*^9, 3.7078365447600784`*^9, 3.7078429410870647`*^9, 
   3.7078481135794525`*^9, 3.707856801468642*^9, 3.707867239169551*^9, 
   3.707871892839511*^9, {3.7079186971290736`*^9, 
   3.707918716158801*^9}},ExpressionUUID->"bc8ee044-f08f-4842-a965-\
62307f4f0029"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"allexamples", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "/@", 
      RowBox[{"Association", "[", 
       RowBox[{"WolframLanguageData", "[", 
        RowBox[{
         RowBox[{"dataFunctions", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         "\"\<DocumentationExampleInputs\>\""}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707154784729302*^9, 3.7071547907555385`*^9}, 
   3.707154834511428*^9, {3.7072606157371807`*^9, 3.70726061621389*^9}, {
   3.707260672672909*^9, 3.707260683213067*^9}, {3.7072607491822343`*^9, 
   3.7072607721164722`*^9}, {3.707307473974388*^9, 3.7073075005347795`*^9}, {
   3.707307564919465*^9, 3.707307565185091*^9}, {3.7073077014209213`*^9, 
   3.7073077184836025`*^9}, {3.7073077729529357`*^9, 3.707307820306341*^9}, {
   3.707418400290495*^9, 3.70741840216482*^9}, {3.70741901496215*^9, 
   3.7074190212716007`*^9}, {3.7074202569848766`*^9, 
   3.7074202592314663`*^9}, {3.7074233048391542`*^9, 
   3.7074233082336025`*^9}, {3.707821361499792*^9, 3.707821403191497*^9}, {
   3.7078340627640057`*^9, 3.7078340631632814`*^9}, {3.7078341446708045`*^9, 
   3.7078341467282367`*^9}, {3.707843096066435*^9, 3.7078431463460236`*^9}, {
   3.707844157060706*^9, 
   3.707844167005432*^9}},ExpressionUUID->"ae91ce2a-d5dc-44d5-8c5c-\
a837d8444439"],

Cell[BoxData[
 RowBox[{
  RowBox[{"genexamples", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Lookup", "[", 
     RowBox[{"allexamples", ",", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Keys", "@", "allexamples"}], "]"}]}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7073075926072593`*^9, 3.70730761492*^9}, {
   3.707391965858786*^9, 3.7073919714518204`*^9}, {3.7074008906479635`*^9, 
   3.7074008986489596`*^9}, {3.7074233286119766`*^9, 3.707423329489604*^9}, 
   3.7074246556625133`*^9, {3.707429437798353*^9, 3.7074294481568165`*^9}, 
   3.7078223717284536`*^9, {3.7078224019207726`*^9, 3.7078224297524443`*^9}, {
   3.7078225174593596`*^9, 
   3.7078225491096945`*^9}},ExpressionUUID->"ca612552-9a64-4a6c-8e8c-\
1d3303c0ffa4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"curatedgenexamples", "=", 
   RowBox[{"StringDelete", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookImport", "[", 
         RowBox[{
          RowBox[{"Notebook", "[", 
           RowBox[{"{", 
            RowBox[{"genexamples", "[", 
             RowBox[{"[", 
              RowBox[{"#", ",", "1"}], "]"}], "]"}], "}"}], "]"}], ",", 
          RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<InputText\>\""}]}], "]"}], 
        "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "genexamples", "]"}], "]"}]}], "]"}], ",", 
     "WhitespaceCharacter"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707308018621872*^9, 3.7073081305561094`*^9}, 
   3.707424647685878*^9, {3.7078225674926853`*^9, 
   3.7078225811563215`*^9}},ExpressionUUID->"911b420e-d004-41f7-838c-\
4786db0e324e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "curatedgenexamples"}]], "Input",
 CellChangeTimes->{{3.7078340431751766`*^9, 
  3.707834046329404*^9}},ExpressionUUID->"2560811e-58c0-4733-9569-\
09992319b70a"],

Cell[BoxData["552"], "Output",
 CellChangeTimes->{3.7078340467436843`*^9, 3.7078340851237736`*^9, 
  3.707834161129827*^9, 3.707836568478823*^9, 3.7078442112410917`*^9, 
  3.7078672536957235`*^9, 3.70787190568017*^9, 
  3.7079187426504884`*^9},ExpressionUUID->"a744668d-0b00-4723-96c0-\
73fdf85fc48e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "*Layer*"}]], "Input",
 CellChangeTimes->{{3.7078676133709946`*^9, 
  3.707867623395341*^9}},ExpressionUUID->"8eea6576-1267-437d-bc02-\
287daddcbef0"],

Cell[CellGroupData[{

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["System`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["System`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["AggregationLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"AggregationLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["EmbeddingLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"EmbeddingLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ReplicateLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"ReplicateLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["BasicRecurrentLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"BasicRecurrentLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["FlattenLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"FlattenLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ReshapeLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"ReshapeLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["BatchNormalizationLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"BatchNormalizationLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["GatedRecurrentLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"GatedRecurrentLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ResizeLayer",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info173707853223-7757805", {"ResizeLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["CatenateLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"CatenateLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ImageAugmentationLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"ImageAugmentationLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SequenceAttentionLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"SequenceAttentionLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["ConstantArrayLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"ConstantArrayLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["InstanceNormalizationLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {
            "InstanceNormalizationLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SequenceLastLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"SequenceLastLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["ConstantPlusLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"ConstantPlusLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LayeredGraphPlot",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"LayeredGraphPlot", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SequenceMostLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"SequenceMostLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["ConstantTimesLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"ConstantTimesLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LayerSizeFunction",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"LayerSizeFunction", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SequenceRestLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"SequenceRestLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["ContrastiveLossLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"ContrastiveLossLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LinearLayer",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info173707853223-7757805", {"LinearLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SequenceReverseLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"SequenceReverseLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["ConvolutionLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"ConvolutionLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LocalResponseNormalizationLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {
            "LocalResponseNormalizationLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SoftmaxLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"SoftmaxLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["CrossEntropyLossLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"CrossEntropyLossLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["LongShortTermMemoryLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {
            "LongShortTermMemoryLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SpatialTransformationLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {
            "SpatialTransformationLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DeconvolutionLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"DeconvolutionLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["MeanAbsoluteLossLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"MeanAbsoluteLossLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["SummationLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"SummationLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DotLayer",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info173707853223-7757805", {"DotLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["MeanSquaredLossLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"MeanSquaredLossLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["ThreadingLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"ThreadingLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DotPlusLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"DotPlusLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PaddingLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"PaddingLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["TotalLayer",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info173707853223-7757805", {"TotalLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["DropoutLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"DropoutLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PartLayer",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info173707853223-7757805", {"PartLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["TransposeLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"TransposeLayer", "System`"}},
          ButtonNote->"System`"]},
        {
         ButtonBox["ElementwiseLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"ElementwiseLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["PoolingLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"PoolingLayer", "System`"}},
          ButtonNote->"System`"], 
         ButtonBox["UnitVectorLayer",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info173707853223-7757805", {"UnitVectorLayer", "System`"}},
          ButtonNote->"System`"]}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.31666666666666665`]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell",
 CellChangeTimes->{
  3.7078676238351088`*^9},ExpressionUUID->"f93ddce4-fdb9-4be6-93cf-\
b959463e5cc3"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"ElementwiseLayer\\\", \\\"[\\\", \
StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"]\\\"}]\) represents a net layer that \
applies a unary function \!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) to every \
element of the input tensor.\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ElementwiseLayer"]}]], "Print", "PrintUsage",
 CellTags->
  "Info173707853223-7757805",ExpressionUUID->"48427a99-f3a0-4d7c-8c28-\
798a30498c6e"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "net", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"digits", "=", 
   RowBox[{"Range", "[", "10000", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"net", " ", "=", " ", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<Encoding\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EmbeddingLayer", "[", "12", "]"}], ",", 
          RowBox[{"LongShortTermMemoryLayer", "[", "60", "]"}]}], "}"}]}], 
       ",", 
       RowBox[{"\"\<Decoding\>\"", "\[Rule]", 
        RowBox[{"LongShortTermMemoryLayer", "[", "60", "]"}]}], ",", 
       RowBox[{"\"\<Attending\>\"", "\[Rule]", 
        RowBox[{"SequenceAttentionLayer", "[", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Catenating\>\"", "\[Rule]", 
        RowBox[{"CatenateLayer", "[", "2", "]"}]}], ",", 
       RowBox[{"\"\<Classifying\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NetMapOperator", "[", 
           RowBox[{"LinearLayer", "[", "]"}], "]"}], ",", 
          RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "|>"}], ",", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<Encoding\>\"", "\[Rule]", 
        RowBox[{"\"\<Decoding\>\"", "\[Rule]", 
         RowBox[{"NetPort", "[", 
          RowBox[{"\"\<Attending\>\"", ",", "\"\<Query\>\""}], "]"}]}]}], ",",
        "\[IndentingNewLine]", 
       RowBox[{"\"\<Encoding\>\"", "\[Rule]", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<Attending\>\"", ",", "\"\<Input\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Decoding\>\"", "\[Rule]", "\"\<Catenating\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Attending\>\"", "\[Rule]", "\"\<Catenating\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Catenating\>\"", "\[Rule]", "\"\<Classifying\>\""}]}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Varying\>\"", ",", 
        RowBox[{"NetEncoder", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Class\>\"", ",", "digits"}], "}"}], "]"}]}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Varying\>\"", ",", 
        RowBox[{"NetDecoder", "[", 
         RowBox[{"{", 
          RowBox[{"\"\<Class\>\"", ",", "digits"}], "}"}], "]"}]}], "}"}]}]}],
     "\n", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7078700286480412`*^9, 3.7078700301687317`*^9}, {
   3.7078709764972906`*^9, 3.7078709889221826`*^9}, {3.7079187900528765`*^9, 
   3.707918790337196*^9}, {3.7079191940413127`*^9, 3.707919381682732*^9}, 
   3.707919412490779*^9},ExpressionUUID->"2f3a2ded-28dd-4340-b395-\
36e8652304e8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"validData", "=", 
    RowBox[{"trainingSet6", "/@", "curatedgenexamples"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707872905301113*^9, 
  3.7078729117326627`*^9}},ExpressionUUID->"870b3d91-538c-43c5-9aea-\
3c5f0e5be5ea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "trainingData"}]], "Input",
 CellChangeTimes->{{3.707869100928896*^9, 
  3.7078691067796526`*^9}},ExpressionUUID->"0c2f548b-8fe5-47a1-a43d-\
809d3f93d71b"],

Cell[BoxData["552"], "Output",
 CellChangeTimes->{3.7078691073575897`*^9, 3.707869716794286*^9, 
  3.707871924681834*^9, 3.7078729460368705`*^9, 3.7079185497417064`*^9, 
  3.707918947832034*^9},ExpressionUUID->"b12d42fd-e9ae-441c-8ca7-\
c3ef01a66248"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trData", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"trainingData", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vlData", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"validData", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "3"}], "]"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7078688396228933`*^9, 3.7078688487351394`*^9}, {
   3.707869386413929*^9, 3.7078693947708063`*^9}, {3.7078694768522015`*^9, 
   3.7078694770538435`*^9}, {3.707869600358631*^9, 3.707869605229211*^9}, {
   3.7078698634000535`*^9, 3.707869881470209*^9}, {3.7078699460782843`*^9, 
   3.7078699466391783`*^9}, 3.707870950768606*^9, {3.7078721778648863`*^9, 
   3.7078721781930103`*^9}, {3.7078724480442343`*^9, 
   3.7078724483099194`*^9}, {3.707872583482992*^9, 3.707872609076953*^9}, {
   3.7079184073780656`*^9, 3.707918415102493*^9}, {3.707918955342828*^9, 
   3.7079189598316565`*^9}, {3.707919551736948*^9, 
   3.707919554175953*^9}},ExpressionUUID->"87f33422-bf20-4e42-8855-\
3a19431e4e4f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "trData"}]], "Input",
 CellChangeTimes->{{3.7078691130000763`*^9, 
  3.7078691156887245`*^9}},ExpressionUUID->"5ed96b55-c128-411d-8315-\
31806f39d1e9"],

Cell[BoxData["17316"], "Output",
 CellChangeTimes->{
  3.7078691160694585`*^9, {3.7078693883890104`*^9, 3.7078693967785783`*^9}, 
   3.707869430754821*^9, 3.7078694790560446`*^9, 3.707869607426695*^9, 
   3.707869720471041*^9, {3.7078698613177795`*^9, 3.7078698835110164`*^9}, 
   3.707870039834935*^9, 3.707870952843178*^9, 3.707872181021103*^9, 
   3.7078729525304394`*^9, 3.707918418648056*^9, 3.707918552645032*^9, {
   3.7079189524602833`*^9, 3.7079189616409073`*^9}, 
   3.707919556601943*^9},ExpressionUUID->"0aa826cc-9e7c-44be-b3a0-\
d1db6df29c75"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"trained", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "trData", ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}], ",", 
    RowBox[{"ValidationSet", "\[Rule]", "vlData"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.707868751790949*^9, {3.7078688086152153`*^9, 3.707868811981435*^9}, {
   3.7078688532636633`*^9, 3.7078688539687324`*^9}, 3.7078712630491333`*^9, {
   3.7078720658322325`*^9, 3.7078720666291122`*^9}, {3.7078721034161253`*^9, 
   3.7078721088549957`*^9}, {3.70787227652726*^9, 3.707872279683534*^9}, {
   3.7078724424504957`*^9, 3.7078724944374948`*^9}, {3.7078725585397835`*^9, 
   3.7078725630241776`*^9}, {3.707872614248871*^9, 
   3.7078726144050665`*^9}},ExpressionUUID->"b8d3221c-8c8b-42a9-9aab-\
513e08651d14"],

Cell[BoxData[
 RowBox[{
  RowBox[{"res", "[", "str_", "]"}], ":=", 
  RowBox[{"FromCharacterCode", "[", 
   RowBox[{"trained", "[", 
    RowBox[{"ToCharacterCode", "[", "str", "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707869159584606*^9, 3.7078692038634615`*^9}, {
  3.707869325919797*^9, 
  3.70786934781692*^9}},ExpressionUUID->"0e78ee2f-9846-49fc-873c-\
497d12eac734"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"res", "[", "\"\<sfdfsfsdfsdfsdfsdfkhjjhg\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7078691909788003`*^9, 3.7078692077541943`*^9}, 
   3.7078692504925222`*^9, {3.707869353793005*^9, 3.7078693689766417`*^9}, 
   3.707869585262082*^9, {3.70787089609634*^9, 3.707870898821951*^9}, {
   3.707871056497148*^9, 3.7078710652096276`*^9}, {3.7078721611615825`*^9, 
   3.7078721680991774`*^9}, {3.707872664346466*^9, 3.7078726685652523`*^9}, {
   3.7079069789832697`*^9, 3.707907016428693*^9}, {3.70790753525158*^9, 
   3.7079075419040604`*^9}, {3.707907881585859*^9, 
   3.707907895143606*^9}},ExpressionUUID->"63f0085a-a36a-4f92-860f-\
eadc62a20841"],

Cell[BoxData["\<\"AAATTiiiaaaa[[iiiiiiiiii\"\>"], "Output",
 CellChangeTimes->{
  3.7078692514762974`*^9, {3.707869329562811*^9, 3.707869369553071*^9}, 
   3.7078695004255533`*^9, 3.7078695861571856`*^9, {3.707870888517351*^9, 
   3.707870899211212*^9}, {3.707871051135147*^9, 3.70787106587646*^9}, {
   3.707872150848998*^9, 3.7078721691147633`*^9}, {3.70787223898002*^9, 
   3.7078722415112915`*^9}, 3.70787252039879*^9, {3.7078726510806913`*^9, 
   3.7078726696433296`*^9}, 3.7079069298350663`*^9, {3.707906979836873*^9, 
   3.707907016930048*^9}, {3.7079075366936574`*^9, 3.7079075425471783`*^9}, {
   3.7079078844268084`*^9, 3.707907896606004*^9}, 
   3.707919166199065*^9},ExpressionUUID->"32c3431b-94d3-4ef6-b8df-\
3fd99db03a5a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7078685507028775`*^9, 3.7078685528374186`*^9}, {
   3.7078685967760067`*^9, 3.7078686212639885`*^9}, {3.707869940862064*^9, 
   3.7078699414011774`*^9}, 3.707870015265689*^9, 
   3.7079187875589333`*^9},ExpressionUUID->"79ea1b57-4659-4542-91ab-\
d6c3a448177d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["...", "Chapter",
 CellChangeTimes->{{3.707831991064844*^9, 3.7078319930961113`*^9}, {
  3.7078673459786806`*^9, 
  3.7078673463191338`*^9}},ExpressionUUID->"b746afd2-0999-4bf4-9fdb-\
7f3a4e0680fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToExpression", "@", "\"\<AASTriangle[aPi/6Pi/3,1]\>\""}]], "Input",
 CellChangeTimes->{{3.7078324927403884`*^9, 
  3.7078324962288513`*^9}},ExpressionUUID->"d5f2283f-5175-441e-80b9-\
a50f6a5f576d"],

Cell[BoxData[
 RowBox[{"AASTriangle", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"aPi", " ", "\[Pi]"}], "18"], ",", "1"}], "]"}]], "Output",
 CellChangeTimes->{{3.707832488721551*^9, 
  3.707832496508051*^9}},ExpressionUUID->"f35aff6c-f30a-4652-9fce-\
7ae492a4ff97"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"inputString", "=", "\"\<Nest[f,x,6]\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trainingSet", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"StringDrop", "[", 
         RowBox[{"inputString", ",", 
          RowBox[{"{", "i", "}"}]}], "]"}], "->", "inputString"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"StringLength", "[", "inputString", "]"}]}], "}"}]}], "]"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.707573823682268*^9, 3.707573870480367*^9}, 
   3.707573922019833*^9, {3.707573970034795*^9, 3.7075739715458612`*^9}, {
   3.707574019110504*^9, 3.7075740394026756`*^9}, {3.707574074244319*^9, 
   3.7075740771313667`*^9}, {3.70757411086522*^9, 3.707574151870222*^9}, {
   3.7075741854349613`*^9, 
   3.707574221402401*^9}},ExpressionUUID->"fe6a3421-276b-42f7-a5f6-\
5b0758b50a9c"],

Cell[CellGroupData[{

Cell[BoxData["trainingSet"], "Input",
 CellChangeTimes->{{3.707574041041836*^9, 3.7075740416242456`*^9}, {
  3.7075741918975325`*^9, 
  3.7075741925369854`*^9}},ExpressionUUID->"f6e77913-d5a9-44e0-b8da-\
ae71fe99b39e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"est[f,x,6]\"\>", "\[Rule]", "\<\"Nest[f,x,6]\"\>"}], ",", 
   RowBox[{"\<\"Nst[f,x,6]\"\>", "\[Rule]", "\<\"Nest[f,x,6]\"\>"}], ",", 
   RowBox[{"\<\"Net[f,x,6]\"\>", "\[Rule]", "\<\"Nest[f,x,6]\"\>"}], ",", 
   RowBox[{"\<\"Nes[f,x,6]\"\>", "\[Rule]", "\<\"Nest[f,x,6]\"\>"}], ",", 
   RowBox[{"\<\"Nestf,x,6]\"\>", "\[Rule]", "\<\"Nest[f,x,6]\"\>"}], ",", 
   RowBox[{"\<\"Nest[,x,6]\"\>", "\[Rule]", "\<\"Nest[f,x,6]\"\>"}], ",", 
   RowBox[{"\<\"Nest[fx,6]\"\>", "\[Rule]", "\<\"Nest[f,x,6]\"\>"}], ",", 
   RowBox[{"\<\"Nest[f,,6]\"\>", "\[Rule]", "\<\"Nest[f,x,6]\"\>"}], ",", 
   RowBox[{"\<\"Nest[f,x6]\"\>", "\[Rule]", "\<\"Nest[f,x,6]\"\>"}], ",", 
   RowBox[{"\<\"Nest[f,x,]\"\>", "\[Rule]", "\<\"Nest[f,x,6]\"\>"}], ",", 
   RowBox[{"\<\"Nest[f,x,6\"\>", "\[Rule]", "\<\"Nest[f,x,6]\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.707574041930464*^9, {3.7075741928842306`*^9, 3.7075742239281874`*^9}, 
   3.7078274587968416`*^9},ExpressionUUID->"d763737e-c9e8-4b02-ab41-\
aa8b858b4e50"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Production Version Of SyntaxCorrector", "Title",
 CellChangeTimes->{{3.707779247836567*^9, 3.707779255946064*^9}, {
  3.7079350431498365`*^9, 3.7079350449087887`*^9}, {3.7079350825267315`*^9, 
  3.707935086742032*^9}},ExpressionUUID->"6cff9361-32f8-49f7-b3ad-\
2708848c89a4"],

Cell[CellGroupData[{

Cell["Defined functions", "Chapter",
 CellChangeTimes->{{3.7077792601336007`*^9, 3.707779266868038*^9}, {
  3.707779324087281*^9, 
  3.70777932588417*^9}},ExpressionUUID->"48a204ff-cca1-43ba-b071-\
0841dbdb0a44"],

Cell[CellGroupData[{

Cell["Syntax Corrector", "Subsubsection",
 CellChangeTimes->{{3.707779953452078*^9, 
  3.7077799564833527`*^9}},ExpressionUUID->"7792255a-2ff1-40ee-bf57-\
ac1905b90cda"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$SystemSymbols", "=", 
   RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}]}], ";"}]], "Input",Expressi\
onUUID->"533586e2-e4ba-4713-bead-32b14cbe8f5d"],

Cell[BoxData[
 RowBox[{"Clear", "[", "syntaxCorrector", "]"}]], "Input",
 CellChangeTimes->{{3.707954880727682*^9, 
  3.7079548831652017`*^9}},ExpressionUUID->"967a113a-306d-4de0-b7fb-\
944d5677952d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"syntaxCorrector", "[", 
   RowBox[{"str_String", ",", "nulltest_", ",", "size_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"inp", "=", "str"}], ",", "\[IndentingNewLine]", "counts", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "openbrack", ",", 
      "\[IndentingNewLine]", "closebrack", ",", "\[IndentingNewLine]", 
      "openbrace", ",", "\[IndentingNewLine]", "closebrace", ",", 
      "\[IndentingNewLine]", "openparen", ",", "\[IndentingNewLine]", 
      "closeparen"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"counts", "=", 
      RowBox[{"CharacterCounts", "[", "str", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"openbrack", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"counts", ",", "\"\<[\>\"", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"closebrack", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"counts", ",", "\"\<]\>\"", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"openbrace", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"counts", ",", "\"\<{\>\"", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"closebrace", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"counts", ",", "\"\<}\>\"", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"openparen", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"counts", ",", "\"\<(\>\"", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"closeparen", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"counts", ",", "\"\<)\>\"", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"messageAnalysis", "[", "str", "]"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCount", "[", 
            RowBox[{
             RowBox[{"StringDelete", "[", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{
                 RowBox[{"ToExpression", "[", "str", "]"}], ",", 
                 "InputForm"}], "]"}], ",", "WhitespaceCharacter"}], "]"}], 
             ",", "\"\<Null\>\""}], "]"}], "\[Equal]", "0"}], "||", 
          RowBox[{"Not", "[", "nulltest", "]"}]}], ")"}]}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"result", ",", "\"\<All correct!\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"openbrack", "==", "closebrack"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"openbrack", ">", "closebrack"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", "\"\<Closing bracket missed\>\""}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"evaluation", "[", 
               RowBox[{
               "str", ",", "nulltest", ",", "size", ",", "result", ",", 
                "\"\<]\>\""}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"evaluation", "[", 
                   RowBox[{
                   "str", ",", "nulltest", ",", "size", ",", "\"\<]\>\""}], 
                   "]"}], "}"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]",
              ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", "\"\<Opening bracket missed\>\""}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"evaluation", "[", 
                   RowBox[{
                   "str", ",", "nulltest", ",", "size", ",", "\"\<[\>\""}], 
                   "]"}], "}"}], "]"}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Not", "[", 
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<{\>\"", "}"}]}], "]"}], "==", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<}\>\"", "}"}]}], "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"openbrace", ">", "closebrace"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", "\"\<Closing braces missed\>\""}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"evaluation", "[", 
                   RowBox[{
                   "str", ",", "nulltest", ",", "size", ",", "\"\<}\>\""}], 
                   "]"}], "}"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]",
              ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", "\"\<Opening braces missed\>\""}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"evaluation", "[", 
                   RowBox[{
                   "str", ",", "nulltest", ",", "size", ",", "\"\<{\>\""}], 
                   "]"}], "}"}], "]"}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Not", "[", 
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<(\>\"", "}"}]}], "]"}], "==", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<)\>\"", "}"}]}], "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"openparen", ">", "closeparen"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", "\"\<Closing parenthes missed\>\""}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"evaluation", "[", 
                   RowBox[{
                   "str", ",", "nulltest", ",", "size", ",", "\"\<)\>\""}], 
                   "]"}], "}"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]",
              ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", "\"\<Opening parenthes missed\>\""}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", 
                  RowBox[{"evaluation", "[", 
                   RowBox[{
                   "str", ",", "nulltest", ",", "size", ",", "\"\<(\>\""}], 
                   "]"}], "}"}], "]"}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Not", "[", 
           RowBox[{"EvenQ", "[", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", "\"\<\\\"\>\""}], "]"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", "\"\<Quotes missed\>\""}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"evaluation", "[", 
                RowBox[{
                "str", ",", "nulltest", ",", "size", ",", "\"\<\\\"\>\""}], 
                "]"}], "}"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<[\>\"", "}"}]}], "]"}], "==", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<]\>\"", "}"}]}], "]"}]}], "&&", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<{\>\"", "}"}]}], "]"}], "==", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<}\>\"", "}"}]}], "]"}]}], "&&", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<(\>\"", "}"}]}], "]"}], "==", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<)\>\"", "}"}]}], "]"}]}], "&&", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<(\>\"", "}"}]}], "]"}], "==", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<)\>\"", "}"}]}], "]"}]}], "&&", 
           "\[IndentingNewLine]", 
           RowBox[{"EvenQ", "[", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", "\"\<\\\"\>\""}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", "\"\<Letter or number Missed\>\""}], "]"}],
            ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{"evaluation", "[", 
                RowBox[{
                "str", ",", "nulltest", ",", "size", ",", 
                 "\"\<\[Placeholder]\>\""}], "]"}], "}"}], "]"}]}], "]"}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"TableForm", "[", 
      RowBox[{"Flatten", "[", "result", "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7077806580362253`*^9, 3.7077806743488665`*^9}, {
   3.7077807498808203`*^9, 3.7077807552089396`*^9}, {3.7077809143034496`*^9, 
   3.7077809170378485`*^9}, {3.707781328988783*^9, 3.707781338941992*^9}, {
   3.7077813871455355`*^9, 3.707781392708082*^9}, {3.707781534787425*^9, 
   3.70778154205307*^9}, {3.707781609741151*^9, 3.7077816936637664`*^9}, {
   3.707781749257992*^9, 3.707781755648711*^9}, {3.7077829949888844`*^9, 
   3.707783073944615*^9}, {3.7077832373147783`*^9, 3.707783277866409*^9}, {
   3.7077834139032893`*^9, 3.7077834376020336`*^9}, {3.707783474227249*^9, 
   3.7077835277630634`*^9}, {3.7077836117333345`*^9, 3.7077836269540977`*^9}, 
   3.7077837471569624`*^9, {3.7078176137844934`*^9, 3.7078176317016964`*^9}, 
   3.707817714574114*^9, {3.707818411702544*^9, 3.707818422714859*^9}, {
   3.7078184621980553`*^9, 3.707818466561493*^9}, {3.707819939277491*^9, 
   3.7078199712889657`*^9}, 3.7078201048266163`*^9, 3.707820210431608*^9, {
   3.7078202622927227`*^9, 3.707820325882953*^9}, 3.7078229487021255`*^9, {
   3.707824524402979*^9, 3.707824619200276*^9}, {3.707826463098995*^9, 
   3.7078264645600224`*^9}, {3.70782673936674*^9, 3.70782677727562*^9}, {
   3.707826860062278*^9, 3.707826862090723*^9}, 3.7078272509986067`*^9, {
   3.7078318552704945`*^9, 3.7078319074703736`*^9}, {3.707832615988408*^9, 
   3.707832649395997*^9}, {3.707832713516615*^9, 3.7078327162705464`*^9}, {
   3.707910653156809*^9, 3.707910655783203*^9}, {3.7079107347526617`*^9, 
   3.7079108151006966`*^9}, 3.7079108526284943`*^9, {3.7079351329388156`*^9, 
   3.7079351372406454`*^9}, {3.7079354795375743`*^9, 3.707935492341102*^9}, {
   3.707935671360158*^9, 3.707935683716511*^9}, {3.7079360148249836`*^9, 
   3.707936040519287*^9}, {3.707936133037037*^9, 3.70793614326682*^9}, {
   3.7079363815898757`*^9, 3.7079364056242332`*^9}, {3.7079376241317596`*^9, 
   3.70793764580844*^9}, {3.707937680301094*^9, 3.707937704104191*^9}, {
   3.7079385161801476`*^9, 3.707938569161888*^9}, {3.707938622719324*^9, 
   3.707938670607396*^9}, {3.7079420198969746`*^9, 3.70794202666089*^9}, {
   3.707942058135411*^9, 3.707942059194786*^9}, {3.707942856720314*^9, 
   3.7079428725794086`*^9}, {3.707952074308666*^9, 3.707952194215918*^9}, {
   3.707952323326335*^9, 3.7079523297482815`*^9}, {3.7079548226490793`*^9, 
   3.707954845805519*^9}, 3.707954902134107*^9, {3.7079549323062315`*^9, 
   3.7079549901660805`*^9}, {3.7080048673564625`*^9, 3.708004868819188*^9}, {
   3.708005561574954*^9, 3.7080056249187717`*^9}, {3.7080056559595957`*^9, 
   3.708005760025997*^9}, {3.708005790067194*^9, 3.7080057930317993`*^9}, {
   3.7080058390866065`*^9, 3.708005909330008*^9}, {3.7080093574746714`*^9, 
   3.7080094438746295`*^9}, {3.708009507152281*^9, 3.7080095210660987`*^9}, {
   3.708009616805657*^9, 3.70800961917733*^9}, {3.708010015616276*^9, 
   3.708010015765381*^9}, 3.708010056702263*^9, {3.708010511227043*^9, 
   3.708010549753228*^9}, {3.708017041494484*^9, 3.7080170617994785`*^9}, {
   3.708104998466816*^9, 3.708105083740058*^9}, {3.708105289421364*^9, 
   3.7081052972699084`*^9}, {3.708187279243052*^9, 3.7081872986037607`*^9}, {
   3.7081873691627197`*^9, 3.7081874343898945`*^9}, {3.7081875008839793`*^9, 
   3.708187509370001*^9}, {3.70818790084521*^9, 3.708188049016114*^9}, {
   3.7081883648963604`*^9, 3.708188517095134*^9}, {3.708189457095933*^9, 
   3.708189511727614*^9}},ExpressionUUID->"da34ff97-b2e4-4b02-9cbb-\
8d230979c7ec"]
}, Closed]],

Cell[CellGroupData[{

Cell["List of SyntaxCorrector", "Subsubsection",
 CellChangeTimes->{{3.7081874473901577`*^9, 
  3.7081874673792725`*^9}},ExpressionUUID->"405548c7-5817-4b94-b331-\
8d1475d5906f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"syntaxCorrectorWithoutNotation", "[", 
   RowBox[{"str_String", ",", "nulltest_", ",", "size_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"inp", "=", "str"}], ",", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "openbrack", ",", 
      "\[IndentingNewLine]", "closebrack", ",", "\[IndentingNewLine]", 
      "openbrace", ",", "\[IndentingNewLine]", "closebrace", ",", 
      "\[IndentingNewLine]", "openparen", ",", "\[IndentingNewLine]", 
      "closeparen"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"openbrack", "=", 
      RowBox[{"StringCount", "[", 
       RowBox[{"str", ",", 
        RowBox[{"{", "\"\<[\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"closebrack", "=", 
      RowBox[{"StringCount", "[", 
       RowBox[{"str", ",", 
        RowBox[{"{", "\"\<]\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"openbrace", "=", 
      RowBox[{"StringCount", "[", 
       RowBox[{"str", ",", 
        RowBox[{"{", "\"\<{\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"closebrace", "=", 
      RowBox[{"StringCount", "[", 
       RowBox[{"str", ",", 
        RowBox[{"{", "\"\<}\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"openparen", "=", 
      RowBox[{"StringCount", "[", 
       RowBox[{"str", ",", 
        RowBox[{"{", "\"\<(\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"closeparen", "=", 
      RowBox[{"StringCount", "[", 
       RowBox[{"str", ",", 
        RowBox[{"{", "\"\<)\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"messageAnalysis", "[", "str", "]"}], "&&", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"StringCount", "[", 
            RowBox[{
             RowBox[{"StringDelete", "[", 
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{
                 RowBox[{"ToExpression", "[", "str", "]"}], ",", 
                 "InputForm"}], "]"}], ",", "WhitespaceCharacter"}], "]"}], 
             ",", "\"\<Null\>\""}], "]"}], "\[Equal]", "0"}], "||", 
          RowBox[{"Not", "[", "nulltest", "]"}]}], ")"}]}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"result", ",", "\"\<All Correct!\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Which", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"openbrack", "==", "closebrack"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"openbrack", ">", "closebrack"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"s1", "=", 
               RowBox[{"correctInserting", "[", 
                RowBox[{"str", ",", "\"\<]\>\""}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"s2", "=", 
               RowBox[{"Select", "[", 
                RowBox[{"s1", ",", 
                 RowBox[{
                  RowBox[{"testAnalyser", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "str", ",", 
                    "nulltest"}], "]"}], "&"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"s3", "=", 
               RowBox[{"stylingResult", "[", 
                RowBox[{"s2", ",", "\"\<]\>\"", ",", "size"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", "s3", "}"}], "]"}]}], "]"}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"s1", "=", 
               RowBox[{"correctInserting", "[", 
                RowBox[{"str", ",", "\"\<[\>\""}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"s2", "=", 
               RowBox[{"Select", "[", 
                RowBox[{"s1", ",", 
                 RowBox[{
                  RowBox[{"testAnalyser", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "str", ",", 
                    "nulltest"}], "]"}], "&"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"s3", "=", 
               RowBox[{"stylingResult", "[", 
                RowBox[{"s2", ",", "\"\<[\>\"", ",", "size"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", "s3", "}"}], "]"}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Not", "[", 
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<{\>\"", "}"}]}], "]"}], "==", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<}\>\"", "}"}]}], "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"openbrace", ">", "closebrace"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"s1", "=", 
               RowBox[{"correctInserting", "[", 
                RowBox[{"str", ",", "\"\<}\>\""}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"s2", "=", 
               RowBox[{"Select", "[", 
                RowBox[{"s1", ",", 
                 RowBox[{
                  RowBox[{"testAnalyser", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "str", ",", 
                    "nulltest"}], "]"}], "&"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"s3", "=", 
               RowBox[{"stylingResult", "[", 
                RowBox[{"s2", ",", "\"\<}\>\"", ",", "size"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", "s3", "}"}], "]"}]}], "]"}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"s1", "=", 
               RowBox[{"correctInserting", "[", 
                RowBox[{"str", ",", "\"\<{\>\""}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"s2", "=", 
               RowBox[{"Select", "[", 
                RowBox[{"s1", ",", 
                 RowBox[{
                  RowBox[{"testAnalyser", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "str", ",", 
                    "nulltest"}], "]"}], "&"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"s3", "=", 
               RowBox[{"stylingResult", "[", 
                RowBox[{"s2", ",", "\"\<{\>\"", ",", "size"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", "s3", "}"}], "]"}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Not", "[", 
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<(\>\"", "}"}]}], "]"}], "==", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<)\>\"", "}"}]}], "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"openparen", ">", "closeparen"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"s1", "=", 
               RowBox[{"correctInserting", "[", 
                RowBox[{"str", ",", "\"\<)\>\""}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"s2", "=", 
               RowBox[{"Select", "[", 
                RowBox[{"s1", ",", 
                 RowBox[{
                  RowBox[{"testAnalyser", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "str", ",", 
                    "nulltest"}], "]"}], "&"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"s3", "=", 
               RowBox[{"stylingResult", "[", 
                RowBox[{"s2", ",", "\"\<)\>\"", ",", "size"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", "s3", "}"}], "]"}]}], "]"}], ";"}], 
             "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", "\"\<Opening Parenthes Missed\>\""}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"s1", "=", 
               RowBox[{"correctInserting", "[", 
                RowBox[{"str", ",", "\"\<(\>\""}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"s2", "=", 
               RowBox[{"Select", "[", 
                RowBox[{"s1", ",", 
                 RowBox[{
                  RowBox[{"testAnalyser", "[", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", "str", ",", 
                    "nulltest"}], "]"}], "&"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"s3", "=", 
               RowBox[{"stylingResult", "[", 
                RowBox[{"s2", ",", "\"\<(\>\"", ",", "size"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"result", ",", 
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", "s3", "}"}], "]"}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Not", "[", 
           RowBox[{"EvenQ", "[", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", "\"\<\\\"\>\""}], "]"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"s1", "=", 
            RowBox[{"correctInserting", "[", 
             RowBox[{"str", ",", "\"\<\\\"\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"s2", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"s1", ",", 
              RowBox[{
               RowBox[{"testAnalyser", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "str", ",", 
                 "nulltest"}], "]"}], "&"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"s3", "=", 
            RowBox[{"stylingResult", "[", 
             RowBox[{"s2", ",", "\"\<\\\"\>\"", ",", "size"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", "s3", "}"}], "]"}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<[\>\"", "}"}]}], "]"}], "==", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<]\>\"", "}"}]}], "]"}]}], "&&", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<{\>\"", "}"}]}], "]"}], "==", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<}\>\"", "}"}]}], "]"}]}], "&&", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<(\>\"", "}"}]}], "]"}], "==", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<)\>\"", "}"}]}], "]"}]}], "&&", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<(\>\"", "}"}]}], "]"}], "==", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", 
              RowBox[{"{", "\"\<)\>\"", "}"}]}], "]"}]}], "&&", 
           "\[IndentingNewLine]", 
           RowBox[{"EvenQ", "[", 
            RowBox[{"StringCount", "[", 
             RowBox[{"str", ",", "\"\<\\\"\>\""}], "]"}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"s1", "=", 
            RowBox[{"correctInserting", "[", 
             RowBox[{"str", ",", "\"\<\[Placeholder]\>\""}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"s2", "=", 
            RowBox[{"Select", "[", 
             RowBox[{"s1", ",", 
              RowBox[{
               RowBox[{"testAnalyser", "[", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", "str", ",", 
                 "nulltest"}], "]"}], "&"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"s3", "=", 
            RowBox[{"stylingResult", "[", 
             RowBox[{"s2", ",", "\"\<\[Placeholder]\>\"", ",", "size"}], 
             "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"result", ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{"{", "s3", "}"}], "]"}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", "result", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7077806580362253`*^9, 3.7077806743488665`*^9}, {
   3.7077807498808203`*^9, 3.7077807552089396`*^9}, {3.7077809143034496`*^9, 
   3.7077809170378485`*^9}, {3.707781328988783*^9, 3.707781338941992*^9}, {
   3.7077813871455355`*^9, 3.707781392708082*^9}, {3.707781534787425*^9, 
   3.70778154205307*^9}, {3.707781609741151*^9, 3.7077816936637664`*^9}, {
   3.707781749257992*^9, 3.707781755648711*^9}, {3.7077829949888844`*^9, 
   3.707783073944615*^9}, {3.7077832373147783`*^9, 3.707783277866409*^9}, {
   3.7077834139032893`*^9, 3.7077834376020336`*^9}, {3.707783474227249*^9, 
   3.7077835277630634`*^9}, {3.7077836117333345`*^9, 3.7077836269540977`*^9}, 
   3.7077837471569624`*^9, {3.7078176137844934`*^9, 3.7078176317016964`*^9}, 
   3.707817714574114*^9, {3.707818411702544*^9, 3.707818422714859*^9}, {
   3.7078184621980553`*^9, 3.707818466561493*^9}, {3.707819939277491*^9, 
   3.7078199712889657`*^9}, 3.7078201048266163`*^9, 3.707820210431608*^9, {
   3.7078202622927227`*^9, 3.707820325882953*^9}, 3.7078229487021255`*^9, {
   3.707824524402979*^9, 3.707824619200276*^9}, {3.707826463098995*^9, 
   3.7078264645600224`*^9}, {3.70782673936674*^9, 3.70782677727562*^9}, {
   3.707826860062278*^9, 3.707826862090723*^9}, 3.7078272509986067`*^9, {
   3.7078318552704945`*^9, 3.7078319074703736`*^9}, {3.707832615988408*^9, 
   3.707832649395997*^9}, {3.707832713516615*^9, 3.7078327162705464`*^9}, {
   3.707910653156809*^9, 3.707910655783203*^9}, {3.7079107347526617`*^9, 
   3.7079108151006966`*^9}, 3.7079108526284943`*^9, {3.7079351329388156`*^9, 
   3.7079351372406454`*^9}, {3.7079354795375743`*^9, 3.707935492341102*^9}, {
   3.707935671360158*^9, 3.707935683716511*^9}, {3.7079360148249836`*^9, 
   3.707936040519287*^9}, {3.707936133037037*^9, 3.70793614326682*^9}, {
   3.7079363815898757`*^9, 3.7079364056242332`*^9}, {3.7079376241317596`*^9, 
   3.70793764580844*^9}, {3.707937680301094*^9, 3.707937704104191*^9}, {
   3.7079385161801476`*^9, 3.707938569161888*^9}, {3.707938622719324*^9, 
   3.707938670607396*^9}, {3.7079420198969746`*^9, 3.70794202666089*^9}, {
   3.707942058135411*^9, 3.707942059194786*^9}, {3.707942856720314*^9, 
   3.7079428725794086`*^9}, {3.707952074308666*^9, 3.707952194215918*^9}, {
   3.707952323326335*^9, 3.7079523297482815`*^9}, {3.7079548226490793`*^9, 
   3.707954845805519*^9}, 3.707954902134107*^9, {3.7079549323062315`*^9, 
   3.7079549901660805`*^9}, {3.7080048673564625`*^9, 3.708004868819188*^9}, {
   3.708005561574954*^9, 3.7080056249187717`*^9}, {3.7080056559595957`*^9, 
   3.708005760025997*^9}, {3.708005790067194*^9, 3.7080057930317993`*^9}, {
   3.7080058390866065`*^9, 3.708005909330008*^9}, {3.7080093574746714`*^9, 
   3.7080094438746295`*^9}, {3.708009507152281*^9, 3.7080095210660987`*^9}, {
   3.708009616805657*^9, 3.70800961917733*^9}, {3.708010015616276*^9, 
   3.708010015765381*^9}, 3.708010056702263*^9, {3.708010511227043*^9, 
   3.708010549753228*^9}, {3.708017041494484*^9, 3.7080170617994785`*^9}, {
   3.708104998466816*^9, 3.708105083740058*^9}, {3.708105289421364*^9, 
   3.7081052972699084`*^9}, {3.7081769697725873`*^9, 
   3.7081770180563173`*^9}, {3.7081784305074787`*^9, 
   3.7081784320525646`*^9}},ExpressionUUID->"5a5c124e-a9cd-403b-908c-\
1f5fe886527e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Message Analyzer", "Subsubsection",
 CellChangeTimes->{{3.707780927875899*^9, 
  3.707780932454116*^9}},ExpressionUUID->"bcdef83f-4339-4a80-af31-\
c118359630b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"messageAnalysis", "[", "str_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mess", ",", "result"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"$MessageList", "=", 
          RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ToExpression", "[", "str", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"mess", "=", "$MessageList"}], ";"}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"mess", "=!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"result", "=", "False"}], ",", 
           RowBox[{"result", "=", "True"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"result", " ", "=", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"mess", " ", "=!=", " ", 
             RowBox[{"{", "}"}]}], ",", " ", "False", ",", " ", "True"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"result", " ", "=", " ", 
          RowBox[{"(", 
           RowBox[{"mess", " ", "===", " ", 
            RowBox[{"{", "}"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
        "*)"}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "result"}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7077803033925424`*^9, 3.707780306408246*^9}, {
  3.7077804864723005`*^9, 3.707780492972303*^9}, {3.707780533222706*^9, 
  3.7077805813793683`*^9}, {3.7081820419794693`*^9, 3.708182157820486*^9}, {
  3.7081822034077654`*^9, 
  3.70818220840932*^9}},ExpressionUUID->"737caaff-9298-4c01-8427-\
9d516e6f4944"]
}, Closed]],

Cell[CellGroupData[{

Cell["Message Printer", "Subsubsection",
 CellChangeTimes->{{3.707780927875899*^9, 3.707780932454116*^9}, {
  3.7080831284893236`*^9, 
  3.7080831297081037`*^9}},ExpressionUUID->"94258586-b380-46b6-bc6b-\
93615168e02e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"messagePrinter", "[", "str_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mess", ",", "res", ",", "result"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"$MessageList", "=", 
          RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Quiet", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"res", "=", 
            RowBox[{"ToExpression", "[", "str", "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"mess", "=", "$MessageList"}], ";"}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"mess", "=!=", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"result", "=", "mess"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "result"}]}],
     "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7077803033925424`*^9, 3.707780306408246*^9}, {
  3.7077804864723005`*^9, 3.707780492972303*^9}, {3.707780533222706*^9, 
  3.7077805813793683`*^9}, {3.708083171651718*^9, 3.708083201667676*^9}, {
  3.7081821955702276`*^9, 
  3.7081821957433567`*^9}},ExpressionUUID->"1afb726f-d98b-4b19-9b09-\
d14b0299f1b8"]
}, Closed]],

Cell[CellGroupData[{

Cell["Test", "Subsubsection",
 CellChangeTimes->{{3.707910515453227*^9, 
  3.7079105183146524`*^9}},ExpressionUUID->"5f52cc58-52c5-4e7d-a94e-\
9e644ebc96ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testAnalyser", "[", 
   RowBox[{"str_String", ",", "initStr_", ",", "nulltest_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"messageAnalysis", "[", "str", "]"}], "&&", 
   RowBox[{
    RowBox[{"EditDistance", "[", 
     RowBox[{
      RowBox[{"StringDelete", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", "str", "]"}], ",", "InputForm"}], 
         "]"}], ",", "WhitespaceCharacter"}], "]"}], ",", "initStr"}], "]"}], 
    ">=", "1"}], "&&", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"StringCount", "[", 
       RowBox[{
        RowBox[{"StringDelete", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{
            RowBox[{"ToExpression", "[", "str", "]"}], ",", "InputForm"}], 
           "]"}], ",", "WhitespaceCharacter"}], "]"}], ",", "\"\<Null\>\""}], 
       "]"}], "\[Equal]", "0"}], "||", 
     RowBox[{"Not", "[", "nulltest", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.7079105258052435`*^9, 3.707910555912406*^9}, {
   3.707910669091139*^9, 3.7079106751773376`*^9}, {3.7079362298571825`*^9, 
   3.7079363401476927`*^9}, 3.7080164614740763`*^9, 3.7080166085505176`*^9, 
   3.708016875602622*^9, {3.7080169440828824`*^9, 3.708016962297001*^9}, 
   3.708182734722492*^9},ExpressionUUID->"b3cccd56-d451-42e1-9b5b-\
1df1e763f5a1"],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"testAnalyser", "[", 
    RowBox[{"str_String", ",", "initStr_", ",", "nulltest_"}], "]"}], ":=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"newstr", "=", 
       RowBox[{"StringDelete", "[", 
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"ToExpression", "[", "str", "]"}], ",", "InputForm"}], 
          "]"}], ",", "WhitespaceCharacter"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"messageAnalysis", "[", "str", "]"}], "&&", 
      RowBox[{
       RowBox[{"EditDistance", "[", 
        RowBox[{"newstr", ",", "initStr"}], "]"}], ">=", "1"}], "&&", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"StringCount", "[", 
          RowBox[{"newstr", ",", "\"\<Null\>\""}], "]"}], "\[Equal]", "0"}], "||", 
        RowBox[{"Not", "[", "nulltest", "]"}]}], ")"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.708182742027667*^9, 
  3.708182791374608*^9}},ExpressionUUID->"4cdf9275-cb8a-4643-a4e4-\
facab3cb20c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"testAnalyser2", "[", 
   RowBox[{"str_String", ",", "nulltest_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"messageAnalysis", "[", "str", "]"}], "&&", 
   RowBox[{
    RowBox[{"EditDistance", "[", 
     RowBox[{
      RowBox[{"StringDelete", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"ToExpression", "[", "str", "]"}], ",", "InputForm"}], 
         "]"}], ",", "WhitespaceCharacter"}], "]"}], ",", "str"}], "]"}], ">=",
     "0"}], "&&", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"StringCount", "[", 
       RowBox[{
        RowBox[{"StringDelete", "[", 
         RowBox[{
          RowBox[{"ToString", "[", 
           RowBox[{
            RowBox[{"ToExpression", "[", "str", "]"}], ",", "InputForm"}], 
           "]"}], ",", "WhitespaceCharacter"}], "]"}], ",", "\"\<Null\>\""}], 
       "]"}], "\[Equal]", "0"}], "||", 
     RowBox[{"Not", "[", "nulltest", "]"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.708016474567601*^9, 3.7080165041226616`*^9}, 
   3.7080166063270593`*^9},ExpressionUUID->"0c8bdac7-f756-498d-a57a-\
10b94512fa12"]
}, Closed]],

Cell[CellGroupData[{

Cell["Styling Result", "Subsubsection",
 CellChangeTimes->{{3.7079375992059793`*^9, 
  3.7079376058008747`*^9}},ExpressionUUID->"ca859286-186a-43ee-a988-\
c6cfe9210510"],

Cell[BoxData[
 RowBox[{"Clear", "[", "stylingResult", "]"}]], "Input",
 CellChangeTimes->{{3.7079424773813715`*^9, 
  3.7079424800161486`*^9}},ExpressionUUID->"fe654353-1c7d-4745-b7c0-\
efc15e7b7a41"],

Cell[BoxData[
 RowBox[{
  RowBox[{"stylingResult", "[", 
   RowBox[{"list_", ",", "symbol_String", ",", "size_Integer"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"l", "=", "list"}], ",", 
      RowBox[{"s", "=", "symbol"}], ",", 
      RowBox[{"ss", "=", "size"}], ",", "result", ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"result", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "l", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", "\[IndentingNewLine]", 
        RowBox[{"result", ",", "\[IndentingNewLine]", 
         RowBox[{"TextCell", "[", "\[IndentingNewLine]", 
          RowBox[{"Row", "[", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"StringTake", "[", 
              RowBox[{
               RowBox[{"l", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", 
                 RowBox[{
                  RowBox[{"l", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "-", 
                  "1"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Style", "[", 
              RowBox[{"s", ",", "Red", ",", 
               RowBox[{"FontSize", "\[Rule]", "ss"}], ",", "Bold"}], "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"StringTake", "[", 
              RowBox[{
               RowBox[{"l", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"l", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
                  "1"}], ",", 
                 RowBox[{"StringLength", "[", 
                  RowBox[{"l", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], 
                  "]"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], 
           "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "result"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.707937389232459*^9, 3.70793757792157*^9}, {
   3.7079419953691444`*^9, 3.707942038086322*^9}, {3.707952478343234*^9, 
   3.707952487155823*^9}, {3.7079525889379096`*^9, 3.707952716688958*^9}, {
   3.707952774626934*^9, 3.707952794548972*^9}, {3.7079530307949123`*^9, 
   3.707953117030012*^9}, {3.707953154249051*^9, 3.707953247281065*^9}, {
   3.707953280274191*^9, 3.707953293977446*^9}, {3.707953424360119*^9, 
   3.7079534287507973`*^9}, {3.7079534886645966`*^9, 
   3.7079534926333637`*^9}, {3.707953533618087*^9, 3.707953556821389*^9}, 
   3.707953685386303*^9, {3.707953845815193*^9, 3.7079538745910816`*^9}, 
   3.7079539414634624`*^9, {3.7079540972440596`*^9, 3.7079540975096917`*^9}, {
   3.7079541304449444`*^9, 3.7079541511638327`*^9}, {3.707954269691416*^9, 
   3.7079542970197644`*^9}, {3.707954382192336*^9, 3.707954445802234*^9}, {
   3.7079546009128833`*^9, 3.7079546052566676`*^9}, {3.7079546740697193`*^9, 
   3.707954675100994*^9}, 
   3.707954805648941*^9},ExpressionUUID->"774645d3-7ef5-437c-8958-\
4c7095f9af1b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Correct Removing", "Subsubsection",
 CellChangeTimes->{{3.7081044840073166`*^9, 
  3.708104494617814*^9}},ExpressionUUID->"db57d2c5-1f8e-4df4-9e44-\
2ed146d8b99f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"correctSplitting", "[", "str_String", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "=", "str"}], ",", "s1", ",", "s2", ",", 
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"str", ",", 
        RowBox[{
         RowBox[{"x", ":", "PunctuationCharacter"}], "\[RuleDelayed]", 
         "x"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "s1", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"$SystemSymbols", ",", 
            RowBox[{"s1", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"s2", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"StringDrop", "[", 
              RowBox[{
               RowBox[{"s1", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"{", "#", "}"}]}], "]"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"StringLength", "[", 
              RowBox[{"s1", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"s1", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{"i", "-", "1"}]}], "]"}], "]"}], ",", 
                RowBox[{"s2", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ",", 
                RowBox[{"s1", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ";;"}], "]"}], "]"}]}], "}"}], 
              "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"StringLength", "[", 
               RowBox[{"s1", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"StringJoin", "/@", 
      RowBox[{"Flatten", "[", 
       RowBox[{"result", ",", "1"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7081027228735905`*^9, 3.708102747292841*^9}, {
   3.7081027903973103`*^9, 3.7081028190425835`*^9}, 3.708102849593113*^9, {
   3.7081031474995728`*^9, 3.708103163129614*^9}, {3.7081032164282684`*^9, 
   3.708103230570259*^9}, {3.708103261823343*^9, 3.708103360586109*^9}, 
   3.708103662837639*^9, {3.7081037115770893`*^9, 3.708103900467515*^9}, {
   3.7081041359198527`*^9, 3.708104205805237*^9}, {3.7081044449987073`*^9, 
   3.7081044563387184`*^9}, 
   3.708189116143407*^9},ExpressionUUID->"ff495d05-ca5b-4201-b8d6-\
4a38ee98c804"]
}, Closed]],

Cell[CellGroupData[{

Cell["Correct Inserting", "Subsubsection",
 CellChangeTimes->{{3.708104733613655*^9, 
  3.708104739230621*^9}},ExpressionUUID->"254b0f5f-6e6f-411d-91c5-\
ba31c5d8c18c"],

Cell[BoxData[
 RowBox[{"Clear", "[", "correctInserting", "]"}]], "Input",
 CellChangeTimes->{{3.708179411962347*^9, 
  3.708179418305851*^9}},ExpressionUUID->"dad37760-ad2c-4923-aa5d-\
9db913bb77fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"correctInserting", "[", 
   RowBox[{"str_String", ",", "strinst_String"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "=", "str"}], ",", "s1", ",", "s2", ",", 
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", 
      RowBox[{"symb", "=", "strinst"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"str", ",", 
        RowBox[{
         RowBox[{"x", ":", "PunctuationCharacter"}], "\[RuleDelayed]", 
         "x"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "s1", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"$SystemSymbols", ",", 
            RowBox[{"s1", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"s2", "=", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "+", 
                RowBox[{"Total", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringLength", "[", "#", "]"}], "&"}], "/@", 
                  RowBox[{"(", 
                   RowBox[{"s1", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"i", "-", "1"}]}], "]"}], "]"}], ")"}]}], "]"}]}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"StringInsert", "[", 
                RowBox[{
                 RowBox[{"s1", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "symb", ",", 
                 RowBox[{"{", "#", "}"}]}], "]"}]}], "}"}], "&"}], 
            "\[IndentingNewLine]", "/@", 
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"StringLength", "[", 
               RowBox[{"s1", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "+", "1"}], "]"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"s2", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"s1", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"i", "-", "1"}]}], "]"}], "]"}], ",", 
                  RowBox[{"s2", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", ",", "2"}], "]"}], "]"}], ",", 
                  RowBox[{"s1", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ";;"}], "]"}], "]"}]}], "}"}]}], 
               "}"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{
               RowBox[{"StringLength", "[", 
                RowBox[{"s1", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "+", "1"}], "]"}]}]}],
            "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"StringJoin", "/@", 
       RowBox[{"Flatten", "[", 
        RowBox[{"result", ",", "1"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"DeleteDuplicates", "[", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"result", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"StringJoin", "/@", 
          RowBox[{
           RowBox[{"Transpose", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"result", ",", "1"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7081045501089635`*^9, 3.7081046724063625`*^9}, 
   3.7081048682778845`*^9, 3.708106615293414*^9, {3.708178540770561*^9, 
   3.708178540984702*^9}, {3.708178659084339*^9, 3.7081786592344503`*^9}, {
   3.708179087219508*^9, 3.7081790976669006`*^9}, {3.7081794234744987`*^9, 
   3.7081794236516247`*^9}, {3.708179544127489*^9, 3.7081795450421495`*^9}, {
   3.7081795990733957`*^9, 3.7081795998119326`*^9}, {3.70817970580499*^9, 
   3.708179709527626*^9}, {3.708179750298489*^9, 3.7081797517975407`*^9}, {
   3.7081797848079157`*^9, 3.708179893187353*^9}, {3.708179928517358*^9, 
   3.708179943495965*^9}, {3.708180099890294*^9, 3.708180119053859*^9}, {
   3.7081839721571403`*^9, 3.7081839847920704`*^9}, {3.7081891243822393`*^9, 
   3.708189128497153*^9}},ExpressionUUID->"457b1f1b-5e2e-4034-b4c8-\
42e59134239e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Evaluation", "Subsubsection",
 CellChangeTimes->{{3.7081876237640047`*^9, 
  3.7081876305167913`*^9}},ExpressionUUID->"19f4b7aa-939a-4237-becd-\
c4f30cd6ff3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"evaluation", "[", 
    RowBox[{"str_", ",", "nulltest_", ",", "size_", ",", "symb_"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", "s2", ",", "s3"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s1", "=", 
       RowBox[{"correctInserting", "[", 
        RowBox[{"str", ",", "symb"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s2", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"s1", ",", 
         RowBox[{
          RowBox[{"testAnalyser", "[", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], ",", "str", ",", "nulltest"}], 
           "]"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s3", "=", 
       RowBox[{"stylingResult", "[", 
        RowBox[{"s2", ",", "symb", ",", "size"}], "]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.708187742923386*^9, 3.7081878400011263`*^9}, {
  3.7081878819978485`*^9, 3.708187893038682*^9}, {3.7081883554616795`*^9, 
  3.7081883854649253`*^9}},ExpressionUUID->"84d4d2b5-e622-42ed-a1b2-\
d5cda532d877"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Chapter",
 CellChangeTimes->{{3.707781771086343*^9, 
  3.7077817726957335`*^9}},ExpressionUUID->"5ebc7ebe-96dc-4e43-b84d-\
519fd32b64da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", 
  RowBox[{"\"\<N[N[Nest[Nest[x^2,x,6,4,3]]]\>\"", ",", "True", ",", "20"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.707781803492872*^9, 3.707781809508498*^9}, 
   3.707781882227925*^9, {3.707936434268714*^9, 3.7079364415824957`*^9}, {
   3.7079365071792974`*^9, 3.707936515030076*^9}, 3.707936589858062*^9, {
   3.7079528548307*^9, 3.7079528557213497`*^9}, {3.7080094302590218`*^9, 
   3.708009433811529*^9}},ExpressionUUID->"6a5e75d5-f702-4e93-9684-\
277baaefdc70"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"Closing Bracket Missed\"\>"},
     {
      InterpretationBox[Cell[TextData[{
        "N[N[Nest[Nest[x^2,x,6",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        ",4,3]]]"
       }],ExpressionUUID->"cad80839-3880-425a-89f8-0cbe2b075619"],
       TextCell[
        Row[{"N[N[Nest[Nest[x^2,x,6", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",4,3]]]"}]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7077818829622746`*^9, 3.7077834425605335`*^9, 3.7077837530921783`*^9, 
   3.707817638023223*^9, 3.707817720771422*^9, 3.7078184281257133`*^9, 
   3.7078201126071095`*^9, 3.707820231004175*^9, 3.7078203324101677`*^9, 
   3.707832746416832*^9, 3.707910266249512*^9, {3.707936511300806*^9, 
   3.707936515390986*^9}, 3.707936590292655*^9, 3.7079385746357894`*^9, 
   3.7079386764708757`*^9, 3.7079423982325826`*^9, {3.7079528398774524`*^9, 
   3.7079528562057195`*^9}, 3.707953608468784*^9, 3.707954782039354*^9, {
   3.7079548739463573`*^9, 3.707954914696698*^9}, 3.707955008181835*^9, 
   3.70800576576978*^9, 3.708005796394956*^9, {3.7080093384562426`*^9, 
   3.708009447792407*^9}, 3.7080096228769407`*^9, 3.708016618306488*^9, 
   3.7081882846099396`*^9, 
   3.7081885224819593`*^9},ExpressionUUID->"bcf17039-8dc2-4122-8df1-\
5630d7e25101"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", 
  RowBox[{"\"\<N[N[Nest[Nest[x^2,x,6,4,3]]]\>\"", ",", "False", ",", "20"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.708009458432903*^9, 
  3.7080094588782177`*^9}},ExpressionUUID->"754e2c2b-bbe6-402e-874d-\
59432cb32f7c"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"Closing Bracket Missed\"\>"},
     {
      InterpretationBox[Cell[TextData[{
        "N[N[Nest[Nest[x^2,x,6",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        ",4,3]]]"
       }],ExpressionUUID->"345ff766-8d0c-4a3f-8ddc-4a7acab763e0"],
       TextCell[
        Row[{"N[N[Nest[Nest[x^2,x,6", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",4,3]]]"}]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7080094593955812`*^9, 3.708009625101511*^9, 
  3.7080166183880463`*^9, 
  3.708189078652871*^9},ExpressionUUID->"da878870-15dd-4c9b-b66e-\
d82275fc8e40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"Flatten", "[", 
   RowBox[{"syntaxCorrector", "[", 
    RowBox[{"\"\<Fold[f[][],x[[][],{1,2,3}]\>\"", ",", "True", ",", "20"}], 
    "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{
  3.7079365778071957`*^9, {3.7079550209475856`*^9, 3.70795502166634*^9}, {
   3.708009481966522*^9, 3.7080094866028333`*^9}, {3.708009532430132*^9, 
   3.708009604369933*^9}},ExpressionUUID->"fc9f5b2f-6bb1-4d08-bc77-\
2e15fe51a458"],

Cell[BoxData[
 TagBox[
  TagBox[
   TagBox[GridBox[{
      {"\<\"Closing bracket missing\"\>"},
      {
       InterpretationBox[Cell[TextData[{
         "Fold[f[][],x[",
         StyleBox["]",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         "[][],{1,2,3}]"
        }],ExpressionUUID->"949e92d4-10b5-406c-8696-fef1506a9875"],
        TextCell[
         Row[{"Fold[f[][],x[", 
           Style["]", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], "[][],{1,2,3}]"}]]]},
      {
       InterpretationBox[Cell[TextData[{
         "Fold[f[][],x[[",
         StyleBox["]",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         "][],{1,2,3}]"
        }],ExpressionUUID->"db11114b-8cc3-4c40-b284-9a2f72c3237c"],
        TextCell[
         Row[{"Fold[f[][],x[[", 
           Style["]", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], "][],{1,2,3}]"}]]]},
      {
       InterpretationBox[Cell[TextData[{
         "Fold[f[][],x[[]",
         StyleBox["]",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         "[],{1,2,3}]"
        }],ExpressionUUID->"86d486b6-c192-4106-8e2c-5f6527da7a6d"],
        TextCell[
         Row[{"Fold[f[][],x[[]", 
           Style["]", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], "[],{1,2,3}]"}]]]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7077818901143637`*^9, 3.707783445370401*^9, 3.7077837549730062`*^9, 
   3.707817639857545*^9, 3.707817722793953*^9, 3.7078184299820533`*^9, 
   3.7078201145174694`*^9, 3.7078202334919367`*^9, 3.7078203338671846`*^9, 
   3.7078327488805714`*^9, 3.707910274591445*^9, 3.707936578557962*^9, 
   3.707938594008746*^9, 3.7079386790668163`*^9, 3.7079549171654806`*^9, {
   3.707955014760031*^9, 3.7079550221663427`*^9}, 3.70800580297155*^9, {
   3.708009500614668*^9, 3.7080095383973284`*^9}, {3.708009583449123*^9, 
   3.7080096270078726`*^9}, 3.708016618431074*^9, 
   3.7082060287354245`*^9},ExpressionUUID->"825d0b04-67a6-42eb-8db3-\
76ff5a9862d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", 
  RowBox[{"\"\<Fold[f[][,x[],{1,2,3}]\>\"", ",", "True", ",", "20"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.7079365716303687`*^9, {3.7079550279788723`*^9, 3.707955028353894*^9}, {
   3.708009640390299*^9, 3.7080096446022844`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"29a4a3a0-f6cb-4136-a0e7-3e2efa01c51a"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"Closing Bracket Missed\"\>"},
     {
      InterpretationBox[Cell[TextData[{
        "Fold[f[][",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        ",x[],{1,2,3}]"
       }],ExpressionUUID->"c4c11358-ccf4-4c98-8f86-f369a665a577"],
       TextCell[
        Row[{"Fold[f[][", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",x[],{1,2,3}]"}]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7077818983877516`*^9, {3.7077832818452196`*^9, 3.707783288405796*^9}, 
   3.707783758071258*^9, 3.7078176438103743`*^9, 3.7078177246289988`*^9, 
   3.707818431651724*^9, 3.707820116521874*^9, 3.70782023583261*^9, 
   3.7078203360517263`*^9, {3.707824853233267*^9, 3.707824857189643*^9}, 
   3.707834951156082*^9, 3.7079102780334187`*^9, 3.707936572587671*^9, 
   3.707938682587779*^9, 3.7079550289007554`*^9, {3.7080096300640125`*^9, 
   3.708009645073604*^9}, 
   3.708016618549659*^9},ExpressionUUID->"8467fa60-aef6-47a6-879c-\
53a65ffb3fb3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", 
  RowBox[{"\"\<Fold[f[][,x[],{1,2,3}]\>\"", ",", "False", ",", "20"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.708009657857626*^9, 3.708009658736246*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"9145d95b-b1ec-4ed0-8ea4-5979df37265d"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"Closing Bracket Missed\"\>"},
     {
      InterpretationBox[Cell[TextData[{
        "Fold[f[][",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        ",x[],{1,2,3}]"
       }],ExpressionUUID->"dc3003f8-0234-43cb-9dd8-95ca57c3126c"],
       TextCell[
        Row[{"Fold[f[][", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",x[],{1,2,3}]"}]]]},
     {
      InterpretationBox[Cell[TextData[{
        "Fold[f[][,",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        "x[],{1,2,3}]"
       }],ExpressionUUID->"3e0a0d51-f47c-4524-9378-70ead109bcc8"],
       TextCell[
        Row[{"Fold[f[][,", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "x[],{1,2,3}]"}]]]},
     {
      InterpretationBox[Cell[TextData[{
        "Fold[f[][,x",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        "[],{1,2,3}]"
       }],ExpressionUUID->"0d5bc7c8-c2bb-4763-b351-6694058a3420"],
       TextCell[
        Row[{"Fold[f[][,x", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "[],{1,2,3}]"}]]]},
     {
      InterpretationBox[Cell[TextData[{
        "Fold[f[][,x[",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        "],{1,2,3}]"
       }],ExpressionUUID->"1993a9b2-ee6c-4890-bc67-12ff75757b58"],
       TextCell[
        Row[{"Fold[f[][,x[", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "],{1,2,3}]"}]]]},
     {
      InterpretationBox[Cell[TextData[{
        "Fold[f[][,x[]",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        ",{1,2,3}]"
       }],ExpressionUUID->"b6313bc8-27f1-4f4d-8d8a-057a9f3cf34b"],
       TextCell[
        Row[{"Fold[f[][,x[]", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{1,2,3}]"}]]]},
     {
      InterpretationBox[Cell[TextData[{
        "Fold[f[][,x[],",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        "{1,2,3}]"
       }],ExpressionUUID->"15451844-d9fe-4f4c-b105-c02a2d2ffc16"],
       TextCell[
        Row[{"Fold[f[][,x[],", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "{1,2,3}]"}]]]},
     {
      InterpretationBox[Cell[TextData[{
        "Fold[f[][,x[],{1,2,3}",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        "]"
       }],ExpressionUUID->"44da6c9e-8061-433e-89e1-1572d283ab0d"],
       TextCell[
        Row[{"Fold[f[][,x[],{1,2,3}", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]},
     {
      InterpretationBox[Cell[TextData[{
        "Fold[f[][,x[],{1,2,3}]",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]]
       }],ExpressionUUID->"c226040e-24a2-4268-87c4-222e71b0b46a"],
       TextCell[
        Row[{"Fold[f[][,x[],{1,2,3}]", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7080096590524807`*^9, 
  3.708016618654234*^9},ExpressionUUID->"51bc8700-3ffd-4cd0-ae06-\
4d65c926c081"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"syntaxCorrector", "[", 
    RowBox[{"\"\<Fold[f[][,x[],{1,2,3}]\>\"", ",", "#", ",", "20"}], "]"}], 
   "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"True", ",", "False"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.707936524892886*^9, 3.7079365612383385`*^9}, {
  3.7079550352602005`*^9, 3.7079550355570745`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"b464ad85-404c-479c-aba1-6fe06823454c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TagBox[GridBox[{
       {"\<\"Closing Bracket Missed\"\>"},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          ",x[],{1,2,3}]"
         }],ExpressionUUID->"0850b9bc-d20c-4723-89c9-601c22e5d622"],
         TextCell[
          Row[{"Fold[f[][", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], ",x[],{1,2,3}]"}]]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {"\<\"Closing Bracket Missed\"\>"},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          ",x[],{1,2,3}]"
         }],ExpressionUUID->"fc6f138c-4edf-4a74-93b9-b09ef58457b6"],
         TextCell[
          Row[{"Fold[f[][", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], ",x[],{1,2,3}]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][,",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "x[],{1,2,3}]"
         }],ExpressionUUID->"098bae65-647b-416b-b2d6-6251c4d81ddf"],
         TextCell[
          Row[{"Fold[f[][,", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], "x[],{1,2,3}]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][,x",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "[],{1,2,3}]"
         }],ExpressionUUID->"573d4e19-46ab-4705-a9f8-434cdce1ba7d"],
         TextCell[
          Row[{"Fold[f[][,x", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], "[],{1,2,3}]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][,x[",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "],{1,2,3}]"
         }],ExpressionUUID->"2c98dfa4-73bb-4307-9b69-933453085b1b"],
         TextCell[
          Row[{"Fold[f[][,x[", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], "],{1,2,3}]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][,x[]",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          ",{1,2,3}]"
         }],ExpressionUUID->"69b3d4ce-98da-4534-8016-333e14a9aa8a"],
         TextCell[
          Row[{"Fold[f[][,x[]", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{1,2,3}]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][,x[],",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "{1,2,3}]"
         }],ExpressionUUID->"a115d826-93e1-47b5-bab9-ef1f26fe5ae3"],
         TextCell[
          Row[{"Fold[f[][,x[],", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], "{1,2,3}]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][,x[],{1,2,3}",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "]"
         }],ExpressionUUID->"fc58d07d-c51d-4ca3-9a7c-98873164483b"],
         TextCell[
          Row[{"Fold[f[][,x[],{1,2,3}", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][,x[],{1,2,3}]",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]]
         }],ExpressionUUID->"93bb43ab-3557-40c2-b1f7-3627423b3820"],
         TextCell[
          Row[{"Fold[f[][,x[],{1,2,3}]", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7077822488177867`*^9, 3.7077832903904037`*^9, 3.7077837603969398`*^9, 
   3.707817646102131*^9, 3.707817727129226*^9, 3.707818439783225*^9, 
   3.7078201193498893`*^9, 3.707820341352482*^9, 3.707910305586026*^9, {
   3.707936522721079*^9, 3.7079365616124754`*^9}, 3.7079387065685854`*^9, 
   3.7079550359789405`*^9, 3.7080099553727493`*^9, 
   3.7080166188348627`*^9},ExpressionUUID->"ba900d1f-07ac-46b0-8a0a-\
c123b34c6539"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"syntaxCorrector", "[", 
    RowBox[{"\"\<Fold[f[][][],x[][[],{1,2,3}]\>\"", ",", "#", ",", "20"}], 
    "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"True", ",", "False"}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.707936595539129*^9, {3.707955039322736*^9, 
   3.7079550396352367`*^9}},ExpressionUUID->"23628450-349b-4181-805f-\
556c6f33bcc9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TagBox[GridBox[{
       {"\<\"Closing Bracket Missed\"\>"},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][][],x[][",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "[],{1,2,3}]"
         }],ExpressionUUID->"a0400fcf-5179-49d7-8a03-661f29e80822"],
         TextCell[
          Row[{"Fold[f[][][],x[][", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], "[],{1,2,3}]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][][],x[][[",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "],{1,2,3}]"
         }],ExpressionUUID->"90b6cfcb-79b5-4dfd-b1b7-4a71a511f66c"],
         TextCell[
          Row[{"Fold[f[][][],x[][[", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], "],{1,2,3}]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][][],x[][[]",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          ",{1,2,3}]"
         }],ExpressionUUID->"91cbd3f2-d507-4ed3-a072-b47a4cdaf3ea"],
         TextCell[
          Row[{"Fold[f[][][],x[][[]", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{1,2,3}]"}]]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {"\<\"Closing Bracket Missed\"\>"},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][][],x[][",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "[],{1,2,3}]"
         }],ExpressionUUID->"47d8330e-0669-4637-a673-aac02da7ad13"],
         TextCell[
          Row[{"Fold[f[][][],x[][", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], "[],{1,2,3}]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][][],x[][[",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "],{1,2,3}]"
         }],ExpressionUUID->"4a72c8b2-c1da-4f8c-b844-cbb1a6516be8"],
         TextCell[
          Row[{"Fold[f[][][],x[][[", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], "],{1,2,3}]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f[][][],x[][[]",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          ",{1,2,3}]"
         }],ExpressionUUID->"3e4575f5-5db3-4401-8f2d-5e947de3c40f"],
         TextCell[
          Row[{"Fold[f[][][],x[][[]", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{1,2,3}]"}]]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{3.7077822982019963`*^9, 3.7077832933393106`*^9, 
  3.707783765634364*^9, 3.7078176526671658`*^9, 3.7078177294380836`*^9, 
  3.7078184416478252`*^9, 3.7078201220051413`*^9, 3.707820345352293*^9, 
  3.707834981531517*^9, 3.7079103093877163`*^9, 3.7079365961209993`*^9, 
  3.70793871265832*^9, 3.7079550399477224`*^9, 3.708009959963989*^9, 
  3.7080166188939023`*^9},ExpressionUUID->"570fc5f4-8cfc-4a5d-9580-\
048aebc80861"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"syntaxCorrector", "[", 
    RowBox[{"\"\<Fold[f,x[,{1,2,3}]\>\"", ",", "#", ",", "20"}], "]"}], "&"}],
   "/@", 
  RowBox[{"{", 
   RowBox[{"True", ",", "False"}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.7079365997992306`*^9, {3.7079550446040273`*^9, 3.7079550448384047`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"ccdff6ac-c941-4129-95f0-69e50b525925"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TagBox[GridBox[{
       {"\<\"Closing Bracket Missed\"\>"},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f,x[",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          ",{1,2,3}]"
         }],ExpressionUUID->"a85a25d5-82a4-494f-820b-d006aa1c5a66"],
         TextCell[
          Row[{"Fold[f,x[", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{1,2,3}]"}]]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {"\<\"Closing Bracket Missed\"\>"},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f,x[",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          ",{1,2,3}]"
         }],ExpressionUUID->"82d1971b-277d-422e-94e5-6f1c6dd7b0e9"],
         TextCell[
          Row[{"Fold[f,x[", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{1,2,3}]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f,x[,",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "{1,2,3}]"
         }],ExpressionUUID->"a6f23127-fcaf-4edd-a752-cab1d565b5e2"],
         TextCell[
          Row[{"Fold[f,x[,", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], "{1,2,3}]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f,x[,{1,2,3}",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "]"
         }],ExpressionUUID->"7f08553d-b19a-4608-9d54-80dbb138f9e4"],
         TextCell[
          Row[{"Fold[f,x[,{1,2,3}", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Fold[f,x[,{1,2,3}]",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]]
         }],ExpressionUUID->"b1ea3e2f-8eac-413d-a0ce-d6d3bd56426b"],
         TextCell[
          Row[{"Fold[f,x[,{1,2,3}]", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.707782314563439*^9, 3.707783772196677*^9, {3.707817660177515*^9, 
   3.707817672086181*^9}, 3.7078177341435127`*^9, 3.7078184776025095`*^9, 
   3.7078193605136967`*^9, 3.7078195827873073`*^9, 3.7078201352378874`*^9, 
   3.7078203523122177`*^9, 3.707834990385765*^9, {3.7078350544891143`*^9, 
   3.7078350572300406`*^9}, 3.7079103124275017`*^9, 3.7079366002506638`*^9, 
   3.707938715335812*^9, 3.7079550452133884`*^9, 3.7080099635755367`*^9, 
   3.7080166190084825`*^9},ExpressionUUID->"20201fb0-fe6c-451e-9955-\
6d8d7e370c21"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"syntaxCorrector", "[", 
    RowBox[{
    "\"\<Function[x,Evaluate[Together[Nest[Function[z,(z+a/z)/2,x,4]]]]\>\"", 
     ",", "#", ",", "20"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"True", ",", "False"}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.7079366073732214`*^9, {3.707955048588435*^9, 3.7079550488540635`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"92906bae-8ed0-4e98-9aff-406f6c16cdbb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TagBox[GridBox[{
       {"\<\"Closing Bracket Missed\"\>"},
       {
        InterpretationBox[Cell[TextData[{
          "Function[x,Evaluate[Together[Nest[Function[z,(z+a/z)",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "/2,x,4]]]]"
         }],ExpressionUUID->"d05ff3e3-cfb1-4242-ab1e-6e9c324b941a"],
         TextCell[
          Row[{"Function[x,Evaluate[Together[Nest[Function[z,(z+a/z)", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], "/2,x,4]]]]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Function[x,Evaluate[Together[Nest[Function[z,(z+a/z)/2",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          ",x,4]]]]"
         }],ExpressionUUID->"7ff5dc24-b964-4fc9-8c56-82d58a4f627f"],
         TextCell[
          Row[{"Function[x,Evaluate[Together[Nest[Function[z,(z+a/z)/2", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], ",x,4]]]]"}]]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {"\<\"Closing Bracket Missed\"\>"},
       {
        InterpretationBox[Cell[TextData[{
          "Function[x,Evaluate[Together[Nest[Function[z,",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "(z+a/z)/2,x,4]]]]"
         }],ExpressionUUID->"bcbdb89f-7cc1-412b-b572-29d99e70fb87"],
         TextCell[
          Row[{"Function[x,Evaluate[Together[Nest[Function[z,", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], 
            "(z+a/z)/2,x,4]]]]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Function[x,Evaluate[Together[Nest[Function[z,(z+a/z)",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          "/2,x,4]]]]"
         }],ExpressionUUID->"4ec8e4d7-9033-4452-9a50-75b9d64d8af4"],
         TextCell[
          Row[{"Function[x,Evaluate[Together[Nest[Function[z,(z+a/z)", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], "/2,x,4]]]]"}]]]},
       {
        InterpretationBox[Cell[TextData[{
          "Function[x,Evaluate[Together[Nest[Function[z,(z+a/z)/2",
          StyleBox["]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          ",x,4]]]]"
         }],ExpressionUUID->"60b0c25e-fe5f-4c23-a43f-930653818cb5"],
         TextCell[
          Row[{"Function[x,Evaluate[Together[Nest[Function[z,(z+a/z)/2", 
            Style["]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], ",x,4]]]]"}]]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.707782439730847*^9, 3.70778308259172*^9, 3.707783774634905*^9, {
   3.707816236199047*^9, 3.7078162515219374`*^9}, 3.7078176806627955`*^9, 
   3.7078177369346757`*^9, 3.707818474122487*^9, 3.7078189631786704`*^9, {
   3.7078203590319643`*^9, 3.707820369247636*^9}, {3.7078248804287615`*^9, 
   3.707824908175397*^9}, 3.707826092936386*^9, 3.7078261705141487`*^9, 
   3.7078350634078865`*^9, 3.7079104411834507`*^9, 3.7079366078999996`*^9, 
   3.7079387178691425`*^9, 3.7079550502759457`*^9, 3.7080099664655857`*^9, 
   3.7080166191190624`*^9},ExpressionUUID->"cc48e2ca-2c20-4ddd-aad1-\
5e5de24b03b4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"syntaxCorrector", "[", 
    RowBox[{"\"\<Nest[f,,4]\>\"", ",", "#", ",", "20"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"True", ",", "False"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.707911801941455*^9, 3.7079118406648874`*^9}, {
  3.70793661625186*^9, 3.707936619174532*^9}, {3.707952871455854*^9, 
  3.7079528717683563`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"24784d11-5f83-4aef-bb22-609b246eb9de"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TagBox[GridBox[{
       {"\<\"Letter or Number Missed\"\>"},
       {
        InterpretationBox[Cell[TextData[{
          "Nest[f,",
          StyleBox["\[Placeholder]",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontSize->20,
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]],
          ",4]"
         }],ExpressionUUID->"6c93abc4-e118-4228-adb5-c280628fed18"],
         TextCell[
          Row[{"Nest[f,", 
            Style["\[Placeholder]", 
             RGBColor[1, 0, 0], FontSize -> 20, Bold], ",4]"}]]]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]], ",", 
   TagBox[
    TagBox[GridBox[{
       {"\<\"All Correct!\"\>"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     Column],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.707911822722885*^9, 3.707911842195349*^9}, 
   3.7079359976452007`*^9, 3.7079360531467366`*^9, 3.707936620127695*^9, 
   3.707938721099291*^9, 3.7079393669725056`*^9, 3.707952872805026*^9, 
   3.7079536220139914`*^9, 3.707954787742528*^9, 3.7079550557291174`*^9, 
   3.708009969619804*^9, 3.708010071684836*^9, 
   3.708016619237644*^9},ExpressionUUID->"45ff0409-cdfd-4dba-9664-\
53265a04c39c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testOnly", "=", 
   RowBox[{"StringDelete", "[", 
    RowBox[{
     RowBox[{"NotebookImport", "[", 
      RowBox[{
      "\"\<E:\\\\Downloads\\\\\
TwoDimensionalCellularAutomataFromOneDimensionalRules-author.nb\>\"", ",", 
       RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<InputText\>\""}]}], "]"}], 
     ",", "WhitespaceCharacter"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7079405305903463`*^9, 3.7079405426581497`*^9}, {
  3.7079405980485287`*^9, 
  3.7079406008032265`*^9}},ExpressionUUID->"f8fbcc9e-69f1-471d-8226-\
0429369521db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", 
  RowBox[{"testOnly2", ",", "True", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.70794094731155*^9, 3.707940958423691*^9}, {
   3.7079410034817076`*^9, 3.7079410151572227`*^9}, {3.7079417387087083`*^9, 
   3.707941743646166*^9}, 3.7079424068021126`*^9, {3.7079424442453527`*^9, 
   3.707942445568016*^9}, {3.7079426615750313`*^9, 
   3.7079426731124315`*^9}},ExpressionUUID->"0926240e-b78e-4c58-80cb-\
bcacfff3aca0"],

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", 
  RowBox[{"testOnly2", ",", "True", ",", "20"}], "]"}]], "Output",
 CellChangeTimes->{
  3.707940546307649*^9, 3.7079406033135395`*^9, 3.7079406487877274`*^9, {
   3.707940708984404*^9, 3.707940783959627*^9}, {3.707940884122134*^9, 
   3.707940923579223*^9}, 3.7079409602145634`*^9, {3.7079410073158603`*^9, 
   3.707941016235489*^9}, 3.7079417594365473`*^9, 3.707941800342613*^9, {
   3.707942440841383*^9, 3.707942446296211*^9}, 3.707942521911775*^9, {
   3.707942664794308*^9, 3.707942679725647*^9}, 3.7079427151114845`*^9, 
   3.707955112058676*^9, 3.7079551550361433`*^9, 
   3.7080166204525113`*^9},ExpressionUUID->"4df89ec1-d696-4e31-98bf-\
798c098b441b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"numTest", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"Flatten", "@", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"StringLength", "@", "testOnly"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testOnly2", "=", 
   RowBox[{
    RowBox[{"StringDrop", "[", 
     RowBox[{"testOnly", ",", 
      RowBox[{"{", "numTest", "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"messageAnalysis", "@", "testOnly2"}]}], "Input",
 CellChangeTimes->{{3.7079405443090897`*^9, 3.7079405458247623`*^9}, {
  3.7079406137175107`*^9, 3.707940648027233*^9}, {3.707940708287732*^9, 
  3.7079407836248918`*^9}, {3.7079408834915223`*^9, 3.7079409125855293`*^9}, {
  3.7079417066882534`*^9, 
  3.7079417090067406`*^9}},ExpressionUUID->"4b07900e-21de-44ec-bd76-\
5726a84deb90"],

Cell[BoxData["974"], "Output",
 CellChangeTimes->{{3.7079417324549265`*^9, 3.707941763362415*^9}, 
   3.7079426854180326`*^9, 3.707942759715373*^9, {3.707955064322933*^9, 
   3.707955079401183*^9}, {3.7079551474110937`*^9, 3.7079551513329906`*^9}, {
   3.707955182145755*^9, 3.7079552000990324`*^9}, 3.708016620500041*^9, {
   3.708206112651068*^9, 3.708206116069663*^9}, {3.708206197863022*^9, 
   3.708206207391977*^9}, {3.70820626996402*^9, 
   3.7082062741069417`*^9}},ExpressionUUID->"138cdcb7-5c48-49af-a839-\
c8d7504a2073"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7079417324549265`*^9, 3.707941763362415*^9}, 
   3.7079426854180326`*^9, 3.707942759715373*^9, {3.707955064322933*^9, 
   3.707955079401183*^9}, {3.7079551474110937`*^9, 3.7079551513329906`*^9}, {
   3.707955182145755*^9, 3.7079552000990324`*^9}, 3.708016620500041*^9, {
   3.708206112651068*^9, 3.708206116069663*^9}, {3.708206197863022*^9, 
   3.708206207391977*^9}, {3.70820626996402*^9, 
   3.7082062744031515`*^9}},ExpressionUUID->"cab35c6e-c2c0-4e1f-9ce1-\
3d4a70f4f7bb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", 
  RowBox[{"testOnly2", ",", "True", ",", "20"}], "]"}]], "Input",ExpressionUUI\
D->"903e84fe-d913-45e8-abd3-1a845a0f3bbe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"allexamples", "=", 
   RowBox[{"Flatten", "/@", 
    RowBox[{"Association", "[", 
     RowBox[{"WolframLanguageData", "[", 
      RowBox[{"\"\<Graphics\>\"", ",", "\"\<DocumentationExampleInputs\>\""}],
       "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707154784729302*^9, 3.7071547907555385`*^9}, 
   3.707154834511428*^9, {3.7072606157371807`*^9, 3.70726061621389*^9}, {
   3.707260672672909*^9, 3.707260683213067*^9}, {3.7072607491822343`*^9, 
   3.7072607721164722`*^9}, {3.707307473974388*^9, 3.7073075005347795`*^9}, {
   3.707307564919465*^9, 3.707307565185091*^9}, {3.7073077014209213`*^9, 
   3.7073077184836025`*^9}, {3.7073077729529357`*^9, 3.707307820306341*^9}, {
   3.707418400290495*^9, 3.70741840216482*^9}, {3.70741901496215*^9, 
   3.7074190212716007`*^9}, {3.7074202569848766`*^9, 
   3.7074202592314663`*^9}, {3.7074233048391542`*^9, 
   3.7074233082336025`*^9}, {3.7080042388230333`*^9, 3.708004239485157*^9}, {
   3.7080051218084927`*^9, 3.7080051457062054`*^9}, {3.7082065443794985`*^9, 
   3.7082065471451883`*^9}},ExpressionUUID->"b1aae7b7-6265-49ac-8a30-\
cbacd6f76a34"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"genexamples", "=", 
  RowBox[{"Lookup", "[", 
   RowBox[{"allexamples", ",", "\"\<Applications\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7073075926072593`*^9, 3.70730761492*^9}, {
   3.707391965858786*^9, 3.7073919714518204`*^9}, {3.7074008906479635`*^9, 
   3.7074008986489596`*^9}, {3.7074233286119766`*^9, 3.707423329489604*^9}, 
   3.7074246556625133`*^9, {3.707429437798353*^9, 3.7074294481568165`*^9}, {
   3.708004254328376*^9, 3.7080042578264837`*^9}, {3.7080051698913803`*^9, 
   3.7080051748379083`*^9}},ExpressionUUID->"1c1299d9-d66e-4661-b657-\
ccbc2f7f6dae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{Cell[BoxData[
    RowBox[{"Subsets", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], ",", 
      RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
    ShowStringCharacters->True,ExpressionUUID->
    "2cd4c0a0-5d7c-40a3-9cfc-413565efa827"], ",", Cell[BoxData[
    RowBox[{"Binomial", "[", 
     RowBox[{"4", ",", "3"}], "]"}]], "Input",
    ShowStringCharacters->True,ExpressionUUID->
    "a9f5f529-ff80-40a6-a4f5-348aaf218473"], ",", Cell[BoxData[
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"Subsets", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Cos", "[", 
             RowBox[{"2", "Pi", " ", 
              RowBox[{"i", "/", "8"}]}], "]"}], ",", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "Pi", " ", 
              RowBox[{"i", "/", "8"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "8"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "]"}]], "Input",
    ShowStringCharacters->True,ExpressionUUID->
    "b5613440-37ae-4828-badd-1a21ca89f782"], ",", Cell[BoxData[
    RowBox[{"Total", "[", 
     RowBox[{"Subsets", "[", 
      RowBox[{
       RowBox[{"Times", "[", 
        RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "]"}], ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], "]"}]], "Input",
    ShowStringCharacters->True,ExpressionUUID->
    "3456010f-492f-40ce-bad9-f9fbf9f295e7"], ",", Cell[BoxData[
    RowBox[{"Subsets", "[", 
     RowBox[{"Divisors", "[", "10", "]"}], "]"}]], "Input",
    ShowStringCharacters->True,ExpressionUUID->
    "d4f926b1-b1a9-449e-ada1-c60ced3c5897"], ",", Cell[BoxData[
    RowBox[{"Subsets", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4", ",", "8", ",", "16"}], "}"}], ",", 
      RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
    ShowStringCharacters->True,ExpressionUUID->
    "d72d6a92-7e70-47f3-aa2d-3291d246b3d0"], ",", Cell[BoxData[
    RowBox[{"Total", "/@", "%"}]], "Input",
    ShowStringCharacters->True,ExpressionUUID->
    "16b43aeb-3bbc-4aa7-8049-65387f83d6d0"], ",", Cell[BoxData[
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Line", "/@", 
      RowBox[{"Subsets", "[", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"100", ",", 
          RowBox[{"{", 
           RowBox[{"20", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]], "Input",
    ShowStringCharacters->True,ExpressionUUID->
    "2ba9ad57-5e81-4387-a235-54ca66e6ef53"], ",", Cell[BoxData[
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"Subsets", "[", 
       RowBox[{
        RowBox[{"Tuples", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", "3"}], "]"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], "]"}], "]"}]], "Input",
    ShowStringCharacters->True,ExpressionUUID->
    "736da6bc-f9c2-4b54-86d9-fef9eeecc7bb"]}], "}"}]], "Output",
 CellChangeTimes->{{3.7074294380961914`*^9, 3.707429448330905*^9}, {
   3.7080042431990576`*^9, 3.708004258048001*^9}, {3.7080051626211004`*^9, 
   3.708005175767864*^9}, 3.708016621082444*^9, 
   3.708206301010993*^9},ExpressionUUID->"f3f83e55-2d29-41ce-bb69-\
49df86dc5f7e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"curatedgenexamples", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"NotebookImport", "[", 
       RowBox[{
        RowBox[{"Notebook", "[", 
         RowBox[{"{", 
          RowBox[{"genexamples", "[", 
           RowBox[{"[", 
            RowBox[{"#", ",", "1"}], "]"}], "]"}], "}"}], "]"}], ",", 
        RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<InputText\>\""}]}], "]"}], 
      "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", "genexamples", "]"}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.707308018621872*^9, 3.7073081305561094`*^9}, 
   3.707424647685878*^9},ExpressionUUID->"bf105c45-d2b1-4523-ad8a-\
e70b894ca931"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"oneexample", "=", 
   RowBox[{"curatedgenexamples", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"StringDelete", "[", 
    RowBox[{"oneexample", ",", "WhitespaceCharacter"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"removed", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{"input", ",", 
       RowBox[{"{", "#", "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"StringLength", "[", "input", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"syntaxCorrector", "[", 
     RowBox[{"#", ",", "True", ",", "20"}], "]"}], "&"}], "/@", "removed"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.708004289960766*^9, 3.7080043001905584`*^9}, 
   3.7080044250467815`*^9, {3.7080047335404396`*^9, 3.708004740833805*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"384f5ff4-b78a-47c1-9667-c25723f9bb77"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "{1,2,3,4},{3}]"
            }],ExpressionUUID->"fcf7301a-435e-4ede-88d7-3e012232f3ee"],
            TextCell[
             Row[{"Subsets", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "{1,2,3,4},{3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening brace missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "1,2,3,4},{3}]"
            }],ExpressionUUID->"86f4d0e7-99b5-4bb6-a9b0-7ac0ebed65b8"],
            TextCell[
             Row[{"Subsets[", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "1,2,3,4},{3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",2,3,4},{3}]"
            }],ExpressionUUID->"d99a5c0c-0bed-44fa-8c7b-85c037a7e4af"],
            TextCell[
             Row[{"Subsets[{", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",2,3,4},{3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",3,4},{3}]"
            }],ExpressionUUID->"32962fb2-bebe-41b7-ab1c-7fec26698815"],
            TextCell[
             Row[{"Subsets[{1,", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",3,4},{3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",4},{3}]"
            }],ExpressionUUID->"fe22a02d-43a6-4d06-b609-948a32ce8a11"],
            TextCell[
             Row[{"Subsets[{1,2,", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",4},{3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "},{3}]"
            }],ExpressionUUID->"5ec37a74-a6cb-460e-ba58-080855009925"],
            TextCell[
             Row[{"Subsets[{1,2,3,", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "},{3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing brace missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "3,4,{3}]"
            }],ExpressionUUID->"4213ee6a-3a20-4ab4-81df-eb97193c5a16"],
            TextCell[
             Row[{"Subsets[{1,2,", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "3,4,{3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",4,{3}]"
            }],ExpressionUUID->"c4c89137-2093-4bd4-b1c9-a7d825ada47e"],
            TextCell[
             Row[{"Subsets[{1,2,3", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",4,{3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{3}]"
            }],ExpressionUUID->"728dd988-687f-4327-9f22-53a7e97f3a85"],
            TextCell[
             Row[{"Subsets[{1,2,3,4", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4,{",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "3}]"
            }],ExpressionUUID->"e08037d7-7adb-4a08-a944-41977adc44cf"],
            TextCell[
             Row[{"Subsets[{1,2,3,4,{", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4,{3",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "}]"
            }],ExpressionUUID->"cbdad521-af35-4321-9b66-07d9b363b5ff"],
            TextCell[
             Row[{"Subsets[{1,2,3,4,{3", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4,{3}",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]"
            }],ExpressionUUID->"7e94bddb-b212-4da6-a607-63bfc63f1d22"],
            TextCell[
             Row[{"Subsets[{1,2,3,4,{3}", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or number Missed\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening brace missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "{1,2,3,4},3}]"
            }],ExpressionUUID->"5bc7cdb0-195e-48aa-a283-6145a41ca1b2"],
            TextCell[
             Row[{"Subsets[", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "{1,2,3,4},3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "1,2,3,4},3}]"
            }],ExpressionUUID->"ab1a6e36-55ce-411d-8625-1bb54629c7b8"],
            TextCell[
             Row[{"Subsets[{", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "1,2,3,4},3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "2,3,4},3}]"
            }],ExpressionUUID->"dccb7df4-6aa9-462a-9a42-830fdf9d90b8"],
            TextCell[
             Row[{"Subsets[{1,", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,3,4},3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "3,4},3}]"
            }],ExpressionUUID->"6cfd0ed8-467a-421b-8b47-1fec3bf342a2"],
            TextCell[
             Row[{"Subsets[{1,2,", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "3,4},3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "4},3}]"
            }],ExpressionUUID->"28e8e944-b624-4205-af7b-f1bbb0a7ee48"],
            TextCell[
             Row[{"Subsets[{1,2,3,", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "4},3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "},3}]"
            }],ExpressionUUID->"01782a75-b547-4ef3-a15b-376052d1ac85"],
            TextCell[
             Row[{"Subsets[{1,2,3,4", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "},3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4},",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "3}]"
            }],ExpressionUUID->"d17f2d20-b248-4b48-8334-be13a11ad4df"],
            TextCell[
             Row[{"Subsets[{1,2,3,4},", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[{1,2,3,4},{}]"
            }],ExpressionUUID->"415b8079-021d-4b6c-863c-fc9cbdf090ae"],
            TextCell[
             Row[{"Subsets", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "[{1,2,3,4},{}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing brace missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4},{3",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]"
            }],ExpressionUUID->"b2f0ef4f-c729-4a88-9a81-c8366b34a211"],
            TextCell[
             Row[{"Subsets[{1,2,3,4},{3", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4},{3}",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]]
            }],ExpressionUUID->"4f95792a-ca90-4668-9943-ce93e7bc9091"],
            TextCell[
             Row[{"Subsets[{1,2,3,4},{3}", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7080044072270374`*^9, 3.7080044255112014`*^9}, 
   3.7080047413104353`*^9, 3.7080166218744926`*^9, 
   3.708206307660701*^9},ExpressionUUID->"9796b2fe-97e5-4ca1-9a2d-\
818ccdbdf70c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"oneexample", "=", 
   RowBox[{"curatedgenexamples", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"StringDelete", "[", 
    RowBox[{"oneexample", ",", "WhitespaceCharacter"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"removed", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{"input", ",", 
       RowBox[{"{", "#", "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"StringLength", "[", "input", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"syntaxCorrector", "[", 
     RowBox[{"#", ",", "True", ",", "20"}], "]"}], "&"}], "/@", "removed"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.708004833503882*^9, 3.708004833691725*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"3e50d230-2606-470d-82d3-c5b64371b8d8"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening Bracket Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Binomial",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "4,3]"
            }],ExpressionUUID->"623ee6da-c77a-40c8-ac06-77ca1c4464ac"],
            TextCell[
             Row[{"Binomial", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "4,3]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or Number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Binomial[",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",3]"
            }],ExpressionUUID->"d90374df-4e05-449f-b517-7cd00f677f8a"],
            TextCell[
             Row[{"Binomial[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",3]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or Number Missed\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or Number Missed\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing Bracket Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Binomial[4,3",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]]
            }],ExpressionUUID->"91135711-a09c-43a7-801b-aa2ea77f5a5e"],
            TextCell[
             Row[{"Binomial[4,3", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.708004834057625*^9, 3.70800488016195*^9, 
  3.708016622147683*^9},ExpressionUUID->"5866620d-a317-4dbe-a933-\
c9a43e50de10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"oneexample", "=", 
   RowBox[{"curatedgenexamples", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"StringDelete", "[", 
    RowBox[{"oneexample", ",", "WhitespaceCharacter"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"removed", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{"input", ",", 
       RowBox[{"{", "#", "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"StringLength", "[", "input", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"syntaxCorrector", "[", 
     RowBox[{"#", ",", "True", ",", "20"}], "]"}], "&"}], "/@", "removed"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.708004916021454*^9, 3.708004916144803*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"d60872f8-883d-456d-9c45-e04511296ede"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "G",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             
             "raphicsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]\
]"
            }],ExpressionUUID->"286fe544-2a21-43e9-aa9d-b7484763a4ef"],
            TextCell[
             Row[{"G", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "raphicsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}\
]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Gr",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "aphicsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"bfdc44e1-8a76-4eae-9afa-5a63f342953d"],
            TextCell[
             Row[{"Gr", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "aphicsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]\
]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Gra",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "phicsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"383c22d1-8e15-4878-8d44-833f11a75bb7"],
            TextCell[
             Row[{"Gra", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "phicsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]\
]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Grap",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "hicsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"e125989c-04c7-4cf9-a6f7-db5e6756057d"],
            TextCell[
             Row[{"Grap", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "hicsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]\
"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graph",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "icsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"b79ce5e3-bea3-4245-bf0c-13e49c1ac3d6"],
            TextCell[
             Row[{"Graph", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "icsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]\
"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphi",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "csLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"55eb25ba-541a-4139-8e42-0491ccc183da"],
            TextCell[
             Row[{"Graphi", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "csLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}\
]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphic",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "sLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"a72617f8-8e7f-4d24-b66c-c3ebf530cb90"],
            TextCell[
             Row[{"Graphic", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "sLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]\
]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"129cc534-53da-4e4e-8591-d90f4dc82300"],
            TextCell[
             Row[{"Graphics", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]\
]},
          {
           InterpretationBox[Cell[TextData[{
             "GraphicsL",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"507a6280-3dda-4ebe-a129-d873af26952f"],
            TextCell[
             Row[{"GraphicsL", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]\
},
          {
           InterpretationBox[Cell[TextData[{
             "GraphicsLi",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ne[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"cd044bac-a8b9-4c89-b302-633f4559f380"],
            TextCell[
             Row[{"GraphicsLi", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ne[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "GraphicsLin",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "e[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"b60d25cf-6e52-4f1e-84c8-09de50e95108"],
            TextCell[
             Row[{"GraphicsLin", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "e[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "GraphicsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]\
",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]]"
            }],ExpressionUUID->"2eb0fe46-b539-48b2-b26b-a658fdda94ce"],
            TextCell[
             
             Row[{"GraphicsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]\
,{2}]", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "GraphicsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]\
]",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]"
            }],ExpressionUUID->"3c6f1ab9-e532-41d0-817c-e15c1cf426fb"],
            TextCell[
             
             Row[{"GraphicsLine[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]\
,{2}]]", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[L",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ineSubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"7dd9192c-7885-4e93-91a4-a143563b6f4a"],
            TextCell[
             Row[{"Graphics[L", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ineSubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Li",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "neSubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"cd0749e2-a5b1-40ed-8deb-ff8254266e90"],
            TextCell[
             Row[{"Graphics[Li", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "neSubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Lin",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "eSubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"c9a8cfc1-79bf-42ae-9373-29590053e6f6"],
            TextCell[
             Row[{"Graphics[Lin", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "eSubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"18259d66-0272-4fdb-b47e-04d7b4b5a4c1"],
            TextCell[
             Row[{"Graphics[Line", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[LineS",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"e47c6c24-57d7-4a00-a244-7f8675e96a1d"],
            TextCell[
             Row[{"Graphics[LineS", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[LineSu",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "bsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"fa65bf98-51e0-41fb-a7f5-8974d81b5c65"],
            TextCell[
             Row[{"Graphics[LineSu", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "bsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[LineSub",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "sets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"858a7d64-b7b1-4e5d-ae99-e663fb658020"],
            TextCell[
             Row[{"Graphics[LineSub", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "sets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[LineSubs",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"d341cae0-0ed9-4edb-a795-d8ee5a29d447"],
            TextCell[
             Row[{"Graphics[LineSubs", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[LineSubse",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ts[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"9b950597-3c0e-408a-8813-98ef2bafc3fc"],
            TextCell[
             Row[{"Graphics[LineSubse", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ts[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[LineSubset",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "s[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"874d071f-e500-4af5-9a84-e0a7445c575b"],
            TextCell[
             Row[{"Graphics[LineSubset", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "s[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[LineSubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]]]"
            }],ExpressionUUID->"497a26d2-31bc-4f41-afb4-cadb05308a12"],
            TextCell[
             
             Row[{"Graphics[LineSubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]\
,{2}", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[LineSubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]\
",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]]"
            }],ExpressionUUID->"9f40a856-3263-4a2f-950f-6d017c00a9d9"],
            TextCell[
             
             Row[{"Graphics[LineSubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]\
,{2}]", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[LineSubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]\
]",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]"
            }],ExpressionUUID->"28829f96-3c85-4b55-b22f-d77379083849"],
            TextCell[
             
             Row[{"Graphics[LineSubsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]\
,{2}]]", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[S",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ubsetsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"a5ec5464-d9f9-4593-8008-acf5cb55f791"],
            TextCell[
             Row[{"Graphics[Line[S", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ubsetsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Su",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "bsetsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"83dc13fd-e1d8-41ac-bf2f-71b765d6cf5b"],
            TextCell[
             Row[{"Graphics[Line[Su", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "bsetsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Sub",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "setsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"d9411bba-af49-4d95-9821-ca285e81260c"],
            TextCell[
             Row[{"Graphics[Line[Sub", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "setsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subs",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "etsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"f9f30315-255c-4f6c-9e25-fc5e435bc18a"],
            TextCell[
             Row[{"Graphics[Line[Subs", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "etsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subse",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "tsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"11c635e0-5415-4511-b3f8-61eef221f2a8"],
            TextCell[
             Row[{"Graphics[Line[Subse", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "tsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subset",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "sTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"9f1abf70-fed8-4d6f-8175-a898515348ac"],
            TextCell[
             Row[{"Graphics[Line[Subset", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "sTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"56eb9a56-6568-46b1-b6e1-1e8661c0e3ee"],
            TextCell[
             Row[{"Graphics[Line[Subsets", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[SubsetsT",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "able[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"459fddbd-210b-456e-90fa-874f05abeae9"],
            TextCell[
             Row[{"Graphics[Line[SubsetsT", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "able[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[SubsetsTa",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ble[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"0a3aef3c-472e-4164-8f81-8c2067dffb4f"],
            TextCell[
             Row[{"Graphics[Line[SubsetsTa", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ble[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[SubsetsTab",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "le[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"d35f3846-eb7c-4025-8dde-62bbe57c3ce8"],
            TextCell[
             Row[{"Graphics[Line[SubsetsTab", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "le[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[SubsetsTabl",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "e[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"e192a47e-a42a-4437-85b1-097bef8bb4e4"],
            TextCell[
             Row[{"Graphics[Line[SubsetsTabl", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "e[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[SubsetsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "],{2}]]]"
            }],ExpressionUUID->"40cbd04f-8ee1-4bb5-84a5-8743b8a47557"],
            TextCell[
             
             Row[{"Graphics[Line[SubsetsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[SubsetsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]]]"
            }],ExpressionUUID->"d2aed324-8dc6-4831-a04e-954fd0fdf78e"],
            TextCell[
             
             Row[{"Graphics[Line[SubsetsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]\
,{2}", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[SubsetsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]\
",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]]"
            }],ExpressionUUID->"0f190785-ea73-4c6c-a72b-6162d8cdbd72"],
            TextCell[
             
             Row[{"Graphics[Line[SubsetsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]\
,{2}]", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[SubsetsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]\
]",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]"
            }],ExpressionUUID->"7b434dc4-c488-4a46-83c5-2324aac97531"],
            TextCell[
             
             Row[{"Graphics[Line[SubsetsTable[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]\
,{2}]]", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"287c38c3-fe82-4473-a5bc-023690bd28a0"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening brace missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"f57f81c4-5912-4846-a163-c2974ad97443"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[Cos[2Pii/8],Sin[2Pii/8]",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "},{i,8}],{2}]]]"
            }],ExpressionUUID->"d6810e06-7b27-422c-8686-3ad0ceaf1ce4"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[Cos[2Pii/8],Sin[2Pii/8]", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "},{i,8}],{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{C",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "os2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"0f0ec375-39b9-46c8-9ad6-ec33ecccaf90"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{C", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "os2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Co",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "s2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"48621e72-f970-43f0-84f4-7d1f9030e451"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Co", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "s2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"0e7c36d7-ad8e-4a92-856c-7411ac79b6cb"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos2",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"b328fba3-533f-4ab2-9b24-2fbe79927e4b"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos2", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Pii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos2P",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ii/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"62104d16-2147-4dc8-b90b-4a77cd55f2cf"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos2P", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ii/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos2Pi",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "i/8],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"c23b3f90-693b-48c5-aada-14a184772ed7"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos2Pi", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "i/8],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos2Pii/8",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"8db0a90c-09c5-4792-8b27-a805349e0d78"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos2Pii/8", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "],Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"888116d1-7d79-42da-a365-fc69f2f06a6b"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "],Sin[2Pii/8]},{i,8}],{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Pii/8,Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"f248b7f0-7160-4777-aa61-e71a2a3475a0"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Pii/8,Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2P",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ii/8,Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"798dc967-b27b-4bed-bf7c-5a2aff96ba2b"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2P", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ii/8,Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pi",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "i/8,Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"73e62125-538e-45dc-8f28-e74f3f0a7016"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pi", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "i/8,Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "/8,Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"ef67978a-0970-4f37-aacc-1a7f07578a17"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "/8,Sin[2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",Sin[2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"5f511c37-d1b3-401c-bc66-df499b83c596"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",Sin[2Pii/8]},{i,8}],{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],S",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "in2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"a47b4fa4-5ad6-44ba-a0ca-6bfe5ab86d6e"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],S", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "in2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Si",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "n2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"40d9fbbf-dbae-4983-9161-4109fe3e6d99"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Si", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "n2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "2Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"0ee0b3b2-1e5a-4d3b-9556-7c24ed87163f"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "2Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin2",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Pii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"80b9e081-6b7c-4f55-8620-da6f85a39a0d"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin2", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Pii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin2P",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ii/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"1214b86f-402e-455c-8b8f-8f7af5049af7"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin2P", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ii/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin2Pi",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "i/8]},{i,8}],{2}]]]"
            }],ExpressionUUID->"93d71ec5-087a-4e3e-aeee-e663779247f1"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin2Pi", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "i/8]},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin2Pii/8",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]},{i,8}],{2}]]]"
            }],ExpressionUUID->"8052eb97-ff87-4169-b184-55deb468453c"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin2Pii/8", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "]},{i,8}],{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]},{i,8}],{2}]]]"
            }],ExpressionUUID->"46401190-7c03-4d3b-b3df-b4bbffe5b76a"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "]},{i,8}],{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Pii/8},{i,8}],{2}]]]"
            }],ExpressionUUID->"0a889767-25c6-4049-99f9-126ad5a96fe6"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Pii/8},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2P",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ii/8},{i,8}],{2}]]]"
            }],ExpressionUUID->"a620a574-3f80-4957-93ee-ebbe79c8ff55"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2P", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ii/8},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pi",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "i/8},{i,8}],{2}]]]"
            }],ExpressionUUID->"d23ad94d-42f5-429f-9d17-4821342a8558"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pi", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "i/8},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "/8},{i,8}],{2}]]]"
            }],ExpressionUUID->"7a334366-1bed-4e59-b5ad-7c346b870ee9"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "/8},{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "},{i,8}],{2}]]]"
            }],ExpressionUUID->"94f2f2fc-18dd-477d-91bd-9b6b5433b9ce"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "},{i,8}],{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing brace missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[2Pii/8],{i,8}],{2}]]]"
            }],ExpressionUUID->"631080b1-8d30-49e4-b991-4ad8b81ec057"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[2Pii/8],{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{i,8}],{2}]]]"
            }],ExpressionUUID->"f1efb6f5-08b0-4a6f-ba75-3f8fd1d40403"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8],{",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "i,8}],{2}]]]"
            }],ExpressionUUID->"a415261a-5ed8-4843-bed1-269871637a6c"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8],{", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8],{i",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",8}],{2}]]]"
            }],ExpressionUUID->"35bc868b-610f-428c-998d-bc5d59ab1086"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8],{i", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8],{i,8",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "}],{2}]]]"
            }],ExpressionUUID->"de8d47af-5a40-4c50-912a-572e113694b0"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8],{i,8", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8],{i,8}",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "],{2}]]]"
            }],ExpressionUUID->"abb4a1b2-176e-4ffd-9225-82dedf45ac53"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8],{i,8}\
", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "],{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening brace missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "{Cos[2Pii/8],Sin[2Pii/8]},i,8}],{2}]]]"
            }],ExpressionUUID->"22ecde7f-05c1-464a-a235-9927b0d50bc8"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "{Cos[2Pii/8],Sin[2Pii/8]},i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Cos[2Pii/8],Sin[2Pii/8]},i,8}],{2}]]]"
            }],ExpressionUUID->"3a4b96be-d406-41cc-afb2-1775b13907d5"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Cos[2Pii/8],Sin[2Pii/8]},i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Sin[2Pii/8]},i,8}],{2}]]]"
            }],ExpressionUUID->"3309160d-3158-45e1-9e82-93fccad8e88e"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Sin[2Pii/8]},i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "},i,8}],{2}]]]"
            }],ExpressionUUID->"89d30d69-21db-4d20-b231-56c0b8b2f0f6"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "},i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "i,8}],{2}]]]"
            }],ExpressionUUID->"9d0c1c8d-19bf-4e62-80e7-65a4bc4eb4c9"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "i,8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},i",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",8}],{2}]]]"
            }],ExpressionUUID->"54f1f986-dacf-48aa-a993-660d2a476400"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},i", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",8}],{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Table[{Cos[2Pii/8],Sin[2Pii/8]},{i8}],{2}]]]"
            }],ExpressionUUID->"cfed92da-5284-4f2e-b3d2-aa89a6bf0908"],
            TextCell[
             Row[{"Graphics[Line[Subsets[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Table[{Cos[2Pii/8],Sin[2Pii/8]},{i8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[{Cos[2Pii/8],Sin[2Pii/8]},{i8}],{2}]]]"
            }],ExpressionUUID->"1275ae9b-48f3-433c-b617-b0c0708b553c"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[{Cos[2Pii/8],Sin[2Pii/8]},{i8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "{i8}],{2}]]]"
            }],ExpressionUUID->"62d995d3-7051-4ade-8592-6d9f4733d224"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "{i8}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i8}",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "],{2}]]]"
            }],ExpressionUUID->"d1508485-0cbd-4e27-b4a5-d3596c75a7da"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i8}\
", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "],{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "{i,}],{2}]]]"
            }],ExpressionUUID->"f0dc767c-d743-4671-9fb2-30c0b2f15063"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "{i,}],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,}",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "],{2}]]]"
            }],ExpressionUUID->"165b766d-8202-4b4f-aae2-b61ab54772bf"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,}\
", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "],{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing brace missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "i,8],{2}]]]"
            }],ExpressionUUID->"fb775733-4d7c-4aae-a601-64f211224377"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "i,8],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "8],{2}]]]"
            }],ExpressionUUID->"73dae34f-4773-4c68-8ebd-ed0e59f16ecd"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "8],{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "],{2}]]]"
            }],ExpressionUUID->"73984444-22ea-4718-9cf8-dc274b494f39"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,\
8", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "],{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8},{2}]]]"
            }],ExpressionUUID->"e6ab6ebb-2b8d-472e-9d1b-b94d3bca0881"],
            TextCell[
             Row[{"Graphics[", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8},{2}]]]"}]]]\
},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8},{2}]]]"
            }],ExpressionUUID->"7cbd994b-879b-4dbb-b595-9577c5bd7387"],
            TextCell[
             Row[{"Graphics[Line", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8},{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8},{2}]]]"
            }],ExpressionUUID->"d0f5e3ae-0002-458e-82e8-79812f628863"],
            TextCell[
             Row[{"Graphics[Line[", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8},{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8},{2}]]]"
            }],ExpressionUUID->"cf9f05c0-26e3-42cc-8b64-ae968b03e67a"],
            TextCell[
             Row[{"Graphics[Line[Subsets", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8},{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{2}]]]"
            }],ExpressionUUID->"5ca453cc-254d-4ad8-9317-d324a610813b"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8},{2}",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]]]"
            }],ExpressionUUID->"1737c53d-3a40-49d2-aa62-66202e91908c"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
,{2}", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8},{2}]\
",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]]"
            }],ExpressionUUID->"03374865-fba1-413b-b917-5c46887a0222"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
,{2}]", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8},{2}]\
]",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]"
            }],ExpressionUUID->"57e31301-eac0-4c57-add0-da2b21c1adf8"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
,{2}]]", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8},{2}]\
]]",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]]
            }],ExpressionUUID->"4d158531-a12f-4a83-a0d2-f75365edefcb"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
,{2}]]]", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]{2}]]]"
            }],ExpressionUUID->"acd13d52-d621-4034-81ea-57417025f849"],
            TextCell[
             Row[{"Graphics[Line[Subsets[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]{2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]{2}]]]"
            }],ExpressionUUID->"08e40870-208c-4a0c-9d8b-f2139a4165e0"],
            TextCell[
             Row[{"Graphics[Line[Subsets[Table", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]{2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening brace missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],2}]]]"
            }],ExpressionUUID->"58721cb3-9ab6-4549-9978-1eb875d7e11e"],
            TextCell[
             Row[{"Graphics[Line[Subsets[", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],2}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "2}]]]"
            }],ExpressionUUID->"027d1ca3-255f-470b-8362-f922eaaba8e0"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
],", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "2}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{}]]]"
            }],ExpressionUUID->"24e1fa85-3f70-4404-9b14-f693601d3ca6"],
            TextCell[
             Row[{"Graphics[Line[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{}]]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{}]]]"
            }],ExpressionUUID->"92021b27-5bea-4dcf-a51a-c809de001611"],
            TextCell[
             Row[{"Graphics[Line[Subsets", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{}]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing brace missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]]]"
            }],ExpressionUUID->"065c5b71-4528-4103-a1d7-6d2ba07aaee8"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
],{2", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]]]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"
            }],ExpressionUUID->"7d39d557-b1f7-458a-a69a-7fabd367665d"],
            TextCell[
             Row[{"Graphics[", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"}]]]\
},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"
            }],ExpressionUUID->"2c5fba3e-b541-4837-b2ba-520dbd0f1e6c"],
            TextCell[
             Row[{"Graphics[Line", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"
            }],ExpressionUUID->"4bd25aaf-73b4-4ee4-bf63-5cfecbf3c7d9"],
            TextCell[
             Row[{"Graphics[Line[", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"
            }],ExpressionUUID->"20f1b657-3139-4598-ad0c-c460fd929208"],
            TextCell[
             Row[{"Graphics[Line[Subsets", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "],{2}]]"
            }],ExpressionUUID->"950f1072-a526-4b76-b276-f162cc0420bd"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "],{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{2}]]"
            }],ExpressionUUID->"f62e53f6-f241-440f-b261-7cb4df288abe"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
]", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}\
",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]]"
            }],ExpressionUUID->"07dc2cf9-d86f-496c-a0b3-d7d2646ff639"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
],{2}", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}\
]",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]"
            }],ExpressionUUID->"80beb086-46f5-4d44-bfdb-d17689bf65b8"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
],{2}]", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}\
]]",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]]
            }],ExpressionUUID->"9d309d80-a96d-4ac0-8dfe-3c5fa0a66ea1"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
],{2}]]", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"
            }],ExpressionUUID->"7a032cee-cffe-4ad4-99a0-86efa2b6fd76"],
            TextCell[
             Row[{"Graphics[", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"}]]]\
},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"
            }],ExpressionUUID->"be2ff75d-4ec5-4b54-9b2b-45b4b4884535"],
            TextCell[
             Row[{"Graphics[Line", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"
            }],ExpressionUUID->"8d0a2da5-c41d-4656-ad51-aacdb91cfd9e"],
            TextCell[
             Row[{"Graphics[Line[", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"
            }],ExpressionUUID->"99edab64-b041-49ac-aa8e-fb1dbb81cf2b"],
            TextCell[
             Row[{"Graphics[Line[Subsets", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "],{2}]]"
            }],ExpressionUUID->"152822ba-c2d8-4dae-8e94-f719aa4e7c31"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "],{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{2}]]"
            }],ExpressionUUID->"6d9fc9e1-471e-4447-9af5-a14645f2a136"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
]", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}\
",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]]"
            }],ExpressionUUID->"3b181e0f-e6b1-480a-9eb8-ddf6c4497e0c"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
],{2}", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}\
]",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]"
            }],ExpressionUUID->"9f615d4f-499d-4129-bedd-20a3b8810a51"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
],{2}]", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}\
]]",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]]
            }],ExpressionUUID->"47205ae8-5f32-46ff-adba-bd82eaa9442e"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
],{2}]]", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing bracket missing\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"
            }],ExpressionUUID->"3489dd90-6e43-42f1-84bb-09a53a2bc76a"],
            TextCell[
             Row[{"Graphics[", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"}]]]\
},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"
            }],ExpressionUUID->"b7b17b1f-5650-40b2-8098-d51d6f2794fa"],
            TextCell[
             Row[{"Graphics[Line", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"
            }],ExpressionUUID->"b210fa85-8230-4858-a31d-67390f0aabbb"],
            TextCell[
             Row[{"Graphics[Line[", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"
            }],ExpressionUUID->"0c1edf67-a04f-4f28-bbd8-1dafe4dcdfa5"],
            TextCell[
             Row[{"Graphics[Line[Subsets", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "],{2}]]"
            }],ExpressionUUID->"a7ee43e1-0561-4dab-be4e-4e7d00e17624"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "],{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}]",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{2}]]"
            }],ExpressionUUID->"cf80d57a-7367-4abc-852a-840440826d1f"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
]", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{2}]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}\
",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]]"
            }],ExpressionUUID->"811aee8e-3714-4d10-9c28-53f5cf25006d"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
],{2}", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}\
]",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]"
            }],ExpressionUUID->"1c4356f4-d992-4293-825b-b9ed1650fee5"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
],{2}]", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             
             "Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}],{2}\
]]",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]]
            }],ExpressionUUID->"7cb60e18-2a34-4b01-8691-e45af9072d19"],
            TextCell[
             
             Row[{"Graphics[Line[Subsets[Table[{Cos[2Pii/8],Sin[2Pii/8]},{i,8}\
],{2}]]", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.708004916751731*^9, 3.70801662373588*^9, 
  3.708206571911024*^9},ExpressionUUID->"c2be3253-e670-4052-ba1b-\
83d294da1377"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"oneexample", "=", 
   RowBox[{"curatedgenexamples", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"StringDelete", "[", 
    RowBox[{"oneexample", ",", "WhitespaceCharacter"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"removed", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{"input", ",", 
       RowBox[{"{", "#", "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"StringLength", "[", "input", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"syntaxCorrector", "[", 
     RowBox[{"#", ",", "True", ",", "20"}], "]"}], "&"}], "/@", "removed"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7080052548045406`*^9, 3.7080052550366116`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"fe682491-1fa5-4ec5-81fc-c936cf769e73"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening Bracket Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "S",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ubsets{1,2,3,4},{3}]"
            }],ExpressionUUID->"3dbfa3a2-f282-4317-9427-e6cd1fff579b"],
            TextCell[
             Row[{"S", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ubsets{1,2,3,4},{3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Su",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "bsets{1,2,3,4},{3}]"
            }],ExpressionUUID->"958022b7-0eaa-4dae-b18e-660fd1620d57"],
            TextCell[
             Row[{"Su", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "bsets{1,2,3,4},{3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Sub",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "sets{1,2,3,4},{3}]"
            }],ExpressionUUID->"11a73d62-bb62-492e-98c9-6f7d105856b3"],
            TextCell[
             Row[{"Sub", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "sets{1,2,3,4},{3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subs",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ets{1,2,3,4},{3}]"
            }],ExpressionUUID->"ac0c6d17-f9c8-4048-a6d5-52e695d422af"],
            TextCell[
             Row[{"Subs", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ets{1,2,3,4},{3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subse",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ts{1,2,3,4},{3}]"
            }],ExpressionUUID->"3860f3bb-d4de-4225-8d74-dba10735dedc"],
            TextCell[
             Row[{"Subse", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ts{1,2,3,4},{3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subset",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "s{1,2,3,4},{3}]"
            }],ExpressionUUID->"8a9f8698-73fb-42e5-86e2-84dd016d1e23"],
            TextCell[
             Row[{"Subset", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "s{1,2,3,4},{3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "{1,2,3,4},{3}]"
            }],ExpressionUUID->"ce795212-1709-410e-8978-4db726ebe063"],
            TextCell[
             Row[{"Subsets", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "{1,2,3,4},{3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening Braces Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "1,2,3,4},{3}]"
            }],ExpressionUUID->"72055fc6-234a-42f1-895b-c864cc648305"],
            TextCell[
             Row[{"Subsets[", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "1,2,3,4},{3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or Number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",2,3,4},{3}]"
            }],ExpressionUUID->"2d07b833-e06c-49a7-83dc-cb102692c5d4"],
            TextCell[
             Row[{"Subsets[{", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",2,3,4},{3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or Number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",3,4},{3}]"
            }],ExpressionUUID->"15575f0c-9bbe-49f8-8a2a-60594465518a"],
            TextCell[
             Row[{"Subsets[{1,", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",3,4},{3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or Number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",4},{3}]"
            }],ExpressionUUID->"b53b53cb-f897-4326-bff3-f655433b9ead"],
            TextCell[
             Row[{"Subsets[{1,2,", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",4},{3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"All Correct!\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or Number Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "},{3}]"
            }],ExpressionUUID->"307a32d2-9493-4550-967b-51d27576e311"],
            TextCell[
             Row[{"Subsets[{1,2,3,", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "},{3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing Braces Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "3,4,{3}]"
            }],ExpressionUUID->"779d1217-ca96-4bb9-b4e1-d182dd0659dc"],
            TextCell[
             Row[{"Subsets[{1,2,", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "3,4,{3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",4,{3}]"
            }],ExpressionUUID->"141e0e7c-5726-45d4-8496-fc832fd15de2"],
            TextCell[
             Row[{"Subsets[{1,2,3", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",4,{3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{3}]"
            }],ExpressionUUID->"92de2582-f1f3-4dff-b412-bc369feeb5ac"],
            TextCell[
             Row[{"Subsets[{1,2,3,4", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4,{",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "3}]"
            }],ExpressionUUID->"923e1579-d364-4845-8000-b6c9c9e23f5b"],
            TextCell[
             Row[{"Subsets[{1,2,3,4,{", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4,{3",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "}]"
            }],ExpressionUUID->"ef723710-dc77-4f22-8225-41a7943f3ccd"],
            TextCell[
             Row[{"Subsets[{1,2,3,4,{3", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4,{3}",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]"
            }],ExpressionUUID->"5576beaa-94db-46f5-b5d8-2d513593c482"],
            TextCell[
             Row[{"Subsets[{1,2,3,4,{3}", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or Number Missed\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Opening Braces Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "{1,2,3,4},3}]"
            }],ExpressionUUID->"d87f20ea-0b7a-4c56-abf8-2e1776574b4a"],
            TextCell[
             Row[{"Subsets[", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "{1,2,3,4},3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "1,2,3,4},3}]"
            }],ExpressionUUID->"be2435e2-655b-4b29-8d49-12a633b81a8c"],
            TextCell[
             Row[{"Subsets[{", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "1,2,3,4},3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "2,3,4},3}]"
            }],ExpressionUUID->"27b48858-4bad-463f-b59d-4ad76648d12d"],
            TextCell[
             Row[{"Subsets[{1,", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,3,4},3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "3,4},3}]"
            }],ExpressionUUID->"e2025b6b-c211-4750-8dfe-f2fdc012a4d2"],
            TextCell[
             Row[{"Subsets[{1,2,", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "3,4},3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "4},3}]"
            }],ExpressionUUID->"17b84262-82a1-4aea-a70d-f7109c44481a"],
            TextCell[
             Row[{"Subsets[{1,2,3,", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "4},3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "},3}]"
            }],ExpressionUUID->"594f0691-ab02-46af-8fb1-3550a35f1efd"],
            TextCell[
             Row[{"Subsets[{1,2,3,4", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "},3}]"}]]]},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4},",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "3}]"
            }],ExpressionUUID->"78b55180-846b-44db-ba5a-1c289e8bfd9f"],
            TextCell[
             Row[{"Subsets[{1,2,3,4},", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "3}]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Letter or Number Missed\"\>"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing Braces Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4},{3",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]"
            }],ExpressionUUID->"10a8f4a4-5d05-4fba-b7dd-eea13ccdd574"],
            TextCell[
             Row[{"Subsets[{1,2,3,4},{3", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]},
     {
      TagBox[
       TagBox[GridBox[{
          {"\<\"Closing Bracket Missed\"\>"},
          {
           InterpretationBox[Cell[TextData[{
             "Subsets[{1,2,3,4},{3}",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]]
            }],ExpressionUUID->"a2811129-8a16-49e1-b669-31f7f8e58714"],
            TextCell[
             Row[{"Subsets[{1,2,3,4},{3}", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column],
       Function[BoxForm`e$, 
        TableForm[BoxForm`e$]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.70800525564198*^9, 
  3.7080166244433784`*^9},ExpressionUUID->"6f2242b2-2406-4983-a086-\
9f385a4f50c1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Panel Version", "Chapter",
 CellChangeTimes->{{3.708010668833866*^9, 
  3.7080106760489473`*^9}},ExpressionUUID->"87f10dbd-59ad-4741-8224-\
a18dedd1d3c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Panel", "[", "\[IndentingNewLine]", 
  RowBox[{"Style", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Column", "[", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"InputField", "[", 
        RowBox[{
         RowBox[{"Dynamic", "[", "inpstr", "]"}], ",", "String", ",", 
         RowBox[{"ContinuousAction", "\[Rule]", "True"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"InputField", "[", 
        RowBox[{
         RowBox[{"Dynamic", "[", "inpint", "]"}], ",", 
         RowBox[{"ContinuousAction", "\[Rule]", "True"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"Quiet", "[", 
         RowBox[{"syntaxCorrector", "[", 
          RowBox[{"inpstr", ",", "True", ",", "inpint"}], "]"}], "]"}], "]"}],
        ",", "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"mess", "=", 
            RowBox[{"messagePrinter", "[", "inpstr", "]"}]}], "}"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ListQ", "[", "mess", "]"}], ",", "mess", ",", 
            "\"\<\>\""}], "]"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
      "}"}], "\[IndentingNewLine]", "]"}], ",", 
    RowBox[{"Background", "\[Rule]", "White"}]}], "\[IndentingNewLine]", 
   "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.708094087274889*^9, 
  3.7080941789476705`*^9}},ExpressionUUID->"8d8427a1-9216-4508-9805-\
7b464bcf6053"],

Cell[BoxData[
 PanelBox[
  StyleBox[
   TagBox[GridBox[{
      {
       InputFieldBox[Dynamic[$CellContext`inpstr], String,
        ContinuousAction->True]},
      {
       InputFieldBox[Dynamic[$CellContext`inpint],
        ContinuousAction->True]},
      {
       DynamicBox[ToBoxes[
         Quiet[
          $CellContext`syntaxCorrector[$CellContext`inpstr, 
           True, $CellContext`inpint]], StandardForm],
        ImageSizeCache->{276., {4., 13.}}]},
      {
       DynamicBox[ToBoxes[
         With[{$CellContext`mess = \
$CellContext`messagePrinter[$CellContext`inpstr]}, 
          If[
           ListQ[$CellContext`mess], $CellContext`mess, ""]], StandardForm],
        ImageSizeCache->{0., {0., 9.}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"],
   StripOnInput->False,
   Background->GrayLevel[1]]]], "Output",
 CellChangeTimes->{{3.7080941494630013`*^9, 3.708094179385138*^9}, {
  3.708106795070195*^9, 
  3.7081068037535467`*^9}},ExpressionUUID->"d0d839d9-d8c3-4825-85f0-\
5303a7a17eea"]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neural Network", "Chapter",
 CellChangeTimes->{{3.7081171789644365`*^9, 
  3.7081171825849476`*^9}},ExpressionUUID->"006310cc-3f62-42ce-8733-\
b25e0bbaae73"],

Cell[CellGroupData[{

Cell["Entropy Loss Layer", "Subsubsection",
 CellChangeTimes->{{3.7081691914464736`*^9, 
  3.7081691965360584`*^9}},ExpressionUUID->"3a33b871-b552-4af6-bd40-\
011d87a85b5d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{"\"\<Integrate[x,{x,1,2}]\>\"", ",", 
   RowBox[{
    RowBox[{"x_", "?", "DigitQ"}], "\[RuleDelayed]", "\"\<_\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.708118367652416*^9, 3.708118490912632*^9}, {
  3.7081185417985835`*^9, 
  3.7081185862063*^9}},ExpressionUUID->"2b7b29e6-3eb5-44e5-bba0-935a5a024bbf"],

Cell[BoxData["\<\"Integrate[x,{x,_,_}]\"\>"], "Output",
 CellChangeTimes->{{3.708118408758073*^9, 3.7081184513280954`*^9}, {
   3.708118481572014*^9, 3.708118491337928*^9}, {3.7081185518477044`*^9, 
   3.708118586603594*^9}, 
   3.708169221634387*^9},ExpressionUUID->"1e46d28d-3fa9-4079-90a8-\
61f69e5ec2df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "@", 
  RowBox[{"CharacterRange", "[", 
   RowBox[{"30", ",", "125"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708124893644149*^9, 3.708124893929332*^9}, {
  3.708129609058282*^9, 3.7081296279005594`*^9}, {3.708129793908907*^9, 
  3.7081298918901606`*^9}, {3.7081299954503717`*^9, 3.7081300357978964`*^9}, {
  3.708130138316346*^9, 
  3.7081301431838045`*^9}},ExpressionUUID->"bae8d23f-d8c2-4548-8c3b-\
c1b5f18d4ed5"],

Cell[BoxData["\<\"\.1e\.1f \
!\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`\
abcdefghijklmnopqrstuvwxyz{|}\"\>"], "Output",
 CellChangeTimes->{{3.708129803928977*^9, 3.7081298453842945`*^9}, {
   3.7081298868766236`*^9, 3.708129892274439*^9}, {3.7081300023342376`*^9, 
   3.7081300360290565`*^9}, {3.708130138740646*^9, 3.7081301433989525`*^9}, 
   3.70816922198964*^9},ExpressionUUID->"ff93ec61-35da-4a57-97e7-\
52d4d1347247"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"validCharacters", "=", " ", 
   RowBox[{"StringJoin", "@", 
    RowBox[{"CharacterRange", "[", 
     RowBox[{"30", ",", "125"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"net00", "=", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<revIn\>\"", "\[Rule]", " ", 
       RowBox[{"SequenceReverseLayer", "[", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<encGRU<\>\"", "->", 
       RowBox[{"GatedRecurrentLayer", "[", "64", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<revOut\>\"", "\[Rule]", " ", 
       RowBox[{"SequenceReverseLayer", "[", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<encGRU>\>\"", "->", 
       RowBox[{"GatedRecurrentLayer", "[", "64", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<cat\>\"", "\[Rule]", " ", 
       RowBox[{"CatenateLayer", "[", "2", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<decGRU\>\"", "\[Rule]", " ", 
       RowBox[{"GatedRecurrentLayer", "[", "64", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<classifier\>\"", "\[Rule]", " ", 
       RowBox[{"NetMapOperator", "[", "\[IndentingNewLine]", 
        RowBox[{"NetChain", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LinearLayer", "[", 
            RowBox[{"StringLength", "[", "validCharacters", "]"}], "]"}], ",", 
           RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], "]"}], 
        "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<loss\>\"", "\[Rule]", " ", 
       RowBox[{"CrossEntropyLossLayer", "[", "\"\<Index\>\"", "]"}]}]}], 
     "\[IndentingNewLine]", "|>"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", " ", 
       RowBox[{"\"\<revIn\>\"", "\[Rule]", 
        RowBox[{"\"\<encGRU<\>\"", "\[Rule]", "\"\<revOut\>\""}]}]}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", " ", 
       "\"\<encGRU>\>\""}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<revOut\>\"", ",", " ", "\"\<encGRU>\>\""}], "}"}], 
       "\[Rule]", " ", 
       RowBox[{"\"\<cat\>\"", "\[Rule]", " ", 
        RowBox[{"\"\<decGRU\>\"", "\[Rule]", " ", 
         RowBox[{"\"\<classifier\>\"", " ", "\[Rule]", " ", 
          RowBox[{"NetPort", "[", 
           RowBox[{"\"\<loss\>\"", ",", "\"\<Input\>\""}], "]"}]}]}]}]}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Target\>\"", "]"}], "\[Rule]", " ", 
       RowBox[{"NetPort", "[", 
        RowBox[{"\"\<loss\>\"", ",", "\"\<Target\>\""}], "]"}]}]}], "}"}], 
    ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Characters\>\"", ",", "validCharacters", ",", 
        "\"\<UnitVector\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Target\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Characters\>\"", ",", "validCharacters"}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Characters\>\"", ",", "validCharacters"}], "}"}], "]"}]}],
     "*)"}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7081214128709974`*^9, 3.7081214698605766`*^9}, {
   3.708121596434064*^9, 3.7081216464223957`*^9}, {3.7081218996313815`*^9, 
   3.708121960701556*^9}, 3.708124879303993*^9, {3.708129592714689*^9, 
   3.708129594501954*^9}, 
   3.708130150475954*^9},ExpressionUUID->"6f329bfb-7ce7-4506-958b-\
b600a2391a17"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetGraph`selection = None}, 
        DynamicBox[GridBox[
          Map[List, {
            ToBoxes[
             
             NeuralNetworks`Private`NetGraph`netLayerPlot[{{1, 2}, {2, 3}, {3,
               4}, {1, 5}, {4, 6}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {10, 9}, {
              9, 11}}, 
              Dynamic[NeuralNetworks`Private`NetGraph`selection], False, {
              "Input", "revIn", "encGRU<", "revOut", "encGRU>", "cat", 
               "decGRU", "classifier", "loss", "Target", "Loss"}, {Null, 
               RGBColor[0.73, 1., 0.33], 
               RGBColor[0.6, 0.2, 0.6], 
               RGBColor[1., 0.7, 0.31], 
               RGBColor[0.24, 0.277, 0.583], 
               RGBColor[0, 1, 1]}, {1, 2, 3, 2, 3, 4, 3, 5, 6, 1, 1}, {
              Null, SequenceReverseLayer, GatedRecurrentLayer, CatenateLayer, 
               HoldForm[NetMapOperator][
                HoldForm[
                 NetChain[
                  NeuralNetworks`Private`UniqueSkeleton[2, 42459]]]], 
               HoldForm[
                CrossEntropyLossLayer["Index"]]}, {
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 64}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 64}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 64}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 128}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 64}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884]}, 
                NeuralNetworks`IndexIntegerT[96]], 
               NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]}, None]], 
            If[
             IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
             ItemBox[
              NeuralNetworks`Private`NetGraph`vpathInfo[
               Part[{
                 NeuralNetworks`NetPath["Inputs", "Input"], 
                 NeuralNetworks`NetPath["Nodes", "revIn"], 
                 NeuralNetworks`NetPath["Nodes", "encGRU<"], 
                 NeuralNetworks`NetPath["Nodes", "revOut"], 
                 NeuralNetworks`NetPath["Nodes", "encGRU>"], 
                 NeuralNetworks`NetPath["Nodes", "cat"], 
                 NeuralNetworks`NetPath["Nodes", "decGRU"], 
                 NeuralNetworks`NetPath["Nodes", "classifier"], 
                 NeuralNetworks`NetPath["Nodes", "loss"], 
                 NeuralNetworks`NetPath["Inputs", "Target"], 
                 NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                NeuralNetworks`Private`NetGraph`selection], 
               Association["Input" -> NetEncoder["Characters", 
                  Association["Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 0, 0, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                     13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
                    27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 
                    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 
                    55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
                    69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
                    83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
                    128, 128}], 
                    RawArray["UnsignedInteger8",{30, 31, 32, 33, 34, 35, 36, 
                    37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
                    51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
                    65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 
                    79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 
                    93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 
                    106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
                    117, 118, 119, 120, 121, 122, 123, 124, 125}], 96, 
                    "\.1e\.1f \
!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`\
abcdefghijklmnopqrstuvwxyz{|}"]], "OutputForm" -> "UnitVector", "IgnoreCase" -> 
                   False, "Count" -> 96], 
                  NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                   NeuralNetworks`RealT]], "Target" -> 
                NetEncoder["Characters", 
                  Association["Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 0, 0, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                     13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
                    27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 
                    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 
                    55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
                    69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
                    83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
                    128, 128}], 
                    RawArray["UnsignedInteger8",{30, 31, 32, 33, 34, 35, 36, 
                    37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
                    51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
                    65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 
                    79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 
                    93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 
                    106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
                    117, 118, 119, 120, 121, 122, 123, 124, 125}], 96, 
                    "\.1e\.1f \
!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`\
abcdefghijklmnopqrstuvwxyz{|}"]], "OutputForm" -> "Index", "IgnoreCase" -> 
                   False, "Count" -> 96], 
                  NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884]}, 
                   NeuralNetworks`IndexIntegerT[96]]]], 
               Association[
               "Loss" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
               Association[
               "revIn" -> 
                Association[
                 "Type" -> "SequenceReverse", "Arrays" -> Association[], 
                  "Parameters" -> Association[], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                    NeuralNetworks`RealT]]], "encGRU<" -> 
                Association[
                 "Type" -> "GatedRecurrent", "Arrays" -> 
                  Association[
                   "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 96}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 96}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 96}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputSize" -> 64, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    96, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1900306884]], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]], "States" -> 
                  Association[
                   "State" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                "revOut" -> 
                Association[
                 "Type" -> "SequenceReverse", "Arrays" -> Association[], 
                  "Parameters" -> Association[], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]]], "encGRU>" -> 
                Association[
                 "Type" -> "GatedRecurrent", "Arrays" -> 
                  Association[
                   "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 96}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 96}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 96}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputSize" -> 64, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    96, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1900306884]], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]], "States" -> 
                  Association[
                   "State" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                "cat" -> Association[
                 "Type" -> "Catenate", "Arrays" -> Association[], 
                  "Parameters" -> Association["Level" -> 2, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 2, 
                    "$OutputShape" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 128}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 128}, 
                    NeuralNetworks`RealT]]], "decGRU" -> 
                Association[
                 "Type" -> "GatedRecurrent", "Arrays" -> 
                  Association[
                   "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 128}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 128}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 128}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputSize" -> 64, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    128, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1900306884]], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]], "States" -> 
                  Association[
                   "State" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                "classifier" -> 
                Association[
                 "Type" -> "NetMap", "Arrays" -> Association[], "Parameters" -> 
                  Association[
                   "Net" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {96}, "$OutputSize" -> 96, 
                    "$InputSize" -> 64, "$InputDimensions" -> {64}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[1900306884],
                     "$InputShape" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                  "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                    NeuralNetworks`RealT]]], "loss" -> 
                Association[
                 "Type" -> "CrossEntropyLoss", "Arrays" -> Association[], 
                  "Parameters" -> 
                  Association["TargetForm" -> "Index", "$InputDimensions" -> {
                    NeuralNetworks`LengthVar[1900306884]}, "$Classes" -> 96], 
                  "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                    NeuralNetworks`RealT], "Target" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884]}, 
                    NeuralNetworks`IndexIntegerT[96]]], "Outputs" -> 
                  Association[
                   "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]]], Alignment -> Center], 
             Nothing]}], GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{822., {170., 179.}},
         TrackedSymbols:>{NeuralNetworks`Private`NetGraph`selection}],
        Initialization:>{NetGraph}],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.7081301618780017`*^9, 
  3.708169222086708*^9},ExpressionUUID->"b4f10651-f6e6-4359-b0da-\
b5c8498f59b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iNet", "=", 
  RowBox[{"NetInitialize", "[", "net00", "]"}]}]], "Input",
 CellChangeTimes->{{3.7081301746620398`*^9, 
  3.7081301945100703`*^9}},ExpressionUUID->"826bc1b8-5995-4a51-a4e9-\
cab5d11f35ee"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetGraph`selection = None}, 
        DynamicBox[GridBox[
          Map[List, {
            ToBoxes[
             
             NeuralNetworks`Private`NetGraph`netLayerPlot[{{1, 2}, {2, 3}, {3,
               4}, {1, 5}, {4, 6}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {10, 9}, {
              9, 11}}, 
              Dynamic[NeuralNetworks`Private`NetGraph`selection], False, {
              "Input", "revIn", "encGRU<", "revOut", "encGRU>", "cat", 
               "decGRU", "classifier", "loss", "Target", "Loss"}, {Null, 
               RGBColor[0.73, 1., 0.33], 
               RGBColor[0.6, 0.2, 0.6], 
               RGBColor[1., 0.7, 0.31], 
               RGBColor[0.24, 0.277, 0.583], 
               RGBColor[0, 1, 1]}, {1, 2, 3, 2, 3, 4, 3, 5, 6, 1, 1}, {
              Null, SequenceReverseLayer, GatedRecurrentLayer, CatenateLayer, 
               HoldForm[NetMapOperator][
                HoldForm[
                 NetChain[
                  NeuralNetworks`Private`UniqueSkeleton[2, 3783]]]], 
               HoldForm[
                CrossEntropyLossLayer["Index"]]}, {
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 64}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 64}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 64}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 128}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 64}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1900306884]}, 
                NeuralNetworks`IndexIntegerT[96]], 
               NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]}, None]], 
            If[
             IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
             ItemBox[
              NeuralNetworks`Private`NetGraph`vpathInfo[
               Part[{
                 NeuralNetworks`NetPath["Inputs", "Input"], 
                 NeuralNetworks`NetPath["Nodes", "revIn"], 
                 NeuralNetworks`NetPath["Nodes", "encGRU<"], 
                 NeuralNetworks`NetPath["Nodes", "revOut"], 
                 NeuralNetworks`NetPath["Nodes", "encGRU>"], 
                 NeuralNetworks`NetPath["Nodes", "cat"], 
                 NeuralNetworks`NetPath["Nodes", "decGRU"], 
                 NeuralNetworks`NetPath["Nodes", "classifier"], 
                 NeuralNetworks`NetPath["Nodes", "loss"], 
                 NeuralNetworks`NetPath["Inputs", "Target"], 
                 NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                NeuralNetworks`Private`NetGraph`selection], 
               Association["Input" -> NetEncoder["Characters", 
                  Association["Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 0, 0, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                     13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
                    27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 
                    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 
                    55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
                    69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
                    83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
                    128, 128}], 
                    RawArray["UnsignedInteger8",{30, 31, 32, 33, 34, 35, 36, 
                    37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
                    51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
                    65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 
                    79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 
                    93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 
                    106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
                    117, 118, 119, 120, 121, 122, 123, 124, 125}], 96, 
                    "\.1e\.1f \
!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`\
abcdefghijklmnopqrstuvwxyz{|}"]], "OutputForm" -> "UnitVector", "IgnoreCase" -> 
                   False, "Count" -> 96], 
                  NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                   NeuralNetworks`RealT]], "Target" -> 
                NetEncoder["Characters", 
                  Association["Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 0, 0, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                     13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
                    27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 
                    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 
                    55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
                    69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
                    83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
                    128, 128}], 
                    RawArray["UnsignedInteger8",{30, 31, 32, 33, 34, 35, 36, 
                    37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
                    51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
                    65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 
                    79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 
                    93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 
                    106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
                    117, 118, 119, 120, 121, 122, 123, 124, 125}], 96, 
                    "\.1e\.1f \
!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`\
abcdefghijklmnopqrstuvwxyz{|}"]], "OutputForm" -> "Index", "IgnoreCase" -> 
                   False, "Count" -> 96], 
                  NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884]}, 
                   NeuralNetworks`IndexIntegerT[96]]]], 
               Association[
               "Loss" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]], 
               Association[
               "revIn" -> 
                Association[
                 "Type" -> "SequenceReverse", "Arrays" -> Association[], 
                  "Parameters" -> Association[], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                    NeuralNetworks`RealT]]], "encGRU<" -> 
                Association[
                 "Type" -> "GatedRecurrent", "Arrays" -> 
                  Association[
                   "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 96}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 96}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 96}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputSize" -> 64, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    96, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1900306884]], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]], "States" -> 
                  Association[
                   "State" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                "revOut" -> 
                Association[
                 "Type" -> "SequenceReverse", "Arrays" -> Association[], 
                  "Parameters" -> Association[], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]]], "encGRU>" -> 
                Association[
                 "Type" -> "GatedRecurrent", "Arrays" -> 
                  Association[
                   "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 96}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 96}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 96}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputSize" -> 64, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    96, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1900306884]], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]], "States" -> 
                  Association[
                   "State" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                "cat" -> Association[
                 "Type" -> "Catenate", "Arrays" -> Association[], 
                  "Parameters" -> Association["Level" -> 2, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 2, 
                    "$OutputShape" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 128}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 128}, 
                    NeuralNetworks`RealT]]], "decGRU" -> 
                Association[
                 "Type" -> "GatedRecurrent", "Arrays" -> 
                  Association[
                   "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 128}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 128}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{64, 128}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{64, 64}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputSize" -> 64, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    128, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1900306884]], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 128}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]], "States" -> 
                  Association[
                   "State" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]]], 
                "classifier" -> 
                Association[
                 "Type" -> "NetMap", "Arrays" -> Association[], "Parameters" -> 
                  Association[
                   "Net" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 64}, NeuralNetworks`RealT], 
                    "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {96}, "$OutputSize" -> 96, 
                    "$InputSize" -> 64, "$InputDimensions" -> {64}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[1900306884],
                     "$InputShape" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`RealT], 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                  "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 64}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                    NeuralNetworks`RealT]]], "loss" -> 
                Association[
                 "Type" -> "CrossEntropyLoss", "Arrays" -> Association[], 
                  "Parameters" -> 
                  Association["TargetForm" -> "Index", "$InputDimensions" -> {
                    NeuralNetworks`LengthVar[1900306884]}, "$Classes" -> 96], 
                  "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884], 96}, 
                    NeuralNetworks`RealT], "Target" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1900306884]}, 
                    NeuralNetworks`IndexIntegerT[96]]], "Outputs" -> 
                  Association[
                   "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]]]]], Alignment -> Center], 
             Nothing]}], GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{822., {170., 179.}},
         TrackedSymbols:>{NeuralNetworks`Private`NetGraph`selection}],
        Initialization:>{NetGraph}],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{3.708130194976411*^9, 
  3.7081692222388277`*^9},ExpressionUUID->"d5081d50-ee6b-4bce-bcf0-\
49276e15b579"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iNet", "[", 
  RowBox[{"<|", 
   RowBox[{
    RowBox[{
    "\"\<Input\>\"", "\[Rule]", 
     "\"\<!\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^\
_`abcdefghijklmnopqrstuvwxyz{|}\>\""}], ",", 
    RowBox[{
    "\"\<Target\>\"", "->", 
     "\"\<!\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^\
_`abcdefghijklmnopqrstuvwxyz{|}\>\""}]}], "|>"}], "]"}]], "Input",
 CellChangeTimes->{{3.708130197633276*^9, 3.708130274644904*^9}, {
  3.7081303147329087`*^9, 3.7081303458744173`*^9}, {3.7081303911694536`*^9, 
  3.7081304710941715`*^9}, {3.7081306788890715`*^9, 3.7081306790701833`*^9}, {
  3.708130819379364*^9, 
  3.7081308286138916`*^9}},ExpressionUUID->"d6ecf98e-e13c-4ab5-9000-\
7851beed0078"],

Cell[BoxData["4.5725998878479`"], "Output",
 CellChangeTimes->{
  3.7081302214251113`*^9, {3.708130269222415*^9, 3.708130274969116*^9}, {
   3.708130336207075*^9, 3.7081303463327413`*^9}, {3.708130391920968*^9, 
   3.708130471569508*^9}, 3.708130679602559*^9, 3.708130829737686*^9, 
   3.7081692227151513`*^9},ExpressionUUID->"a465358b-0baf-4445-ae74-\
3ef2b9c84a42"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Output", "Subsubsection",
 CellChangeTimes->{{3.708130886425767*^9, 3.7081309149169097`*^9}, {
  3.708169205250219*^9, 
  3.7081692099821644`*^9}},ExpressionUUID->"01c96f52-fb72-452a-9263-\
1bb5cb1eb997"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"validCharacters", "=", " ", 
   RowBox[{"StringJoin", "@", 
    RowBox[{"CharacterRange", "[", 
     RowBox[{"30", ",", "125"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"net00", "=", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<revIn\>\"", "\[Rule]", " ", 
       RowBox[{"SequenceReverseLayer", "[", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<encGRU<\>\"", "->", 
       RowBox[{"GatedRecurrentLayer", "[", "96", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<revOut\>\"", "\[Rule]", " ", 
       RowBox[{"SequenceReverseLayer", "[", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<encGRU>\>\"", "->", 
       RowBox[{"GatedRecurrentLayer", "[", "96", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<cat\>\"", "\[Rule]", " ", 
       RowBox[{"CatenateLayer", "[", "2", "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"\"\<decGRU\>\"", "\[Rule]", " ", 
       RowBox[{"GatedRecurrentLayer", "[", "96", "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<classifier\>\"", "\[Rule]", " ", 
       RowBox[{"NetMapOperator", "[", "\[IndentingNewLine]", 
        RowBox[{"NetChain", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"LinearLayer", "[", 
            RowBox[{"StringLength", "[", "validCharacters", "]"}], "]"}], ",", 
           RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], "]"}], 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "|>"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", " ", 
       RowBox[{"\"\<revIn\>\"", "\[Rule]", 
        RowBox[{"\"\<encGRU<\>\"", "\[Rule]", "\"\<revOut\>\""}]}]}], ",", 
      RowBox[{
       RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", " ", 
       "\"\<encGRU>\>\""}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<revOut\>\"", ",", " ", "\"\<encGRU>\>\""}], "}"}], 
       "\[Rule]", " ", 
       RowBox[{"\"\<cat\>\"", "\[Rule]", " ", 
        RowBox[{
        "\"\<decGRU\>\"", "\[Rule]", " ", "\"\<classifier\>\""}]}]}]}], " ", 
     "}"}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Characters\>\"", ",", "validCharacters", ",", 
        "\"\<UnitVector\>\""}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Characters\>\"", ",", "validCharacters"}], "}"}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.708130936151924*^9, 3.7081310189694653`*^9}, {
   3.708131236001878*^9, 3.708131244213685*^9}, 3.7081313672329845`*^9, {
   3.7081317380784826`*^9, 3.7081317457591114`*^9}, 3.708131879252061*^9, {
   3.7081319172520533`*^9, 3.7081319254498467`*^9}, {3.7081321653097124`*^9, 
   3.70813218165849*^9}},ExpressionUUID->"1c864854-8919-4d64-9f47-\
614d9836faac"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetGraph`selection = None}, 
        DynamicBox[GridBox[
          Map[List, {
            ToBoxes[
             
             NeuralNetworks`Private`NetGraph`netLayerPlot[{{1, 2}, {2, 3}, {3,
               4}, {1, 5}, {4, 6}, {5, 6}, {6, 7}, {7, 8}, {8, 9}}, 
              Dynamic[NeuralNetworks`Private`NetGraph`selection], False, {
              "Input", "revIn", "encGRU<", "revOut", "encGRU>", "cat", 
               "decGRU", "classifier", "Output"}, {Null, 
               RGBColor[0.73, 1., 0.33], 
               RGBColor[0.6, 0.2, 0.6], 
               RGBColor[1., 0.7, 0.31], 
               RGBColor[0.24, 0.277, 0.583]}, {1, 2, 3, 2, 3, 4, 3, 5, 1}, {
              Null, SequenceReverseLayer, GatedRecurrentLayer, CatenateLayer, 
               HoldForm[NetMapOperator][
                HoldForm[
                 NetChain[
                  NeuralNetworks`Private`UniqueSkeleton[2, 32539]]]]}, {
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1022025782], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1022025782], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1022025782], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1022025782], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1022025782], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1022025782], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1022025782], 192}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1022025782], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1022025782], 96}, 
                NeuralNetworks`RealT]}, None]], 
            If[
             IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
             ItemBox[
              NeuralNetworks`Private`NetGraph`vpathInfo[
               Part[{
                 NeuralNetworks`NetPath["Inputs", "Input"], 
                 NeuralNetworks`NetPath["Nodes", "revIn"], 
                 NeuralNetworks`NetPath["Nodes", "encGRU<"], 
                 NeuralNetworks`NetPath["Nodes", "revOut"], 
                 NeuralNetworks`NetPath["Nodes", "encGRU>"], 
                 NeuralNetworks`NetPath["Nodes", "cat"], 
                 NeuralNetworks`NetPath["Nodes", "decGRU"], 
                 NeuralNetworks`NetPath["Nodes", "classifier"], 
                 NeuralNetworks`NetPath["Outputs", "Output"]}, 
                NeuralNetworks`Private`NetGraph`selection], 
               Association["Input" -> NetEncoder["Characters", 
                  Association["Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 0, 0, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                     13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
                    27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 
                    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 
                    55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
                    69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
                    83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
                    128, 128}], 
                    RawArray["UnsignedInteger8",{30, 31, 32, 33, 34, 35, 36, 
                    37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
                    51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
                    65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 
                    79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 
                    93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 
                    106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
                    117, 118, 119, 120, 121, 122, 123, 124, 125}], 96, 
                    "\.1e\.1f \
!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`\
abcdefghijklmnopqrstuvwxyz{|}"]], "OutputForm" -> "UnitVector", "IgnoreCase" -> 
                   False, "Count" -> 96], 
                  NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                   NeuralNetworks`RealT]]], 
               Association["Output" -> NetDecoder["Characters", 
                  Association["Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 0, 0, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                     13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
                    27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 
                    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 
                    55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
                    69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
                    83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
                    128, 128}], 
                    RawArray["UnsignedInteger8",{30, 31, 32, 33, 34, 35, 36, 
                    37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
                    51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
                    65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 
                    79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 
                    93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 
                    106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
                    117, 118, 119, 120, 121, 122, 123, 124, 125}], 96, 
                    "\.1e\.1f \
!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`\
abcdefghijklmnopqrstuvwxyz{|}"]], "IgnoreCase" -> False, "Count" -> 96], 
                  NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                   NeuralNetworks`RealT]]], 
               Association[
               "revIn" -> 
                Association[
                 "Type" -> "SequenceReverse", "Arrays" -> Association[], 
                  "Parameters" -> Association[], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT]]], "encGRU<" -> 
                Association[
                 "Type" -> "GatedRecurrent", "Arrays" -> 
                  Association[
                   "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputSize" -> 96, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    96, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1022025782]], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT]], "States" -> 
                  Association[
                   "State" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                "revOut" -> 
                Association[
                 "Type" -> "SequenceReverse", "Arrays" -> Association[], 
                  "Parameters" -> Association[], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT]]], "encGRU>" -> 
                Association[
                 "Type" -> "GatedRecurrent", "Arrays" -> 
                  Association[
                   "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputSize" -> 96, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    96, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1022025782]], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT]], "States" -> 
                  Association[
                   "State" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                "cat" -> Association[
                 "Type" -> "Catenate", "Arrays" -> Association[], 
                  "Parameters" -> Association["Level" -> 2, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 2, 
                    "$OutputShape" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 192}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 192}, 
                    NeuralNetworks`RealT]]], "decGRU" -> 
                Association[
                 "Type" -> "GatedRecurrent", "Arrays" -> 
                  Association[
                   "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 192}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 192}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 192}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputSize" -> 96, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    192, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1022025782]], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 192}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT]], "States" -> 
                  Association[
                   "State" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                "classifier" -> 
                Association[
                 "Type" -> "NetMap", "Arrays" -> Association[], "Parameters" -> 
                  Association[
                   "Net" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {96}, "$OutputSize" -> 96, 
                    "$InputSize" -> 96, "$InputDimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[1022025782],
                     "$InputShape" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                  "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1022025782], 96}, 
                    NeuralNetworks`RealT]]]]], Alignment -> Center], 
             Nothing]}], GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{735., {110., 119.}},
         TrackedSymbols:>{NeuralNetworks`Private`NetGraph`selection}],
        Initialization:>{NetGraph}],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.708131367877423*^9, {3.708131738756945*^9, 3.7081317462284436`*^9}, 
   3.7081318799495554`*^9, 3.70813192604025*^9, {3.7081321750836353`*^9, 
   3.708132182414008*^9}, 
   3.708169224021087*^9},ExpressionUUID->"3c991245-b9e4-40f9-b378-\
e80e4774bc5c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iNet", "=", 
  RowBox[{"NetInitialize", "[", "net00", "]"}]}]], "Input",
 CellChangeTimes->{{3.7081316759788985`*^9, 3.7081316818550997`*^9}, {
  3.708131768722647*^9, 3.7081317700605965`*^9}, {3.708131949547184*^9, 
  3.7081319550000334`*^9}},ExpressionUUID->"544da9d8-f050-448b-a597-\
d152fe419c71"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetGraph`selection = 9}, 
        DynamicBox[GridBox[
          Map[List, {
            ToBoxes[
             
             NeuralNetworks`Private`NetGraph`netLayerPlot[{{1, 2}, {2, 3}, {3,
               4}, {1, 5}, {4, 6}, {5, 6}, {6, 7}, {7, 8}, {8, 9}}, 
              Dynamic[NeuralNetworks`Private`NetGraph`selection], False, {
              "Input", "revIn", "encGRU<", "revOut", "encGRU>", "cat", 
               "decGRU", "classifier", "Output"}, {Null, 
               RGBColor[0.73, 1., 0.33], 
               RGBColor[0.6, 0.2, 0.6], 
               RGBColor[1., 0.7, 0.31], 
               RGBColor[0.24, 0.277, 0.583]}, {1, 2, 3, 2, 3, 4, 3, 5, 1}, {
              Null, SequenceReverseLayer, GatedRecurrentLayer, CatenateLayer, 
               HoldForm[NetMapOperator][
                HoldForm[
                 NetChain[
                  NeuralNetworks`Private`UniqueSkeleton[2, 4481]]]]}, {
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1249217783], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1249217783], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1249217783], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1249217783], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1249217783], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1249217783], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1249217783], 192}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1249217783], 96}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1249217783], 96}, 
                NeuralNetworks`RealT]}, None]], 
            If[
             IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
             ItemBox[
              NeuralNetworks`Private`NetGraph`vpathInfo[
               Part[{
                 NeuralNetworks`NetPath["Inputs", "Input"], 
                 NeuralNetworks`NetPath["Nodes", "revIn"], 
                 NeuralNetworks`NetPath["Nodes", "encGRU<"], 
                 NeuralNetworks`NetPath["Nodes", "revOut"], 
                 NeuralNetworks`NetPath["Nodes", "encGRU>"], 
                 NeuralNetworks`NetPath["Nodes", "cat"], 
                 NeuralNetworks`NetPath["Nodes", "decGRU"], 
                 NeuralNetworks`NetPath["Nodes", "classifier"], 
                 NeuralNetworks`NetPath["Outputs", "Output"]}, 
                NeuralNetworks`Private`NetGraph`selection], 
               Association["Input" -> NetEncoder["Characters", 
                  Association["Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 0, 0, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                     13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
                    27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 
                    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 
                    55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
                    69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
                    83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
                    128, 128}], 
                    RawArray["UnsignedInteger8",{30, 31, 32, 33, 34, 35, 36, 
                    37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
                    51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
                    65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 
                    79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 
                    93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 
                    106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
                    117, 118, 119, 120, 121, 122, 123, 124, 125}], 96, 
                    "\.1e\.1f \
!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`\
abcdefghijklmnopqrstuvwxyz{|}"]], "OutputForm" -> "UnitVector", "IgnoreCase" -> 
                   False, "Count" -> 96], 
                  NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                   NeuralNetworks`RealT]]], 
               Association["Output" -> NetDecoder["Characters", 
                  Association["Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 0, 0, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
                     13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
                    27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 
                    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 
                    55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
                    69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 
                    83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 
                    128, 128}], 
                    RawArray["UnsignedInteger8",{30, 31, 32, 33, 34, 35, 36, 
                    37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
                    51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 
                    65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 
                    79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 
                    93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 
                    106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 
                    117, 118, 119, 120, 121, 122, 123, 124, 125}], 96, 
                    "\.1e\.1f \
!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`\
abcdefghijklmnopqrstuvwxyz{|}"]], "IgnoreCase" -> False, "Count" -> 96], 
                  NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                   NeuralNetworks`RealT]]], 
               Association[
               "revIn" -> 
                Association[
                 "Type" -> "SequenceReverse", "Arrays" -> Association[], 
                  "Parameters" -> Association[], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT]]], "encGRU<" -> 
                Association[
                 "Type" -> "GatedRecurrent", "Arrays" -> 
                  Association[
                   "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputSize" -> 96, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    96, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1249217783]], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT]], "States" -> 
                  Association[
                   "State" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                "revOut" -> 
                Association[
                 "Type" -> "SequenceReverse", "Arrays" -> Association[], 
                  "Parameters" -> Association[], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT]]], "encGRU>" -> 
                Association[
                 "Type" -> "GatedRecurrent", "Arrays" -> 
                  Association[
                   "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputSize" -> 96, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    96, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1249217783]], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT]], "States" -> 
                  Association[
                   "State" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                "cat" -> Association[
                 "Type" -> "Catenate", "Arrays" -> Association[], 
                  "Parameters" -> Association["Level" -> 2, "$InputShapes" -> {
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT]}, "$InputCount" -> 2, 
                    "$OutputShape" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 192}, 
                    NeuralNetworks`RealT]], "Inputs" -> Association["Input" -> {
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT], 
                    NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT]}], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 192}, 
                    NeuralNetworks`RealT]]], "decGRU" -> 
                Association[
                 "Type" -> "GatedRecurrent", "Arrays" -> 
                  Association[
                   "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 192}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 192}, NeuralNetworks`RealT], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{96, 192}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                  "Parameters" -> 
                  Association[
                   "OutputSize" -> 96, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    192, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1249217783]], "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 192}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT]], "States" -> 
                  Association[
                   "State" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                "classifier" -> 
                Association[
                 "Type" -> "NetMap", "Arrays" -> Association[], "Parameters" -> 
                  Association[
                   "Net" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{96, 96}, NeuralNetworks`RealT], 
                    "Biases" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {96}, "$OutputSize" -> 96, 
                    "$InputSize" -> 96, "$InputDimensions" -> {96}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]]], 
                    "$SequenceLength" -> NeuralNetworks`LengthVar[1249217783],
                     "$InputShape" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT], 
                    "$OutputShape" -> 
                    NeuralNetworks`TensorT[{96}, NeuralNetworks`RealT]], 
                  "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1249217783], 96}, 
                    NeuralNetworks`RealT]]]]], Alignment -> Center], 
             Nothing]}], GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{735., {212.5, 221.5}},
         TrackedSymbols:>{NeuralNetworks`Private`NetGraph`selection}],
        Initialization:>{NetGraph}],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{
  3.7081316823734226`*^9, {3.7081317540769897`*^9, 3.7081317702367296`*^9}, 
   3.708131885560521*^9, {3.7081319314630833`*^9, 
   3.708131955796606*^9}},ExpressionUUID->"0841b3fa-32cb-4ee8-b4e2-\
493ab8165a75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"iNet", "[", 
  RowBox[{"<|", 
   RowBox[{"\"\<Input\>\"", "\[Rule]", "\"\<Integrate[x,{x,1,2}]\>\""}], 
   "|>"}], "]"}]], "Input",
 CellChangeTimes->{{3.7081319578040066`*^9, 3.708132018098255*^9}, {
  3.7081322046797466`*^9, 3.7081322167793055`*^9}, {3.708132259621583*^9, 
  3.708132279032322*^9}},ExpressionUUID->"321ae9d7-381e-4f80-94a7-\
0378ab07de0a"],

Cell[BoxData["\<\"_____OOOOOOO))))2)D),,\"\>"], "Output",
 CellChangeTimes->{{3.7081319726585083`*^9, 3.708131988445305*^9}, 
   3.7081320186146173`*^9, {3.7081321866159763`*^9, 3.708132217827039*^9}, 
   3.708132279716787*^9, 
   3.708132552503726*^9},ExpressionUUID->"771b402c-5f21-4e4e-a834-\
098c57841155"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trained", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"iNet", ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Integrate[x,{x,1,2 ]\>\"", "\[Rule]", 
      "\"\<Integrate[x,{x,1,2 ]\>\""}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708132064588126*^9, 3.7081320840308685`*^9}, {
   3.7081321170682125`*^9, 3.708132142033874*^9}, {3.708132308790339*^9, 
   3.7081323421789465`*^9}, {3.70813239784653*^9, 3.708132419046688*^9}, 
   3.7081326079957128`*^9, 3.7081326533921*^9, {3.708132739973995*^9, 
   3.7081327491474667`*^9}},ExpressionUUID->"d41d7fde-0414-47a1-b4dc-\
8a5817066225"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.708132134117277*^9, 3.7081321427203465`*^9}, {
   3.7081323429274693`*^9, 3.708132370013792*^9}, {3.7081324002172055`*^9, 
   3.7081324194769926`*^9}, 3.708132608882345*^9, {3.708132732580906*^9, 
   3.708132749641816*^9}, 
   3.708132824307822*^9},ExpressionUUID->"78fceb6b-5a41-4726-938f-\
23ea089409ff"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Graph for Presentation", "Chapter",
 CellChangeTimes->{{3.708177679147855*^9, 
  3.7081776853698797`*^9}},ExpressionUUID->"c25a624a-227a-4995-897b-\
e37a314009fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<Fold[f,x,a,b,c,d}]\>\"", ",", 
     InterpretationBox[Cell[TextData[{
       "Fold[",
       StyleBox["{",
        StripOnInput->False,
        LineColor->RGBColor[1, 0, 0],
        FrontFaceColor->RGBColor[1, 0, 0],
        BackFaceColor->RGBColor[1, 0, 0],
        GraphicsColor->RGBColor[1, 0, 0],
        FontSize->20,
        FontWeight->Bold,
        FontColor->RGBColor[1, 0, 0]],
       "f,x,a,b,c,d}]"
      }],ExpressionUUID->"52c96e16-4174-41f1-bcfa-4b4022041823"],
      TextCell[
       Row[{"Fold[", 
         Style["{", 
          RGBColor[1, 0, 0], FontSize -> 20, Bold], "f,x,a,b,c,d}]"}]]], ",", 
     InterpretationBox[Cell[TextData[{
       "Fold[f,",
       StyleBox["{",
        StripOnInput->False,
        LineColor->RGBColor[1, 0, 0],
        FrontFaceColor->RGBColor[1, 0, 0],
        BackFaceColor->RGBColor[1, 0, 0],
        GraphicsColor->RGBColor[1, 0, 0],
        FontSize->20,
        FontWeight->Bold,
        FontColor->RGBColor[1, 0, 0]],
       "x,a,b,c,d}]"
      }],ExpressionUUID->"f16f5415-2572-4659-8713-8b050cbe5af3"],
      TextCell[
       Row[{"Fold[f,", 
         Style["{", 
          RGBColor[1, 0, 0], FontSize -> 20, Bold], "x,a,b,c,d}]"}]]], ",", 
     InterpretationBox[Cell[TextData[{
       "Fold[f,x,",
       StyleBox["{",
        StripOnInput->False,
        LineColor->RGBColor[1, 0, 0],
        FrontFaceColor->RGBColor[1, 0, 0],
        BackFaceColor->RGBColor[1, 0, 0],
        GraphicsColor->RGBColor[1, 0, 0],
        FontSize->20,
        FontWeight->Bold,
        FontColor->RGBColor[1, 0, 0]],
       "a,b,c,d}]"
      }],ExpressionUUID->"34f17160-3b33-454f-b9a7-70791e53d755"],
      TextCell[
       Row[{"Fold[f,x,", 
         Style["{", 
          RGBColor[1, 0, 0], FontSize -> 20, Bold], "a,b,c,d}]"}]]]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Fold[f,x,a,b,c,d}]\>\"", "\[Rule]", 
      InterpretationBox[Cell[TextData[{
        "Fold[",
        StyleBox["{",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        "f,x,a,b,c,d}]"
       }],ExpressionUUID->"9afcc6dc-4b43-48e5-83ef-63ec58fe5d7f"],
       TextCell[
        Row[{"Fold[", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "f,x,a,b,c,d}]"}]]]}], 
     ",", 
     RowBox[{"\"\<Fold[f,x,a,b,c,d}]\>\"", "\[Rule]", 
      InterpretationBox[Cell[TextData[{
        "Fold[f,",
        StyleBox["{",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        "x,a,b,c,d}]"
       }],ExpressionUUID->"2a41521e-71cb-4ffc-a9c2-b920c2ebb070"],
       TextCell[
        Row[{"Fold[f,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "x,a,b,c,d}]"}]]]}], ",", 
     RowBox[{"\"\<Fold[f,x,a,b,c,d}]\>\"", "\[Rule]", 
      InterpretationBox[Cell[TextData[{
        "Fold[f,x,",
        StyleBox["{",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        "a,b,c,d}]"
       }],ExpressionUUID->"e73e79df-214e-4d74-b879-03357570f7d9"],
       TextCell[
        Row[{"Fold[f,x,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "a,b,c,d}]"}]]]}]}], 
    "}"}], ",", 
   RowBox[{"VertexShapeFunction", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Fold[f,x,a,b,c,d}]\>\"", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Inset", "[", 
         RowBox[{
          RowBox[{"Framed", "[", "\"\<Fold[f,x,a,b,c,d}]\>\"", "]"}], ",", 
          "#"}], "]"}], "&"}], ")"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7081808892934604`*^9},ExpressionUUID->"6fcbce04-d6bb-4b87-918e-\
906f62e92232"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{"Fold[f,x,a,b,c,d}]", 
       TextCell[
        Row[{"Fold[", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "f,x,a,b,c,d}]"}]], 
       TextCell[
        Row[{"Fold[f,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "x,a,b,c,d}]"}]], 
       TextCell[
        Row[{"Fold[f,x,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "a,b,c,d}]"}]]}, {{{1, 
       2}, {1, 3}, {1, 4}}, Null}, {
      VertexShapeFunction -> {"Fold[f,x,a,b,c,d}]" -> (Inset[
           Framed["Fold[f,x,a,b,c,d}]"], #]& )}}]]}, 
    TagBox[GraphicsGroupBox[{{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[{{{0.7745966692414834, 0.7745966692414834}, {0., 0.}}, {{
          0.7745966692414834, 0.7745966692414834}, {0.7745966692414834, 
          0.}}, {{0.7745966692414834, 0.7745966692414834}, {
          1.5491933384829668`, 0.}}}, 0.018845521490452433`]}}, {
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], InsetBox[
          FrameBox["\<\"Fold[f,x,a,b,c,d}]\"\>",
           StripOnInput->False], {0.7745966692414834, 0.7745966692414834}], 
         DiskBox[{0., 0.}, 0.018845521490452433], 
         DiskBox[{0.7745966692414834, 0.}, 0.018845521490452433], 
         DiskBox[{1.5491933384829668, 0.}, 0.018845521490452433]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.708180890028984*^9},ExpressionUUID->"e7bb3a90-d5e4-47fb-84c6-\
a2b6001976c0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"VertexShapeFunction", "\[Rule]", 
  RowBox[{"{", 
   RowBox[{"\"\<Fold[f,x,a,b,c,d}]\>\"", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Inset", "[", 
       RowBox[{
        RowBox[{"Framed", "[", "\"\<Fold[f,x,a,b,c,d}]\>\"", "]"}], ",", 
        "#"}], "]"}], "&"}], ")"}]}], "}"}], 
  RowBox[{"(*", 
   RowBox[{"check", " ", "options", " ", "of", " ", "Framed"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.7081808004225388`*^9, 3.7081808780214787`*^9}, {
  3.7081809102332797`*^9, 3.7081809203404484`*^9}, {3.7081850103497334`*^9, 
  3.708185012429216*^9}, {3.7081850643279696`*^9, 
  3.708185073595518*^9}},ExpressionUUID->"d6719156-2a50-45e7-81b1-\
e8f10d177185"],

Cell[CellGroupData[{

Cell["Example for Poster Session", "Subsubsection",
 CellChangeTimes->{{3.7081870323792305`*^9, 
  3.7081870436672354`*^9}},ExpressionUUID->"de0b7197-95c6-4bcb-8de7-\
ff2f9b1e0b6f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", "\"\<Fold[f,x,{a,b,c}]\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{"dropped", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"StringDrop", "[", 
      RowBox[{"input", ",", 
       RowBox[{"{", "#", "}"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"StringLength", "[", "input", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"filtered", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"dropped", ",", 
     RowBox[{
      RowBox[{"Not", "[", 
       RowBox[{"messageAnalysis", "[", "#", "]"}], "]"}], "&"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"corrected", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"syntaxCorrectorWithoutNotation", "[", 
      RowBox[{"#", ",", "True", ",", "20"}], "]"}], "&"}], "/@", 
    "filtered"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"filtocor", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"filtered", "[", 
        RowBox[{"[", "#", "]"}], "]"}], "\[DirectedEdge]", 
       RowBox[{"corrected", "[", 
        RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "filtered", "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"intofil", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{"input", "\[DirectedEdge]", "filtered"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.708185446771778*^9, 3.708185450094136*^9}, {
   3.7081855250151873`*^9, 3.708185535518607*^9}, 3.708185680047398*^9, 
   3.7081857653647985`*^9, {3.7081858355254965`*^9, 3.708185845936865*^9}, {
   3.708185942528249*^9, 3.7081859740185475`*^9}, {3.7081864398023815`*^9, 
   3.7081864573728123`*^9}, {3.708186893297759*^9, 3.708186893802116*^9}, {
   3.7081943827095575`*^9, 3.7081943866703596`*^9}, {3.7082001271976123`*^9, 
   3.7082001326039762`*^9}, {3.7082032549908333`*^9, 3.708203255428285*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"dccb6434-cdce-4d47-ad14-9fc6ced99036"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Column", "[", "input", "]"}], "\[Rule]", 
  RowBox[{
   RowBox[{"Column", "[", "filtered", "]"}], "\[Rule]", 
   RowBox[{"TableForm", "[", "corrected", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.708196060652709*^9, 3.7081960905288534`*^9}, 
   3.7081996308017244`*^9, {3.7082001381352873`*^9, 
   3.708200152838569*^9}},ExpressionUUID->"8ca577da-c10c-4f36-bf28-\
084b3fd8e764"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Column", "[", "\<\"Fold[f,x,{a,b,c}]\"\>", "]"}], "\[Rule]", 
  RowBox[{
   TagBox[GridBox[{
      {"\<\"Foldf,x,{a,b,c}]\"\>"},
      {"\<\"Fold[f,x,a,b,c}]\"\>"},
      {"\<\"Fold[f,x,{a,b,c]\"\>"},
      {"\<\"Fold[f,x,{a,b,c}\"\>"}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], "\[Rule]", 
   InterpretationBox[GridBox[{
      {
       InterpretationBox[Cell[TextData[{
         "F",
         StyleBox["[",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         "oldf,x,{a,b,c}]"
        }],ExpressionUUID->"fdf4c979-c561-4bd5-bc97-6985572447ca"],
        TextCell[
         Row[{"F", 
           Style["[", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], "oldf,x,{a,b,c}]"}]]], 
       InterpretationBox[Cell[TextData[{
         "Fo",
         StyleBox["[",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         "ldf,x,{a,b,c}]"
        }],ExpressionUUID->"e02b8862-aba4-40d4-9cc2-5cb18d41915c"],
        TextCell[
         Row[{"Fo", 
           Style["[", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], "ldf,x,{a,b,c}]"}]]], 
       InterpretationBox[Cell[TextData[{
         "Fol",
         StyleBox["[",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         "df,x,{a,b,c}]"
        }],ExpressionUUID->"55c97cfa-61d9-4b9f-920b-67351a3cd514"],
        TextCell[
         Row[{"Fol", 
           Style["[", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], "df,x,{a,b,c}]"}]]], 
       InterpretationBox[Cell[TextData[{
         "Fold",
         StyleBox["[",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         "f,x,{a,b,c}]"
        }],ExpressionUUID->"41af8f42-a7c7-453b-88a6-8e729a4e3a0b"],
        TextCell[
         Row[{"Fold", 
           Style["[", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], "f,x,{a,b,c}]"}]]], 
       InterpretationBox[Cell[TextData[{
         "Foldf",
         StyleBox["[",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         ",x,{a,b,c}]"
        }],ExpressionUUID->"1b8ea5a2-5962-4b53-a76a-f83e4b7c74c5"],
        TextCell[
         Row[{"Foldf", 
           Style["[", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], 
           ",x,{a,b,c}]"}]]], "\<\"\"\>"},
      {
       InterpretationBox[Cell[TextData[{
         "Fold[",
         StyleBox["{",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         "f,x,a,b,c}]"
        }],ExpressionUUID->"6a227acb-0153-4871-a7b4-4a318f81c2b1"],
        TextCell[
         Row[{"Fold[", 
           Style["{", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], "f,x,a,b,c}]"}]]], 
       InterpretationBox[Cell[TextData[{
         "Fold[f",
         StyleBox["{",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         ",x,a,b,c}]"
        }],ExpressionUUID->"c54cfcf5-d6c5-4ac4-b853-619fb9745d0a"],
        TextCell[
         Row[{"Fold[f", 
           Style["{", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], ",x,a,b,c}]"}]]], 
       InterpretationBox[Cell[TextData[{
         "Fold[f,",
         StyleBox["{",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         "x,a,b,c}]"
        }],ExpressionUUID->"765bf5b6-d3a0-4738-8a1b-895cf6443e82"],
        TextCell[
         Row[{"Fold[f,", 
           Style["{", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], "x,a,b,c}]"}]]], 
       InterpretationBox[Cell[TextData[{
         "Fold[f,x",
         StyleBox["{",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         ",a,b,c}]"
        }],ExpressionUUID->"40374fe4-f194-409d-9b90-535f021db37f"],
        TextCell[
         Row[{"Fold[f,x", 
           Style["{", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], ",a,b,c}]"}]]], 
       InterpretationBox[Cell[TextData[{
         "Fold[f,x,",
         StyleBox["{",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         "a,b,c}]"
        }],ExpressionUUID->"97fff0a3-5e7e-4b26-aeb6-d5682f384462"],
        TextCell[
         Row[{"Fold[f,x,", 
           Style["{", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], "a,b,c}]"}]]], 
       InterpretationBox[Cell[TextData[{
         "Fold[f,x,a",
         StyleBox["{",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         ",b,c}]"
        }],ExpressionUUID->"f599a86f-5c72-4ca1-9aee-1b91cee9f7ae"],
        TextCell[
         Row[{"Fold[f,x,a", 
           Style["{", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], ",b,c}]"}]]]},
      {
       InterpretationBox[Cell[TextData[{
         "Fold[f,x,{a,b,",
         StyleBox["}",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         "c]"
        }],ExpressionUUID->"c68dd217-838e-4ca7-9cc8-0bd787f2f5d0"],
        TextCell[
         Row[{"Fold[f,x,{a,b,", 
           Style["}", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], "c]"}]]], 
       InterpretationBox[Cell[TextData[{
         "Fold[f,x,{a,b,c",
         StyleBox["}",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]],
         "]"
        }],ExpressionUUID->"ab3a1da0-dabb-4eb6-9471-6503213dc5ed"],
        TextCell[
         Row[{"Fold[f,x,{a,b,c", 
           Style["}", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], 
           "]"}]]], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
      {
       InterpretationBox[Cell[TextData[{
         "Fold[f,x,{a,b,c}",
         StyleBox["]",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->20,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0, 0]]
        }],ExpressionUUID->"d95a0fcf-b93a-4987-82e3-40608ac4152e"],
        TextCell[
         Row[{"Fold[f,x,{a,b,c}", 
           Style["]", 
            RGBColor[1, 0, 0], FontSize -> 20, Bold], 
           ""}]]], "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    TableForm[{{
       TextCell[
        Row[{"F", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "oldf,x,{a,b,c}]"}]], 
       TextCell[
        Row[{"Fo", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "ldf,x,{a,b,c}]"}]], 
       TextCell[
        Row[{"Fol", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "df,x,{a,b,c}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "f,x,{a,b,c}]"}]], 
       TextCell[
        Row[{"Foldf", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",x,{a,b,c}]"}]]}, {
       TextCell[
        Row[{"Fold[", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "f,x,a,b,c}]"}]], 
       TextCell[
        Row[{"Fold[f", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",x,a,b,c}]"}]], 
       TextCell[
        Row[{"Fold[f,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "x,a,b,c}]"}]], 
       TextCell[
        Row[{"Fold[f,x", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",a,b,c}]"}]], 
       TextCell[
        Row[{"Fold[f,x,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "a,b,c}]"}]], 
       TextCell[
        Row[{"Fold[f,x,a", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",b,c}]"}]]}, {
       TextCell[
        Row[{"Fold[f,x,{a,b,", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "c]"}]], 
       TextCell[
        Row[{"Fold[f,x,{a,b,c", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]}, {
       TextCell[
        Row[{"Fold[f,x,{a,b,c}", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]}}]]}]}]], "Output",
 CellChangeTimes->{{3.708200138510249*^9, 
  3.708200153119765*^9}},ExpressionUUID->"ac35e2ae-e288-4faf-afeb-\
78454b227907"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"graph", "=", 
  RowBox[{"Rasterize", "[", 
   RowBox[{
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{"intofil", ",", "filtocor"}], "}"}]}], ",", 
      RowBox[{"GraphLayout", "\[Rule]", "\"\<SpringEmbedding\>\""}], ",", 
      RowBox[{"VertexLabels", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{"\"\<Name\>\"", ",", "Above"}], "]"}]}], ",", 
      RowBox[{"VertexLabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontSize", "->", "18"}], ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
    RowBox[{"RasterSize", "\[Rule]", "1000"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.7082032908818455`*^9, {3.708203326397849*^9, 3.7082033443979845`*^9}, {
   3.708203501680913*^9, 3.7082035020716*^9}, {3.708203536118781*^9, 
   3.708203558587827*^9}},ExpressionUUID->"3cfdf135-5356-4f29-b5b2-\
8f02262b1e3e"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
BXs81PuELvuI5PxngmqWbTLDt+2AdtPT05991ramrnFlpG7DlrbtO3Zt2rpj
VW1TTW3D5tZWkeeNtVP39Y8+mpvXXSyAwHGREY3YWUqoVI6QN0km8saDq/+l
F+zxUO+Du/QIkNvhiAgAXbEkd7cBeolY3tSyvqZ+/Vfd3/45eSX38U3/cG3j
xtr6ppXrfsVtKQDccpURf8qdJaVKxQgHIx9ye+RgCduwtzktQ7076uR2eGbx
5XLf0ISI7oeGz9MCGqi8dDq9cdMvGzb8Kv7d3wtCu/EYSFzY+pvf1qxt+L+T
/4/uYgEElLuM+PZVpU2El4+Qm9s9S66lF+zpUO+OumQYcjtcWX712li9ZX98
jCUXgUpaWlpqb2+P1Db9cfBvpqE9G91rGzdubm19/Pix7pIBvFNa7Cq6PdF8
mOzTzP847w7Id/HQdFq1vFjJn2Q3nB2m+HdKeb6d3C4/RiZFSzZX8EyzA2Zj
X5R1ydM9uR1lYzSL3tt3iiYzQMVMT0/XNzRHd3cpQrvx6DxwZPXaxqGhId0l
A3jHdewq7igiD+/y3F7UIeb908qV21V51tmzf2KR2+UHKXJwzGxk69xuPqRJ
dYrKpWWZ/i0gt6OcjG4V4jFzM6O7FqAqJBKJmtqGP/zpO8vcfuSv/6hZ29zZ
2am7ZADvuIxd5nlbFgAluV0xSCQaLVdutyzH/LnWud1+PJYfK6vcHlUcsoLt
SytX/uzkHwDI7SiXdGaOJjNAxfT29q6M1A0kLljmdvFo/mT7upZNyR9+LHik
rty5fX+2+MGyyFAraD3a2rpF/Dq39SjUXMUu2ZI8st83Dcp2Bik1t8uYFGSa
2i1FV8hze05szyvL9gSVD+THJHcwW6XnDJX7/A+/LfsagtyOMnryfIEmM0Bl
7NmzZ2VNg53QLh6tv47+d//9z8S/zVIe4oN539BE8eP46eniTwRnJm+YfiKg
rY12pf8ULFuPelVqiLlurai+OLvCfLJJzlayQdEsD0pSpGe5vaik7AadtarJ
W3RJNgfIbAdz4raz3K48WjaGUuyotF7lRBlyOzySbTIj/kuTGaB8YrHYz2vq
Y8Nn7eT2upbNO3fuXH712jRLX7x6rzh4i4dpSjc+m3v+MN3W0dEp08Ku331Y
vBd0p7dJ/LiNZgLis5WLg2bZenRdUwuTsiy5iF0WV6ZNQrrzy9vmkzw8zO15
FVjcNysfQdm8Xb1ikdVto6a1WjVjtBxL+UTpQVQFd3I7vCOywbHkJfG+IN7f
aTIDlMlfRr6vWdvQeeCIZWgfSFwQCb+3t7es9aQzc8VZeuZmxjR4x0dSxSm9
Z/BsOT4RiIBavC1RgGlhl689KN6LkC0yu/hyub17JHt89vWPHj89bXMfbbYe
FdF9fHy83DsSaO6WIFVmxOInFOdiF4Moiy15uo/jF+fObJc1b1fGbScTcyx3
z+7+u0zZiq9YyO3wmrFEI+uqA6WYf7EocuP1uw9zL4Ab94AfOznR2Lx+09Yd
lrk9ururbl1zcHPUo7l5068JTIP30dEp00v3uUnVq4dIvKbbMi3MV7cSHBo+
X7w7e/tOiaMnPmrJSqL1qIc05XbLzVYit8vn2Fu8Ki+xK1dKNb0HNH9qjie5
3fKH4uhpyteqW1QCXhDnfyNgXL72QHctgK8ZEe7M5A0R8AYSkyL7iUyoiIvG
x+FYLFZT2/C7rw8pQlRv/Pt/+mjtv3zxpQhduvfSd4yPRcWPc1O3ioP38dPT
pildxF3PPxGU+1YC47qK7CFO2vGR1MWr9wpGoPWoh8qY24uvrvsutzuaGv7h
RTZDe9FGTAUjt0sn5JPbUR6Z2WfGm5p4Z9FdC+A7iy+X98fHHCU6keqzd46I
KP7552/vB9zV0Wsan4z5xv/u33/0xb44yytUkv9vJbD55J7BsyLkG9PgaT3q
Ib/OkzG9Gu11bs/r7GI/yxZdby+piaaT3O7scCme57Jik+HJ7SibJ88XjGRy
dHSK5nJAAfvRvb17JHWl8OydTqe/+OLL1WsbN2xp+6r7W2MCQ//QWOeBI9t3
7Fq1Zt3WTz/9L0dPGN98Xb/7UMs+wlul30rQO3jGadoXf0v/dc8+R61H29ra
dB8q/7JqxK64wlrO+1LNr4N7m9uznx0iDu4Q/WljRfNkTJq3W4/iYp6M1X2p
lvvv6oL7+xepVmUit6MsRDIxplPSZAYoJv5RWF5ZFU+QXTBfWloaGhpqalm/
tr7po9XrfvbRWvHf2rqmhqb1nZ2dT58+fZOzvEJx8kcVMha5tnzs6x8dSEye
m7plzMty2nr04w2/0L2j/uUit3+4Sq1cIdRuH0j1MqNly+25NTnq7ZIdIK8J
5IqoehPyP3TYv115uKx3X37YLRe1NR+c3I7yo8kMIJN59HTXH6Q3Ttr5riqd
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

   "], {{0, 0}, {600., 520.8}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->400,
  PlotRange->{{0, 600.}, {0, 520.8}}]], "Output",
 CellChangeTimes->{
  3.7082032589127007`*^9, 3.7082032917567997`*^9, {3.70820332741343*^9, 
   3.7082033454136367`*^9}, 3.708203502821554*^9, 
   3.7082035598065367`*^9},ExpressionUUID->"7211639c-2014-4b6f-a46c-\
f9eadf22625d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"graph", "=", 
  RowBox[{"Rasterize", "[", 
   RowBox[{
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{"intofil", ",", "filtocor"}], "}"}]}], ",", 
      RowBox[{"GraphLayout", "\[Rule]", "\"\<BalloonEmbedding\>\""}], ",", 
      RowBox[{"VertexLabels", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{"\"\<Name\>\"", ",", "Above"}], "]"}]}], ",", 
      RowBox[{"VertexLabelStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"FontSize", "->", "17"}], ",", 
         RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}], ",", 
    RowBox[{"RasterSize", "\[Rule]", "1000"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7081998994296136`*^9, 3.7081999123672504`*^9}, {
   3.7082001765106945`*^9, 3.7082001781513367`*^9}, {3.708200248386423*^9, 
   3.708200280543002*^9}, {3.7082003456687527`*^9, 3.7082005654054728`*^9}, {
   3.708202974284713*^9, 3.7082029919254713`*^9}, 3.7082030437698326`*^9, {
   3.7082030853639684`*^9, 3.708203119864397*^9}, {3.7082031713180113`*^9, 
   3.708203225709275*^9}, {3.7082034270083*^9, 
   3.7082034937902613`*^9}},ExpressionUUID->"7e9495e9-d5a7-4156-809a-\
d2aabb7140be"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
yvU/ARCi95A=
   "], {{0, 0}, {600., 582.}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{600., 582.},
  ImageSizeRaw->{400, 389},
  PlotRange->{{0, 600.}, {0, 582.}}]], "Output",
 CellChangeTimes->{
  3.7081999127422147`*^9, {3.708200160213591*^9, 3.7082001785731745`*^9}, {
   3.7082002489957886`*^9, 3.708200281011767*^9}, 3.7082003467780824`*^9, {
   3.7082003849191256`*^9, 3.708200533498839*^9}, 3.708200565749186*^9, {
   3.7082029848628974`*^9, 3.708202992534856*^9}, 3.7082030445979123`*^9, {
   3.7082030865671206`*^9, 3.7082031321613483`*^9}, {3.7082031720680227`*^9, 
   3.7082032263967285`*^9}, {3.7082034294301434`*^9, 
   3.708203494618353*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
VrbRfLzSzm1zwYJGpbhWNfCop1aGDbtpmis29K/NY8CX3fXLBj98FO3lYfb1
9cWGDRvQq48xehkNQK++g9G7nykMjQeil6ERLKbPxqTF+6jAkiTDskQI/Bkd
apBgJM6MqcldMVWnSUFZIs72ybKmPMym2AArBMrwuKMFj698XQfi6JDy/ECr
7tgLlHutxiWlwnZ6NT7gVVr+J3Qo4UaZMYCNBVjTMkJYH6edpGlT88fjP2Lv
mMYgqd7DfBbGdGzAJd2I/R/IpSbO8aM/XcAIyvDTa46ZNh7cDabMW1owLk6T
tKymZrvwAb9ARI5Zydt/P/wSRNP54HvOAg2Lss8bLcSLkGTVzZeKW3Oq8h7V
Y2MTpd0UG/cr5q1Rqrg+Gq98yLuhbrApcLAcxpvSG7QT7v7RiE9OVxD0B6g8
ksecorIDAvw5RwoF8tvYnMSzp0/5Z+RcPX/3HeZuvUpMT5q/FSSKPwke2NiK
qknlg9Ehd8kYKgqnHe2hn5eCsXbDK1uUfMGOriXYHl4UHbY5KsGP7w/24QUv
KrfY8B92I/VwlMmpACZctwwCiuooW3uBVsDlT8qgcoooVxuMa1YI+bmfrijK
jt6rnpXpIjP2G2ymN5HyqPQ7YYnNczYrFBCaHz7fia8wEY/WSuZIE1NLeGRC
Gx8vGT4oP7XmzMsITlbxkfR6OzrRBqfpj9PeSlwBMn/gINHP5ymMFuufS7/W
QWqi7GiNT1EkbUbad1yY3h+VCxflbNBDtXNTs+JBmten9Ccv7TFi8MKj4zlr
D70joqXgnuz0b0rXK2+IrY4pWoLCFWubVOSzb3KYBxor8a8/LkySDggqzMEz
3q0wLQgchhd3I7/B0rr67AFLYuiJr/K1haFd9yQXGGQnJUTRZQIo2tfOarKU
qAasuMAlhXYI/O0VfaXCkZoO2OUcrhzqpfg9w+axDVG+oFZBl7xNsPLMLRxf
0E2e+R3ZzXz9udcRkqLOfIrTbnTmzJ7GOPktSp15b+ztXYqvh5abXxVRxiIJ
vp4XmTKUnyvmw89+yXmWX8n3Ix4VYmEiSm9B5vwHjwCf20qSojV83Sm5EEQB
9tcOr9wCIRzafLl2rspD3LvudREr3Zs4eCkptPYSOP02zWKl+2CPYXHpybRW
+ts9XXgZlMot/otNpc6wG9CyatYZbj1NJnUSM5wfCd9uwaJDWVlrLI1B21/Q
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\
\>"],ExpressionUUID->"7e989199-636f-4a45-b521-d27e13226953"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"graph", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"Flatten", "@", 
     RowBox[{"{", 
      RowBox[{"intofil", ",", "filtocor"}], "}"}]}], ",", 
    RowBox[{"VertexLabels", "\[Rule]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\"\<Fold[Permute,{a,b},{{1,2},{2,1}}]\>\"", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Fold[Permute,{a,b},{{1,2},{2,1}}]\>\"", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
            RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
          "Above"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<Fold[Permute,{a,b},{1,2},{2,1}}]\>\"", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Fold[Permute,{a,b},{1,2},{2,1}}]\>\"", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Times New Roman\>\""}], ",", 
            RowBox[{"FontSize", "\[Rule]", "12"}], ",", 
            RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
          "Above"}], "]"}]}]}], "\[IndentingNewLine]", "}"}]}], ",", 
    RowBox[{"GraphLayout", "\[Rule]", "\"\<RadialEmbedding\>\""}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7081858912799788`*^9, 3.7081858929051285`*^9}, {
   3.7081865037256517`*^9, 3.708186540380607*^9}, {3.708194351780653*^9, 
   3.7081943523110275`*^9}, 3.7081944122464743`*^9, {3.7081944513541646`*^9, 
   3.7081944693178673`*^9}, {3.7081946067001615`*^9, 3.708194631734889*^9}, {
   3.7081946688952065`*^9, 3.7081947090186157`*^9}, {3.708194750113717*^9, 
   3.7081947569596*^9}, {3.708194828322092*^9, 3.708194829830161*^9}, {
   3.708199621192267*^9, 3.708199652411351*^9}, {3.7081997471310563`*^9, 
   3.708199845147744*^9}, {3.7081999372737656`*^9, 3.708199965508439*^9}, {
   3.708200017024619*^9, 
   3.708200040009198*^9}},ExpressionUUID->"75703923-4201-4617-bec3-\
f6399f58a6e3"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Fold[Permute,{a,b},{{1,2},{2,1}}]", "FoldPermute,{a,b},{{1,2},{2,1}}]",
        "Fold[Permute,a,b},{{1,2},{2,1}}]", 
       "Fold[Permute,{ab},{{1,2},{2,1}}]", "Fold[Permute,{a,b,{{1,2},{2,1}}]",
        "Fold[Permute,{a,b}{{1,2},{2,1}}]", 
       "Fold[Permute,{a,b},{1,2},{2,1}}]", "Fold[Permute,{a,b},{{,2},{2,1}}]",
        "Fold[Permute,{a,b},{{12},{2,1}}]", 
       "Fold[Permute,{a,b},{{1,},{2,1}}]", "Fold[Permute,{a,b},{{1,2,{2,1}}]",
        "Fold[Permute,{a,b},{{1,2}{2,1}}]", 
       "Fold[Permute,{a,b},{{1,2},2,1}}]", "Fold[Permute,{a,b},{{1,2},{,1}}]",
        "Fold[Permute,{a,b},{{1,2},{21}}]", 
       "Fold[Permute,{a,b},{{1,2},{2,}}]", "Fold[Permute,{a,b},{{1,2},{2,1}]",
        "Fold[Permute,{a,b},{{1,2},{2,1}}", 
       TextCell[
        Row[{"F", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "oldPermute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fo", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "ldPermute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fol", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "dPermute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldP", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "ermute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPe", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "rmute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPer", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "mute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPerm", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "ute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPermu", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "te,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPermut", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "e,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPermute", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,a", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{ab},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{ab},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{ab},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "b,{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b}{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b}{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b}{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "{a,b},{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "a,b},{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",b},{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{12},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{12},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{12},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{1,},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{1,2}{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2}{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2}{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2},2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2},2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},2,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},2,1", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{1,2},{,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2},{,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2},{,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{1,2},{21}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2},{21}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2},{21}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{1,2},{2,}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2},{2,}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2},{2,}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},{", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,1}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},{2,1", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},{2,1}", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},{2,1}}", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]}, {{{1, 2}, {1, 
       3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 7}, {1, 8}, {1, 9}, {1, 10}, {
       1, 11}, {1, 12}, {1, 13}, {1, 14}, {1, 15}, {1, 16}, {1, 17}, {1, 
       17}, {1, 18}, {2, 19}, {2, 20}, {2, 21}, {2, 22}, {2, 23}, {2, 24}, {2,
        25}, {2, 26}, {2, 27}, {2, 28}, {2, 29}, {3, 30}, {3, 31}, {3, 32}, {
       3, 33}, {4, 34}, {4, 35}, {4, 36}, {5, 37}, {5, 38}, {6, 39}, {6, 
       40}, {6, 41}, {7, 42}, {7, 43}, {7, 44}, {7, 45}, {7, 46}, {7, 47}, {7,
        48}, {7, 42}, {7, 43}, {7, 44}, {7, 45}, {7, 46}, {7, 47}, {7, 48}, {
       8, 49}, {8, 50}, {8, 51}, {9, 52}, {9, 53}, {9, 54}, {10, 55}, {10, 
       56}, {10, 57}, {11, 58}, {12, 59}, {12, 60}, {12, 61}, {13, 62}, {13, 
       63}, {13, 64}, {13, 65}, {13, 66}, {14, 67}, {14, 68}, {14, 69}, {15, 
       70}, {15, 71}, {15, 72}, {16, 73}, {16, 74}, {16, 75}, {17, 76}, {17, 
       77}, {17, 78}, {17, 76}, {17, 77}, {17, 78}, {18, 79}}, Null}, {
      GraphLayout -> "RadialEmbedding", 
       VertexLabels -> {"Fold[Permute,{a,b},{{1,2},{2,1}}]" -> Placed[
           Style[
           "Fold[Permute,{a,b},{{1,2},{2,1}}]", FontFamily -> 
            "Times New Roman", FontSize -> 12, Background -> GrayLevel[1]], 
           Above], "Fold[Permute,{a,b},{1,2},{2,1}}]" -> Placed[
           Style[
           "Fold[Permute,{a,b},{1,2},{2,1}}]", FontFamily -> 
            "Times New Roman", FontSize -> 12, Background -> GrayLevel[1]], 
           Above]}}]]}, 
    TagBox[GraphicsGroupBox[{{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.023294398090377973`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          1.4296605233234683`, 2.7796529530476035`}}, 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          1.0029362603125067`, 2.1794118369791606`}}, 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          0.9848941651347929, 1.8294000105159873`}}, 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          1.0488182344270056`, 1.586669907359816}}, 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          1.1724509290011076`, 1.368222782303367}}, 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.9542550734682473`, 1.954903187381237}, {
          1.9058251655849143`, 1.4427093723529536`}, {1.5628307651897837`, 
          1.0592477687647603`}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.9542550734682473`, 1.954903187381237}, {
          1.6112606730731123`, 1.5714415837929385`}, {1.5628307651897837`, 
          1.0592477687647603`}}], 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          2.054757620985018, 0.9826322087178969}}, 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          2.345679381746709, 1.0592477687647595`}}, 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          2.599521815896583, 1.2207080844799347`}}, 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          2.7360592179353858`, 1.3682227823033655`}}, 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          2.839535193925453, 1.5405473905934943`}}, 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          2.931382610202371, 1.9297358481449578`}}, 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          2.85969191250949, 2.323136467402656}}, 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          2.7048210392105867`, 2.581052010807105}}, 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          2.478849623613029, 2.7796529530476017`}}, 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.9542550734682473`, 1.954903187381237}, {
          1.9232862776777857`, 2.468448602913434}, {2.203183765815015, 
          2.900125978121525}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.9542550734682473`, 1.954903187381237}, {
          2.2341525616054723`, 2.3865805625909786`}, {2.203183765815015, 
          2.900125978121525}}], 0.036418556521208165`], 
         ArrowBox[{{1.9542550734682473`, 1.954903187381237}, {
          2.0045730643597355`, 2.931058768116692}}, 0.036418556521208165`], 
         ArrowBox[{{1.4296605233234683`, 2.7796529530476035`}, {
          1.8536190916852797`, 3.9072143488521482`}}, 0.036418556521208165`], 
         ArrowBox[{{1.4296605233234683`, 2.7796529530476035`}, {
          1.6534138945615406`, 3.8865193648625045`}}, 0.036418556521208165`], 
         ArrowBox[{{1.4296605233234683`, 2.7796529530476035`}, {
          1.4563976887747192`, 3.8453487688618146`}}, 0.036418556521208165`], 
         ArrowBox[{{1.4296605233234683`, 2.7796529530476035`}, {
          1.2646588951180409`, 3.7841389794097307`}}, 0.036418556521208165`], 
         ArrowBox[{{1.4296605233234683`, 2.7796529530476035`}, {
          1.0802299925032817`, 3.7035388355016523`}}, 0.036418556521208165`], 
         ArrowBox[{{1.4296605233234683`, 2.7796529530476035`}, {
          0.905065973178689, 3.6044027187139704`}}, 0.036418556521208165`], 
         ArrowBox[{{1.4296605233234683`, 2.7796529530476035`}, {
          0.7410236193248005, 3.4877814965468072`}}, 0.036418556521208165`], 
         ArrowBox[{{1.4296605233234683`, 2.7796529530476035`}, {
          0.5898418207014187, 3.3549113829670922`}}, 0.036418556521208165`], 
         ArrowBox[{{1.4296605233234683`, 2.7796529530476035`}, {
          0.4531231419835715, 3.207200834232977}}, 0.036418556521208165`], 
         ArrowBox[{{1.4296605233234683`, 2.7796529530476035`}, {
          0.3323168351772865, 3.0462156189071194`}}, 0.036418556521208165`], 
         ArrowBox[{{1.4296605233234683`, 2.7796529530476035`}, {
          0.22870347718779405`, 2.873662220320396}}, 0.036418556521208165`], 
         ArrowBox[{{1.0029362603125067`, 2.1794118369791606`}, {
          0.1433813953857641, 2.69136974742408}}, 0.036418556521208165`], 
         ArrowBox[{{1.0029362603125067`, 2.1794118369791606`}, {
          0.077255025063941, 2.5012705457799167`}}, 0.036418556521208165`], 
         ArrowBox[{{1.0029362603125067`, 2.1794118369791606`}, {
          0.031025322198048322`, 2.3053797142164703`}}, 
          0.036418556521208165`], 
         ArrowBox[{{1.0029362603125067`, 2.1794118369791606`}, {
          0.005182333139065687, 2.105773744280237}}, 0.036418556521208165`], 
         ArrowBox[{{0.9848941651347929, 1.8294000105159873`}, {0., 
          1.9045685089086837`}}, 0.036418556521208165`], 
         ArrowBox[{{0.9848941651347929, 1.8294000105159873`}, {
          0.015533256801338657`, 1.7038968336507367`}}, 
          0.036418556521208165`], 
         ArrowBox[{{0.9848941651347929, 1.8294000105159873`}, {
          0.05161744715676608, 1.5058858881853903`}}, 0.036418556521208165`], 
         ArrowBox[{{1.0488182344270056`, 1.586669907359816}, {
          0.10787006967182133`, 1.312634637793923}}, 0.036418556521208165`], 
         ArrowBox[{{1.0488182344270056`, 1.586669907359816}, {
          0.18369483255383345`, 1.1261915938057563`}}, 0.036418556521208165`],
          ArrowBox[{{1.1724509290011076`, 1.368222782303367}, {
          0.27828797445326514`, 0.948533098868753}}, 0.036418556521208165`], 
         ArrowBox[{{1.1724509290011076`, 1.368222782303367}, {
          0.3906467845339683, 0.7815423772254964}}, 0.036418556521208165`], 
         ArrowBox[{{1.1724509290011076`, 1.368222782303367}, {
          0.5195802314574942, 0.6269895720678238}}, 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.2074571132433258`, 0.6250301903761748}, {
          0.6637215886115728, 0.4865129815786353}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.0190952405580318`, 0.9207305599671691}, {
          0.6637215886115728, 0.4865129815786353}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.306908285510889, 0.5885268038113229}, {
          0.8215429217522074, 0.3616016925635932}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.0774654014311107`, 0.8323226575167249}, {
          0.8215429217522074, 0.3616016925635932}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.4095856688005959`, 0.5624425584354228}, {
          0.9913712854867676, 0.2535797957605386}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.1446163818759592`, 0.750385006090036}, {
          0.9913712854867676, 0.2535797957605386}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.5144008573064505`, 0.5470539537374296}, {
          1.17140645691132, 0.16359235014828366`}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.2198363647946493`, 0.6757861651756619}, {
          1.17140645691132, 0.16359235014828366`}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.6202427839553328`, 0.5425241127560814}, {
          1.3597400184212725`, 0.09259324503656585}}], 0.036418556521208165`],
          ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.302327999655725, 0.6093169010453209}, {
          1.3597400184212725`, 0.09259324503656585}}], 0.036418556521208165`],
          ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.725989497994371, 0.5489010529319773}, {
          1.5543755874127188`, 0.04133508860207802}}], 0.036418556521208165`],
          ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.39121685460813, 0.5516818044348702}, {
          1.5543755874127188`, 0.04133508860207802}}], 0.036418556521208165`],
          ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.8305200579480638`, 0.5661171771136423}, {
          1.7532499784347055`, 0.010361230054557025`}}], 
          0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{1.5628307651897837`, 
          1.0592477687647603`}, {1.4855606856764283`, 0.5034918217055175}, {
          1.7532499784347055`, 0.010361230054557025`}}], 
          0.036418556521208165`], 
         ArrowBox[{{2.054757620985018, 0.9826322087178969}, {
          1.954255073468247, 0.}}, 0.036418556521208165`], 
         ArrowBox[{{2.054757620985018, 0.9826322087178969}, {
          2.1552601685017883`, 0.010361230054556803`}}, 
          0.036418556521208165`], 
         ArrowBox[{{2.054757620985018, 0.9826322087178969}, {
          2.354134559523775, 0.041335088602077796`}}, 0.036418556521208165`], 
         ArrowBox[{{2.345679381746709, 1.0592477687647595`}, {
          2.5487701285152213`, 0.09259324503656563}}, 0.036418556521208165`], 
         ArrowBox[{{2.345679381746709, 1.0592477687647595`}, {
          2.737103690025171, 0.16359235014828188`}}, 0.036418556521208165`], 
         ArrowBox[{{2.345679381746709, 1.0592477687647595`}, {
          2.9171388614497267`, 0.25357979576053835`}}, 0.036418556521208165`],
          ArrowBox[{{2.599521815896583, 1.2207080844799347`}, {
          3.086967225184284, 0.36160169256359076`}}, 0.036418556521208165`], 
         ArrowBox[{{2.599521815896583, 1.2207080844799347`}, {
          3.2447885583249185`, 0.48651298157863265`}}, 0.036418556521208165`],
          ArrowBox[{{2.599521815896583, 1.2207080844799347`}, {
          3.3889299154789994`, 0.6269895720678227}}, 0.036418556521208165`], 
         ArrowBox[{{2.7360592179353858`, 1.3682227823033655`}, {
          3.517863362402524, 0.7815423772254939}}, 0.036418556521208165`], 
         ArrowBox[{{2.839535193925453, 1.5405473905934943`}, {
          3.6302221724832267`, 0.9485330988687488}}, 0.036418556521208165`], 
         ArrowBox[{{2.839535193925453, 1.5405473905934943`}, {
          3.72481531438266, 1.1261915938057534`}}, 0.036418556521208165`], 
         ArrowBox[{{2.839535193925453, 1.5405473905934943`}, {
          3.8006400772646716`, 1.312634637793919}}, 0.036418556521208165`], 
         ArrowBox[{{2.931382610202371, 1.9297358481449578`}, {
          3.8568926997797273`, 1.5058858881853854`}}, 0.036418556521208165`], 
         ArrowBox[{{2.931382610202371, 1.9297358481449578`}, {
          3.892976890135156, 1.7038968336507336`}}, 0.036418556521208165`], 
         ArrowBox[{{2.931382610202371, 1.9297358481449578`}, {
          3.9085101469364947`, 1.9045685089086786`}}, 0.036418556521208165`], 
         ArrowBox[{{2.931382610202371, 1.9297358481449578`}, {
          3.9033278137974294`, 2.1057737442802353`}}, 0.036418556521208165`], 
         ArrowBox[{{2.931382610202371, 1.9297358481449578`}, {
          3.877484824738447, 2.305379714216467}}, 0.036418556521208165`], 
         ArrowBox[{{2.85969191250949, 2.323136467402656}, {
          3.8312551218725552`, 2.501270545779912}}, 0.036418556521208165`], 
         ArrowBox[{{2.85969191250949, 2.323136467402656}, {
          3.7651287515507317`, 2.691369747424077}}, 0.036418556521208165`], 
         ArrowBox[{{2.85969191250949, 2.323136467402656}, {3.679806669748702, 
          2.8736622203203934`}}, 0.036418556521208165`], 
         ArrowBox[{{2.7048210392105867`, 2.581052010807105}, {
          3.5761933117592113`, 3.046215618907115}}, 0.036418556521208165`], 
         ArrowBox[{{2.7048210392105867`, 2.581052010807105}, {
          3.455387004952925, 3.2072008342329745`}}, 0.036418556521208165`], 
         ArrowBox[{{2.7048210392105867`, 2.581052010807105}, {
          3.3186683262350796`, 3.3549113829670887`}}, 0.036418556521208165`], 
         ArrowBox[{{2.478849623613029, 2.7796529530476017`}, {
          3.1674865276116995`, 3.487781496546803}}, 0.036418556521208165`], 
         ArrowBox[{{2.478849623613029, 2.7796529530476017`}, {
          3.00344417375781, 3.604402718713968}}, 0.036418556521208165`], 
         ArrowBox[{{2.478849623613029, 2.7796529530476017`}, {
          2.828280154433219, 3.703538835501649}}, 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{2.203183765815015, 2.900125978121525}, {
          2.278149750365315, 3.4145961694429565`}, {2.643851251818462, 
          3.784138979409727}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{2.203183765815015, 2.900125978121525}, {
          2.568885267268161, 3.2696687881268285`}, {2.643851251818462, 
          3.784138979409727}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{2.203183765815015, 2.900125978121525}, {
          2.172214970024553, 3.4136713936414718`}, {2.452112458161781, 
          3.8453487688618133`}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{2.203183765815015, 2.900125978121525}, {
          2.4830812539522444`, 3.331803353320657}, {2.452112458161781, 
          3.8453487688618133`}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{2.203183765815015, 2.900125978121525}, {
          2.066936743562822, 3.4018591995672907`}, {2.2550962523749614`, 
          3.886519364862503}}], 0.036418556521208165`], 
         ArrowBox[BezierCurveBox[{{2.203183765815015, 2.900125978121525}, {
          2.3913432746271615`, 3.3847861434122724`}, {2.2550962523749614`, 
          3.886519364862503}}], 0.036418556521208165`], 
         ArrowBox[{{2.0045730643597355`, 2.931058768116692}, {
          2.054891055251223, 3.907214348852148}}, 0.036418556521208165`]}}, {
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
         0.7]}], {
          DiskBox[{1.9542550734682473, 1.954903187381237}, 
           0.036418556521208165], InsetBox[
           StyleBox["\<\"Fold[Permute,{a,b},{{1,2},{2,1}}]\"\>",
            StripOnInput->False,
            FontFamily->"Times New Roman",
            FontSize->12,
            Background->GrayLevel[1]], 
           Offset[{0, 2}, {1.9542550734682473, 1.991321743902445}], 
           ImageScaled[{0.5, 0}],
           BaseStyle->"Graphics"]}, 
         DiskBox[{1.4296605233234683, 2.7796529530476035}, 
          0.036418556521208165], 
         DiskBox[{1.0029362603125067, 2.1794118369791606}, 
          0.036418556521208165], 
         DiskBox[{0.9848941651347929, 1.8294000105159873}, 
          0.036418556521208165], 
         DiskBox[{1.0488182344270056, 1.586669907359816}, 
          0.036418556521208165], 
         DiskBox[{1.1724509290011076, 1.368222782303367}, 
          0.036418556521208165], {
          DiskBox[{1.5628307651897837, 1.0592477687647603}, 
           0.036418556521208165], InsetBox[
           StyleBox["\<\"Fold[Permute,{a,b},{1,2},{2,1}}]\"\>",
            StripOnInput->False,
            FontFamily->"Times New Roman",
            FontSize->12,
            Background->GrayLevel[1]], 
           Offset[{0, 2}, {1.5628307651897837, 1.0956663252859684}], 
           ImageScaled[{0.5, 0}],
           BaseStyle->"Graphics"]}, 
         DiskBox[{2.054757620985018, 0.9826322087178969}, 
          0.036418556521208165], 
         DiskBox[{2.345679381746709, 1.0592477687647595}, 
          0.036418556521208165], 
         DiskBox[{2.599521815896583, 1.2207080844799347}, 
          0.036418556521208165], 
         DiskBox[{2.7360592179353858, 1.3682227823033655}, 
          0.036418556521208165], 
         DiskBox[{2.839535193925453, 1.5405473905934943}, 
          0.036418556521208165], 
         DiskBox[{2.931382610202371, 1.9297358481449578}, 
          0.036418556521208165], 
         DiskBox[{2.85969191250949, 2.323136467402656}, 0.036418556521208165],
          DiskBox[{2.7048210392105867, 2.581052010807105}, 
          0.036418556521208165], 
         DiskBox[{2.478849623613029, 2.7796529530476017}, 
          0.036418556521208165], 
         DiskBox[{2.203183765815015, 2.900125978121525}, 
          0.036418556521208165], 
         DiskBox[{2.0045730643597355, 2.931058768116692}, 
          0.036418556521208165], 
         DiskBox[{1.8536190916852797, 3.9072143488521482}, 
          0.036418556521208165], 
         DiskBox[{1.6534138945615406, 3.8865193648625045}, 
          0.036418556521208165], 
         DiskBox[{1.4563976887747192, 3.8453487688618146}, 
          0.036418556521208165], 
         DiskBox[{1.2646588951180409, 3.7841389794097307}, 
          0.036418556521208165], 
         DiskBox[{1.0802299925032817, 3.7035388355016523}, 
          0.036418556521208165], 
         DiskBox[{0.905065973178689, 3.6044027187139704}, 
          0.036418556521208165], 
         DiskBox[{0.7410236193248005, 3.4877814965468072}, 
          0.036418556521208165], 
         DiskBox[{0.5898418207014187, 3.3549113829670922}, 
          0.036418556521208165], 
         DiskBox[{0.4531231419835715, 3.207200834232977}, 
          0.036418556521208165], 
         DiskBox[{0.3323168351772865, 3.0462156189071194}, 
          0.036418556521208165], 
         DiskBox[{0.22870347718779405, 2.873662220320396}, 
          0.036418556521208165], 
         DiskBox[{0.1433813953857641, 2.69136974742408}, 
          0.036418556521208165], 
         DiskBox[{0.077255025063941, 2.5012705457799167}, 
          0.036418556521208165], 
         DiskBox[{0.031025322198048322, 2.3053797142164703}, 
          0.036418556521208165], 
         DiskBox[{0.005182333139065687, 2.105773744280237}, 
          0.036418556521208165], 
         DiskBox[{0., 1.9045685089086837}, 0.036418556521208165], 
         DiskBox[{0.015533256801338657, 1.7038968336507367}, 
          0.036418556521208165], 
         DiskBox[{0.05161744715676608, 1.5058858881853903}, 
          0.036418556521208165], 
         DiskBox[{0.10787006967182133, 1.312634637793923}, 
          0.036418556521208165], 
         DiskBox[{0.18369483255383345, 1.1261915938057563}, 
          0.036418556521208165], 
         DiskBox[{0.27828797445326514, 0.948533098868753}, 
          0.036418556521208165], 
         DiskBox[{0.3906467845339683, 0.7815423772254964}, 
          0.036418556521208165], 
         DiskBox[{0.5195802314574942, 0.6269895720678238}, 
          0.036418556521208165], 
         DiskBox[{0.6637215886115728, 0.4865129815786353}, 
          0.036418556521208165], 
         DiskBox[{0.8215429217522074, 0.3616016925635932}, 
          0.036418556521208165], 
         DiskBox[{0.9913712854867676, 0.2535797957605386}, 
          0.036418556521208165], 
         DiskBox[{1.17140645691132, 0.16359235014828366}, 
          0.036418556521208165], 
         DiskBox[{1.3597400184212725, 0.09259324503656585}, 
          0.036418556521208165], 
         DiskBox[{1.5543755874127188, 0.04133508860207802}, 
          0.036418556521208165], 
         DiskBox[{1.7532499784347055, 0.010361230054557025}, 
          0.036418556521208165], 
         DiskBox[{1.954255073468247, 0.}, 0.036418556521208165], 
         DiskBox[{2.1552601685017883, 0.010361230054556803}, 
          0.036418556521208165], 
         DiskBox[{2.354134559523775, 0.041335088602077796}, 
          0.036418556521208165], 
         DiskBox[{2.5487701285152213, 0.09259324503656563}, 
          0.036418556521208165], 
         DiskBox[{2.737103690025171, 0.16359235014828188}, 
          0.036418556521208165], 
         DiskBox[{2.9171388614497267, 0.25357979576053835}, 
          0.036418556521208165], 
         DiskBox[{3.086967225184284, 0.36160169256359076}, 
          0.036418556521208165], 
         DiskBox[{3.2447885583249185, 0.48651298157863265}, 
          0.036418556521208165], 
         DiskBox[{3.3889299154789994, 0.6269895720678227}, 
          0.036418556521208165], 
         DiskBox[{3.517863362402524, 0.7815423772254939}, 
          0.036418556521208165], 
         DiskBox[{3.6302221724832267, 0.9485330988687488}, 
          0.036418556521208165], 
         DiskBox[{3.72481531438266, 1.1261915938057534}, 
          0.036418556521208165], 
         DiskBox[{3.8006400772646716, 1.312634637793919}, 
          0.036418556521208165], 
         DiskBox[{3.8568926997797273, 1.5058858881853854}, 
          0.036418556521208165], 
         DiskBox[{3.892976890135156, 1.7038968336507336}, 
          0.036418556521208165], 
         DiskBox[{3.9085101469364947, 1.9045685089086786}, 
          0.036418556521208165], 
         DiskBox[{3.9033278137974294, 2.1057737442802353}, 
          0.036418556521208165], 
         DiskBox[{3.877484824738447, 2.305379714216467}, 
          0.036418556521208165], 
         DiskBox[{3.8312551218725552, 2.501270545779912}, 
          0.036418556521208165], 
         DiskBox[{3.7651287515507317, 2.691369747424077}, 
          0.036418556521208165], 
         DiskBox[{3.679806669748702, 2.8736622203203934}, 
          0.036418556521208165], 
         DiskBox[{3.5761933117592113, 3.046215618907115}, 
          0.036418556521208165], 
         DiskBox[{3.455387004952925, 3.2072008342329745}, 
          0.036418556521208165], 
         DiskBox[{3.3186683262350796, 3.3549113829670887}, 
          0.036418556521208165], 
         DiskBox[{3.1674865276116995, 3.487781496546803}, 
          0.036418556521208165], 
         DiskBox[{3.00344417375781, 3.604402718713968}, 0.036418556521208165],
          DiskBox[{2.828280154433219, 3.703538835501649}, 
          0.036418556521208165], 
         DiskBox[{2.643851251818462, 3.784138979409727}, 
          0.036418556521208165], 
         DiskBox[{2.452112458161781, 3.8453487688618133}, 
          0.036418556521208165], 
         DiskBox[{2.2550962523749614, 3.886519364862503}, 
          0.036418556521208165], 
         DiskBox[{2.054891055251223, 3.907214348852148}, 
          0.036418556521208165]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.708185893366439*^9, 3.708185962798603*^9, {3.708186494867361*^9, 
   3.7081865041869736`*^9}, 3.7081865408939533`*^9, {3.7081943327241583`*^9, 
   3.70819435292146*^9}, {3.7081943906641855`*^9, 3.708194412682764*^9}, {
   3.708194458737376*^9, 3.7081944698332453`*^9}, {3.7081946072055187`*^9, 
   3.7081946321912007`*^9}, {3.708194669520644*^9, 3.7081947096060295`*^9}, 
   3.708194757559988*^9, 3.708194830694775*^9, {3.70819962339536*^9, 
   3.708199653926938*^9}, {3.7081997540530167`*^9, 3.7081998149599066`*^9}, 
   3.708199845803986*^9, 3.7081999659459085`*^9, {3.7082000269309287`*^9, 
   3.7082000406029415`*^9}},ExpressionUUID->"bea5383b-547e-49bc-822a-\
8d86bf5b6547"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"img1", "=", 
  RowBox[{"Rasterize", "[", 
   RowBox[{"graph", ",", 
    RowBox[{"RasterSize", "\[Rule]", "1000"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7081948324620247`*^9, 3.708194863426955*^9}, {
  3.7081949015209293`*^9, 
  3.708194918031616*^9}},ExpressionUUID->"c774f231-c235-4e3b-8a12-\
9e8570cab972"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJzsvY93FdW9/33Xev6S508ANAQJJ3AgP8g5sV8a/TZFDGppTGhNSwEhKgWt
sZcU0oCA4OFHFIioEUWpqE1rr+U2fqu5bVP10qWNy4d7q3nwodfVLLvw3rXO
8yH78r6bmXPm7JnZe8+e4fNaoysJ58zZZ2bP3u/92Z8f//c93/v6Pf/XP/zD
P/yF/vcZ/Xf15zLDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMD6mpqbGxsYG
Bwf7+/sHBgZGR0fpL7Ozs0m3i2EYhmEYhmGYq0xOTnZ1dbXP0dyyMr+ihf5f
LBbp146ODhLzSTeQYRiGYRiGYRLDBfs2fdzw8DDp86aW1rrFy+bV5eSj7pal
+aYW+tdNmzZdvHjRZsMELlwihmEYhmEY5obFEfv2lStXent7C4ViQ+MKUumr
Vnc/tLO0Z+TV42ff3X/ije27jq3t3UJ/X7Qk31YodHZ2zszM2GlY2ZlLxDAM
wzAMw9yYOGXfHhkZISVMH1qfa946cIDkuv8YPPjC8rbbFtQ3knTv7+833aSy
Y5eIYRiGYRiGuQFxyr49PT3d0dHRuKzp5sV50YZqx7GXJhqbv0atIrV87tw5
c00qO3aJGIZhGIZhmBsTp+zbdPKW1jbSwH39gwGiXRyP7TtFr8w3tZDUJ2lt
rlVOXSKGYRiGYRjmBsQ1+zY1pqFxBQngmqJdHGu6N9YtXkZNunDhgqEmuXaJ
GIZhGIZhmBsQp+zbpJBJ8ZIOX9u7RVG3bx04MH9hrlgsnjlzRnt7BE5dIoZh
GIZhGObGxCn79vj4OClw0r2bH96r2J6hIy/T61tXtg0PD2tvj8CpS8QwDMMw
DMMkRYLJwF2zb4+MjLSuLJAO/9GeE4rtOfbSBL1+eVOrIZdy1y5RRTifPMMw
DMMwjFESTwbumn17YmKCvvuC+kYVjxRxDB58Ya49hVKppL09ZfcukYfEuxDD
MAzDMEy2cSQZuGv27ZmZGfrW9Q3527vWK7Znw7Yh0vn0LhLY2ttTdu8SAUe6
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
V5xMN2wbosmX3jU+btCE6K9f4xG0pJYrOhLH96aGvIEGpsbQIsKv2zfsfB4e
1HC5j1DtKE5EKhqTlEiuBpY/nvT7FrCZOt4DLfTETpBc5omWfi7odn8Eh81P
d3aoYRiGYZgU0dXV1bisqT7XfPDUL1V2rptv7aTJlyZTo1XI955406MxPLlB
/MZDcZDA9iSfCQsCKuWoRpLWHqeLTy99ISt5mJcjKLQ4EakC6HYX9CGo5uNk
53OtlWqVgXeQZwFlP6mOh4rPi+USrm4ONQzDMAyTIkqlUluhcFN946rV3TUn
0/WbB+YvvBop1tfXZ65JCNKUD4/jN6ov+Y8NO5+PI5Mie0eLNu/YfzbUu2JG
pArc1O3C7i1bni2QoJ2/LC3B3CmAJaiYLslExeEAHBxqGIZhGCZdzM7OdnV1
LW9qnVeX27BtKGAm3b7r2M2L8435po6OjunpaXNN8qR5rGY+DciYTVoxsiYR
yScjqE243IcyY8aMSBX4K4S6QCJ+5gn61ZevdZ44SzATVNucsqzbHRxqGIZh
GCZ1iJCx3NImmk9Xre7272IfHvv1mu6N9K/1DflisTg6alaJVYw5vW/gWc/L
gsvKk6qPkE4kjrUWEayhbK0xI1IFJMAc1O2I0LSpD6FR4+QXioabux60gpDT
IslHTI+yCLg21DAMwzBMGimVSjSfNrW03lTfWJ9rbr/97vWbBx7aWaL/0/Ta
kC/MX5hbmm9uar6ak81o2XEoZ//x6aUv5FfKSdcrHiSJw3rwQvWJLDHR3que
1CV+RKoAup2kcpzz6AULGfqa1j4UmzX288bj+77z3ieWPzqAgMfEvm4vKw81
9BrTQw3DMAzDpJfJycmurq5CoUiT5qIleZpV59XlFtDc2nB1w7p1ZaGzs3Pn
8KGnzrxtNJwNxS79h0cO+asv+Q+Ry1H90ysGpSoC8axuq4dFOqbIxEc7kidc
YL9uaVm6g/ZFqXDcum/gWXecZOSiw/7D5n2REUNNW1uBBpZqQw3XSGUYhmGY
YGZnZ0dGRnp7e9uv0dyykv5Pk+zg4ODly5eFDNix/6w5Cyqcov2Hxwbuz/He
vePk/btOj559hzQbHRHcMxCUGs21A+7NKi/+4m9fxo9IFbip21Ey1ZMLyCjw
nvLszpgGWyeJxMNWI3hPyv6WBKCh5r77H5GHGgGGmqQaxjAMwzCpg2bVqamp
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
vWc2AXZtdHUY7Qb8sqRO0xL5WDbggOTHUJU3FbA1mYrFaTXRnpaHlGEYJj5T
U1NjY2ODg4P9/f0DAwOjo6P0l9nZJKPwqo3MAdI9QAaQ6oDjqFDFEaIjEZ+o
t468B8yhJHr/zx8/Fj+bSG8ogDA78cpvNc7d1bzNowVOwlAfIEfxRfRGjxoq
QmoImLJ17QqhN+rSq0iUZKHqqEaEr5RRxx4s0i3HhGKtR+sF951MAkS76d2Q
mjg4jTIMkz0mJye7urra52huWZlf0UL/LxaL9GtHRweNQkk1zGMk12JXIQ0m
x6uSkg9lRbTjfUrCBsY90gl9j5kVObIDAPbK42eo7qnimQ91HSozT0DFJf+Z
9ep2OIokKwkUwcaELsOj9phcVC9KUd4PPPjmls/01Iunz1wETUVoAExR4sdg
0W6uunRNnJ1GGYbJErOzs8PDwzSwNLW01i1eNq8uJx91tyzNN7XQv27atOni
RbN1RioCBVLtiDbv08jvCXqlBYL6aI9Zw2i2B3l6WrPl2Le3nzA3q0KXvvPe
J4hNo/VCzBmwmm6PlgAwoOISQHiyoUT0qQjWgyeSLoUpxKRGOzOevlSsgwQW
9lwQ/2tzOSMnfnTfwyRYtFccbSzg+DTKMExmuHLlSm9vb6FQbGhcQcPLqtXd
D+0s7Rl59fjZd/efeGP7rmNre7fQ3xctybcVCp2dnTMzM5ZbiP107dK9POe0
jAlLbBArqghr2ZVJgAmXks5NR1q6H+/ecVJXxKgHjyaBX0TMzfpqM2mEJDlI
IBl8zU1EUJalvHwaz2kOBPBq0TB6zyZAXqZUZBoUYElobrUORWqiQkQ1sNdG
n+747agp2uMPWRFwfxplGCYzjIyMFIvFuluW1ueatw4coHHGfwwefGF5220L
6htpzOnv77ffSH9ZJc9ByjZy/B3NU6+f/0BeGtDH1dyhxnZ2j/kqPHR+Ejnd
PzzZsGbXynv3GcpD6Elwh33zOPv1wXpPrEfUlZuiid6Qbrfg2KwXjQ3GIkuX
ERibaOYcTkwAxWhI3MJ3yKbFGPfC/cSPKqLd6KqqGqmYRhmGyQDT09MdHR2N
y5puXpwXxoFqx7GXJhqbv7ZoSb69vf3cuXOW24mAKRx9jz3bP3zmnfc+0aWZ
6Tzy6oA0T82APtM1mGQufvZXalLTur233PGTYu9+EysFf6oWWOEi7ykE6z14
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
MlWJGjcKewePwhynyN0xxYv0MuDq9R3fwS/z2rfM+dK3rrv54WuWPIg/5970
7ds27s+v2IXzl676/le++TgH2ytBcsqgCDb1pW8Ubt+4/yqB/1M/dJ9QJe6Q
g+du1nxpo4q3hACsjTFJGyPjvfcnrWuvypGQIggMk0CBRFHgQwborpIuGyMd
FDSOXrmimQkntgDbSN9ofPRGcwiho1UeJugQTLc8U1vZO8YI2PvEex9QL+rc
PNi+uiAi7XO/9G2QdhD4zy958PPN3/jbue1/c03LX3w6XZVuuyZzy43d316w
bAvO52B7hTC4DMrY2Njw8HBfXx+cjvnZ9sVL70x96e7b79l30+rCLXf/QNje
5CzlU+5HsPcZT6bok7cEvIo2BlNDTMNT7mGqNqYUDr/wyzuuml/r4XK/M4Oh
G8YvXMKkUCqYg0GtlG0SHCaOOd7l9YVw7BXl3qy8/AfDF4jtq0pEnZac0LHp
MYHqo8PIG13xEDHlDT79p9DcVzcNZG/fAbqO43NfeOCzjSv/w99W/e9/9Zn/
4//+x7/5+6p/+Fz1tXPr/vrvr/2rT1zzFx+/tuGmuzjYXjmoDEoun6+pXWhA
GRThjIiraGhshkuCbvPJf5rzf33sc3/3j3OvXXyb6GwOe6sNg1wQdkYTTQnt
vd0iRRtjatiZYLY2xhbiEdsafN6Lyog1QMKdtRw4QUmaJ3zV2K0nhr8+SMGN
ysttM3zEmV9fAIG3za2EjoEZDZQA05yVveP3HQMvrbj/R/j9tg37a27eMnfp
A39T1fq//eWnP/bpWVXVC6qqU/Ix97r6OTXpT3127h0rvhbfzIS64fipX298
uBjrMijwQfr7+4X4p7p2odpt5qc/WzX/P33q2mtq8995/KmoGxseaBs4xqDz
mTDmpH8rV/lv1cYYb5wToo0hKI/43p1Py0YeTD6OsUcGo1yAxsCoKlLh3T8+
Hq9tHeHHHGgLMFgi2wrdgPkak76thEas1OO/59++BP9L7vl33DfU0VP86qaB
jnV7/+Mna/7Pv/7s5+fUil2TG7YUthef2X/k9KMDxzZt3be8ex1en78g05Kb
FnJMTExEfcUmYMfAi25EFNpiampqetUgl69LL3boNtXX1f/TtTVfuummhHQb
qi01Y+5HDFtioZiVyv0WRRtjfNg5adoYa2qg//4/LsqGPe6ZrhmMsiAikMrC
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
Tk1NdXd353L5uvRisPQlN3du2FLYXnxm/5HTjw4c27R13/LudXh9/oJMSy7X
3t4+MTER2A1jlAGx9KzMLGJmDCf8XqFmBuOCaH8lUzlxV2uEGaNG/Mth4FAW
R2ctDYFS4qDZbmLaQWhj8CHW1I7oDEwhGDrAmshI89SjMFwiZ4VD9jmRaE6k
jGaxOoORNAjxPCZ0ylTpsLHF9sBb8EbKVGnLH37/hz86VHGiJPDFYjGfz1df
V1+Taljfuwt03Xr07T64qGXp7Jo0qHtPT0/oN4xREiI5g1WvJYoMBj2/VKiZ
offaqlxcgsi5NahOn+/QKnKl3ZBwUuZjwM64NTgIbQxccmtqR7Qqvok4GMYA
1gDzkTWRkZ6pRzEYMZrg7TpklsPgwhBG+1mszmAwbAEGLraoi0yV5YrnRabK
PcMnKFOlCGPCQJWq4nTPwwOLGlrSC7NzazMixl7q2PfkyXTDDfMXZFpbW48e
PRr1rWKoADW1bnMQm5SDVl161szIuztdasutIBG7NWBOy/SlaANlX8eZM34R
7YG19REU+KuNsU2dF9NEHAzzgCkGc5ZifMCHZxwmIcO9WB0tZ7E6g8HwBlAO
Es+DmXgQz+N8IZ7/0TOn9wz/fE3f8Fc3DYh/VS24ofq6+qrq1MqePgfSLo6H
dh7AmZlsY1tb29TUVNQ3hmEDQfCsPQQ+YKDhd8+aGfRtimB720qJAUI8QfmX
iKThk0u9l1zjGfNaoJ3uU7X7qI3B1eHTrKkdI6zDxWAQbLdFwwuOJFGtLVis
zmAwNAEMJmWq3DN8oqxMlbdt3P/FlY/d8LXdf/Hxa69bkFnUsnRG0i6OZZ2r
q2sXtra2njt3LuobwHACZivrfCrC7wHtC/OsmTk0coYcTG+ehXAZcLHK2wXd
LVUslbJE4u3On48LocHlLIP3URtjG8PEB+rDiBhJBmYfqwgTFiDyREYsVmcw
GPECzCZlqhTi+VK26yt3bf/EP84BD1/evc4lb1/fu2vWvFQ+nz98eObC8QTb
fDszlrBkVA7QSHh21vA7OkZAAVsPmhk5raLLzaEKqLasIkMlruv8rudfdXJC
wZ/lVO0OZ/qljYFjhfug+FzgSCyyZegAWHJFw4m+CsMeYaIYFqszGAyTIJQ2
x37++jPHzz7wvWc27Xy6+/4fta/eM6flzr/9h1lV1am19+1wydu37X0K5zc1
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
CsFGN2OqVHt7sSyAofZTqZRXxR4dHUWxS8sjdzcuNVnsZWs34zbxrv7+20nG
oLRRuwyEhO6xbtvPs56DKSetcUCokLzH8dsPfk/yXgI3hMDz8V/+igpPESIG
LYWc1XGmWGO8BXMllpc5ebZoweQLF1m4qgtHs6XgVjK5L37slYWr01QkC/k8
vYpU1YK6jcmLdosBsUMKASbThmVS7W0hfwHsFY2NjeHKaGmoqnPvW2bWCKru
bMBtotiq/V5pazBjdyM+1mx9w5qhXntQkB0dYsAXCh1oPzQl1GQDZ3UoKExm
3zz5nrj7+goykjdPJArO81IUb5WPbmeTO3nI01qMhZJ4G6mq5cq1m919Z1SW
IrFDCsFGzO8OYZcAdplUKlUXi00tDc+d35S12EtXtk2eftsnv7W1VfdqmB5i
Gqh1SlQdGNdQD0lX43w2p7MCt+yBIwZ8oeBAx4tWgG7ZwFkdf8IJmJBKL+1P
0IfwYJq/kxK5l9/36Cv3TKRwt+YqT1O/pvXdD274ZF8SXNbCdTyPVNUtkq75
XbJwCAFGzO+2Y68Ado2xsTHMOGZHayaVhJat3WxQ5nWbuqaVRcKRaH19/fDw
sPFlMXIdP30xk80QQ5vJ4qGisuUcgw6JbQgYUuAGO7OLAV9wAXSVVENyfSPm
rWggmEIaTFHFWb1QUKYRRl+R/wXJT/7+tbtJt+eUy5Fhk/sjm17jzs2ygcIP
kapadO2QkgRbCDYG5ndZhM0JhwSwC5BzfqgiipJj0qFdL9jZ+/aCpuX4a2l5
JB6P9/T0mL/4lWs3oWq0hkTbN0/HBUlXU9J4OrbuOUEK3FpyfjHgCwZAeJPq
NhM2SJu70aKSgTsZ/grJIc7qhQW+MjZ82XJB1u31P3qxeWIHImvXYcvJxp3H
2CJtuVQ+iVTVkskOKeZ3IcBkqvaScyknHBXAjpJKpVDyaHXN1NJwaagqcffi
pSvb1mxM4SdupDwSmzw9VBGpwjnJZNLaBq/Q1ZgMsnXR2jaC+UPyiQ7oLhLb
lHOeDjHgC1mBGFDOBDNNQm/+6SNIHXzpBgtDyzYegLp48+R7UhMKFE4jjJ92
SVn2upk7sfUSug5r12GTO4Zy7ntzzU6jxD+Rqrro2iFRYLQvWbQSgoputZct
D8zjggB2iMHBwcbGxlgsjuLNmBVB+TG/mIK7KL+9NFBTG2toaLBliyh09ahO
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
ETP/5CMvfOrgC0mVM0xHs1cxu7ANE5q9oVJHc9tPtKVrpLsXkTPDhpAMw2ih
bUENunE389vzFe2mNxxEMF/XMqsWMxlPuuypdTuci1IHzLFIxAvQoWTMZYoh
tW5H80s0ycUX+ZM//XPxl0Q7ESMukfE6oDw835wHNHsTm42a2+5ZBepOIXc7
XbqH5sywISTDMBmRXdnbHl86+aprAilf0U7DCvJ1DY1xyJzXFczXYibj6dDt
GUtT5XNwfD0oL7KviUSRxakGnurqv4JuCuH6RKtFmCFmbyd4q4zT3iyg2RvK
Qjcdi4iHugVIdxPltzYJ5sywISTDMFlA5mf8QaMzDRAOBttl0W4/NORZWVPW
aNsu0GIm4+nQ7RlLUz02cm9H9nsURRbdniL6LRu/p7BkhPN5dtUkF7OYCHer
gGZvwuFTYDr3L55uku5eIGeGDSEZhkmH3DeGHjQ8feu1ZWc7GUTezMWd4rFQ
w4XUXI2lcFrMZLzMBuyCjKWpHhu5x6LlHoWSRbfjrNTzo+RFonQrUMhYyF6i
q9eUNR1o9oaMs+gqGa21b0uXSXc5Z4YNIRmGASsrK+fOnZufn6/X63Nzc4uL
i/STtbWQoBBptqDrIyQidSzaA3R6kVcKchHtnjR0mjsBLMq/uPRTXe+pxUzG
k84tS3pS9kkEG7nHgLmt9hQyodvT1dlBeKvrXhRjigcBCd7qUQUsM2W/FKRp
c89yx0TGXLqOaW/btnSZdEfOjNxs1IdshmG6jOXl5cnJydothoZHS9uH6c9q
tUr/HB8fp55BfjF1GkHXR5Lx1Dd2RNWMC6Ldzh4lCNHoiufrMpPxpLuQRQhl
L01lI/cYcI+0Z5GhA0nxuyl2X0Kii9BviHiryzkofy2JH3otnlJATV0EXqjx
mxPVmFbnNSmW9+/OcXVDIyJnhppNoiGbYZhugubmCwsL9LCXh0f6Nm9b11eQ
j767tpbKw/S/+/btu3LlpiaXSylFt//subepe+wUzeOCaLezJziqwzQmz0P/
ZA/TadHt2UtTPcOO1h0NZI/2JwUzyiy/rr55kK8UIp3JEn4le19nIoEtKUhB
N1faY6eji8eFDl8vf9/659++b7f6kM0wTDdx48aNmZmZSqU6UNxOj/w99009
cqRxvPnqCxfefer064eOnto18xD9fNOW0lilMjExsbq6ihAK/YW6xE6R6wJH
wi+wCDAahjIxLmPtO3vijRbdDj2WZW5i2tG6c8GV0S54Mu7EiqmWuhrE8pb4
ZwordXyollVFdKR5zRZNzOuD2FlYjKebpLsYskdHK5sLg4pDdt6nzDCMTprN
ZrVapRl6f2HowNwJevaDx/zJ84NjOzb0F6kfuOdj99OAS11xLvmKGXEk3dFO
2qehdfDseSkAg2nGVAGRcZEx396oo3XnAt2ufYKZUbdDDao3Hl8JM6zU1SPe
WNzR0nto38U4Bdrz6EKheUHumrlrpHvSIbter+d9ygzDaKPVao2Pjxe3le/c
XBIT9qjj1EuXikMf2TRQGh0du3jxYt4nngZHRLvsAme0FsBQ3RlWCrLbBOna
Pl7LKZl2tO5QYBio/ZHJqNtT7L4E9YifIH6uKP5RCqFr20qcUl5lQSbq1oNY
MM5SIXcDsewkHrK3lGq1WocO2QzDBKGZ+PDI2Lq+wmx9PqYHEMfjT56lV5bK
w9Rv3LhxI+9zT4Yjot2zaGssNnaf1u3zhtKG7EveunIwZGvu1G9iwdG6E8Fl
0e46klG3E+KJVr9fyEvBkgrEv7p7P95Ei1+W9j3RkiKn2Rv9IAsbVSQ6jRzT
k7LQO0M2wzCh0OM8UNw+OLajbQ8gjp1Te/s2b6P5++XL+XggpMMd0W5tG0Fz
w7G4klp2KdKl2/E+GQsWoCQdtzC1SfadraLIrtuT7r4UmhKfdFcyLBLpClAj
UyWvfS4MTfB90DQf3zSXHe5AR0v3HhmyGYYJpdVq0eNMD/WumYcUO4EDcyfW
byxUq9WXX+6YmCSN0RDtNELlWEUr+/CYHrkMLX/DTEZLeFCXbtdSmupJkqwL
rJ414qxuT7pvb+geUoh4KzYeNDZd6zIpHCn1goQ60zF/a1GLtnSodO+RIZth
mCiWlpbocV7XV9j/6BOKncCx516h14+Mji0sLOR9+kpc+Z//CheyfEW7Z3el
GFWWerNJNZrJeFprHrVsBYXsZS1Gf12DofSh7Lo96e5LUXtIYTatGPFOGueP
J50jpUZsngCyBM1t9qRIJ0r3XhiyGYaJodlsjoxW6KF+7PhpxU7g1EuX6PWD
5ZGOKFF3SrTLlVmmF8TNuRpqNJPxpPPMHmnUVS3LRu5BxBzQnG5P/WAmzeGB
zvet72CdRTHgDMmnq5Fg4SAvZ1prm0DRLbNTla8CJhG6OjTTdP2QzTBMPJcu
XarVahv6iyoVLuKYP3n+1uS90mg08j79Njgl2j1JpVjwMTAnPjWayXhavUq0
lKZ6bOQehs8+URdaotawAFV5wKPWd2SLJ5WAc9I4f1tSOFLqxaYjpeyCm3u3
jK6Srr/R9H4tdPeQzTBMW1ZXV6kT6B8o3Tu5W7ET2HPwGHUa9FtLS06rGlm0
kzzIfXSwufOI0WQPjWYynlbdrqs01WMj9wBB+0QtaNHt0F0qE0m0t2BcHfM+
lfaDOL9GlYvYr+mIdxRJk4WygFpgo7vOKdJB0r2Lh2yGYRSZnJwsbiv3F4ZO
nn1DZcVt6O4J6jSoE3B592QanSG9aDDKfX8oeadvC0YlRosrNZrJeFp1u67S
VI+N3ANkT0SPf9ssuh16W0Xu0mQzqpEg4q0424U1iq6pMSLeedmQJpq5ZETu
EtW3uzVHB0n3rhyyGYZRp9FojFUqd/QX77lvqm0nsHv/3PqNNytcZmdn8z7x
SFwT7Z6UW2InuGTOzFCvmYwn6fYnTv8g+7uhNDWjlGIjdx/wCdS7AKHlbSF3
Fad+MZbviXK8ofQ0PmVJHSn1YjlXB0uQ1Evnvh7qdY50774hm2GYRKytrdH8
fbA8sq6vsOfgsZge4NDRU3duLhVL5fHx8VarlfeJ3yRYSeSgaJeTOS2cj1HN
qddMxpPOVksyucbcezZyl4Gk0avbtbwtssIUGzzy4YP/hdaoIlwhOzWmtZBc
tJZkHorliQPyr1xY2KI7jolkqHUAnaQL84uOHrIZhtGCKHUpbC1TP0BT+ODq
27Pn3to5tZf+t3+gVK1WFxc1L5enQ5SSyeOLg6Jdrnez41dgNMdDr5mMQKNu
x0J/dm98NnKXSZRDnuJtM04HMMlSeeTjXwzh2laNI86v1/PcZpJ5EMubt8oW
W3rtatMhS/c9R74t3wKxGJFX6YGPDh2yGYbRSKPRoH6gPDxyR3+xvzBUu/f+
3fvnHjnSoD+pWxgoVdZvLGwtDdFr6vW6I9sli0Vt5FdQvwrRTn/Jd1MPgFoz
a5uYG62p1GsmI9Co2zW6wbORuwxcCvWuPujS7chvUYkSow2HCkVq2OK+q2wM
hKySlOcdRlJHSr3Yd5JHnMER+6Yo6S7amJ01UxU6cchmGEYvy8vLk5OTlUqV
HvZNW0rUG9BsfQP1CQM3F9pGRisTExPubLhGAz22QKWulfpSxKlIuDpiA4LN
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
1bN4zO907zFnGIZhGEaRVqs1Pj5e3Fa+c3NJBN9idh4vDn1k05abO49fvHjR
wrn99O+u+ESOhQQM+lCSfyT5xARBqLLP3NpJJyr/wRAwck8dELaPmNfYrB32
pApTah5011DV65te4WU0+yNhP/v4t3yneuV//muK1Zx46e7bTUneq9Rm3pfL
jznDMAzDMIrU6/XhkbF1fYXZ+nzbzccff/IsvbJUHiYNYMFaGY6INkWOvJsk
/YWE6IGv+jeysZOrAyN3a3bo2YFliuXPFcp59vFvfvHE96LyxqHbxfHA4TP7
jr744Pw5OmcI73RZSTHS3XcOwamonZJnlx9zhmEYhmEUoaF5oLh9cGxH29Fc
HDun9vZt3lar1S5ftpF37bPOsyOYg0HRXLQWpi2GfAJNYE23/+yX/0KfJQ6a
zX1h4eXgPqG+WZ5PtwePLIb5UdLd53Lj25jA2s5Hjj/mDMMwDMO0pdVq0dBM
A/SumYcUB/QDcyfWbyxUq1U7G6MgdXnaYnL79fc/iBd4vuQHcyDl4yd/+0/4
IWk/+Z/54ksOxwnjEtEcx5DPIT4r6gjufBT/+oxXNVS6B1OG5BR3OxtUuf+Y
MwzDMAzTlqWlJRqa1/UV9j/6hOKAfuy5V+j1I6NjCwsLFs4Q5ZnTdt0F5Wz2
4GEt+g1DG7jWk2gn4eeOrzvdoM9/5TsvLv1UFHuilJhELJ28uIyGbhxNGYIx
dvkIquKYFwd3FE1BqHT3rc7Iqzl2CiXcf8wZhmEYhmlLs9kcGa3QAP3Y8dOK
A/qply7R6wfLI9bsJiCEbDq3R7nH20kCkYE0JZlK2lhcDcsG6fHgBh1+6sKR
515/7OlX6199ae/8eVyuFBsbKfKTv/0nXbpdl4QOSndfu0WKu7X1o454zBmG
YRiGiefSpUu1Wm1Df1GlWk0c8yfP3wrEVRqNhp2TPHPhHaFzbDq3e9Ehd8sm
hzByP/nNt4Q7uv1ziAdnaFoShxKTLROc3RgNtgOfdPedBlLcrU2+OuIxZxiG
YRgmntXVVRrQ+wdK907uVhzQ9xw8RgKAfmtpyZLqELkilp3bveiQu2nNTF/z
zXd/QZMUcfzlT3/5heMvHfzaK1OHz+Ac6GoYPYdECF/0mIOUqrlPj8mWCQrj
KNcX7YXGsnQPNl3hlmltR62OeMwZhmEYhmnL5ORkcVu5vzB08uwbKqvnQ3dP
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
AAAAAAAAAAAAAAAAwKMD5p/LYw==
   "], {{0, 0}, {360., 359.28}}, {0, 255},
   ColorFunction->RGBColor],
  ImageSize->{360., 359.28},
  PlotRange->{{0, 360.}, {0, 359.28}}]], "Output",
 CellChangeTimes->{{3.7081948394599805`*^9, 3.708194864227517*^9}, {
  3.7081949044850245`*^9, 
  3.70819491868108*^9}},ExpressionUUID->"98030d36-7d76-44ed-9be5-\
0aedbfc86b68"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageDimensions", "[", "img1", "]"}]], "Input",
 CellChangeTimes->{{3.708195446554865*^9, 
  3.7081954591247654`*^9}},ExpressionUUID->"fe7e369c-583d-4459-93b1-\
446b649df585"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"360", ",", "359"}], "}"}]], "Output",
 CellChangeTimes->{{3.7081954510700626`*^9, 
  3.7081954604296894`*^9}},ExpressionUUID->"d68967d2-964d-4328-a6d9-\
21aa3017ea46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"img2", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Thickness", "[", "0.001", "]"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", "Blue", ",", 
      RowBox[{"Opacity", "[", "0.25", "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"180", ",", "180"}], "}"}], ",", "40"}], "]"}], ",", 
      "\[IndentingNewLine]", "Red", ",", 
      RowBox[{"Opacity", "[", "0.25", "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"180", ",", "180"}], "}"}], ",", "90"}], "]"}], ",", 
      "\[IndentingNewLine]", "Green", ",", 
      RowBox[{"Opacity", "[", "0.25", "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"180", ",", "180"}], "}"}], ",", "175"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"img1", ",", "img2"}], "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7081949069237504`*^9, 3.708194912462713*^9}, {
  3.7081953888990383`*^9, 3.7081953896015406`*^9}, {3.708195424071932*^9, 
  3.7081954737521276`*^9}, {3.7081958426323185`*^9, 
  3.7081959716336784`*^9}},ExpressionUUID->"67dde6fd-2265-44a5-ac72-\
af494ca04079"],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1:eJzsvY93FdW9/33Xev6S508ANAQJJ3AgP8g5sV8a/TZFDGppTGhNSwEhKgWt
sZcU0oCA4OFHFIioEUWpqE1rr+U2fqu5bVP10qWNy4d7q3nwodfVLLvw3rXO
8yH78r6bmXPm7JnZe8+e4fNaoysJ58zZZ2bP3u/92Z8f//c93/v6Pf/XP/zD
P/yF/vcZ/Xf15zLDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzD
MAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMAzDMD6mpqbGxsYG
Bwf7+/sHBgZGR0fpL7Ozs0m3i2EYhmEYhmGYq0xOTnZ1dbXP0dyyMr+ihf5f
LBbp146ODhLzSTeQYRiGYRiGYRLDBfs2fdzw8DDp86aW1rrFy+bV5eSj7pal
+aYW+tdNmzZdvHjRZsMELlwihmEYhmEY5obFEfv2lStXent7C4ViQ+MKUumr
Vnc/tLO0Z+TV42ff3X/ije27jq3t3UJ/X7Qk31YodHZ2zszM2GlY2ZlLxDAM
wzAMw9yYOGXfHhkZISVMH1qfa946cIDkuv8YPPjC8rbbFtQ3knTv7+833aSy
Y5eIYRiGYRiGuQFxyr49PT3d0dHRuKzp5sV50YZqx7GXJhqbv0atIrV87tw5
c00qO3aJGIZhGIZhmBsTp+zbdPKW1jbSwH39gwGiXRyP7TtFr8w3tZDUJ2lt
rlVOXSKGYRiGYRjmBsQ1+zY1pqFxBQngmqJdHGu6N9YtXkZNunDhgqEmuXaJ
GIZhGIZhmBsQp+zbpJBJ8ZIOX9u7RVG3bx04MH9hrlgsnjlzRnt7BE5dIoZh
GIZhGObGxCn79vj4OClw0r2bH96r2J6hIy/T61tXtg0PD2tvj8CpS8QwDMMw
DMMkRYLJwF2zb4+MjLSuLJAO/9GeE4rtOfbSBL1+eVOrIZdy1y5RRTifPMMw
DMMwjFESTwbumn17YmKCvvuC+kYVjxRxDB58Ya49hVKppL09ZfcukYfEuxDD
MAzDMEy2cSQZuGv27ZmZGfrW9Q3527vWK7Znw7Yh0vn0LhLY2ttTdu8SAUe6
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
V5xMN2wbosmX3jU+btCE6K9f4xG0pJYrOhLH96aGvIEGpsbQIsKv2zfsfB4e
1HC5j1DtKE5EKhqTlEiuBpY/nvT7FrCZOt4DLfTETpBc5omWfi7odn8Eh81P
d3aoYRiGYZgU0dXV1bisqT7XfPDUL1V2rptv7aTJlyZTo1XI955406MxPLlB
/MZDcZDA9iSfCQsCKuWoRpLWHqeLTy99ISt5mJcjKLQ4EakC6HYX9CGo5uNk
53OtlWqVgXeQZwFlP6mOh4rPi+USrm4ONQzDMAyTIkqlUluhcFN946rV3TUn
0/WbB+YvvBop1tfXZ65JCNKUD4/jN6ov+Y8NO5+PI5Mie0eLNu/YfzbUu2JG
pArc1O3C7i1bni2QoJ2/LC3B3CmAJaiYLslExeEAHBxqGIZhGCZdzM7OdnV1
LW9qnVeX27BtKGAm3b7r2M2L8435po6OjunpaXNN8qR5rGY+DciYTVoxsiYR
yScjqE243IcyY8aMSBX4K4S6QCJ+5gn61ZevdZ44SzATVNucsqzbHRxqGIZh
GCZ1iJCx3NImmk9Xre7272IfHvv1mu6N9K/1DflisTg6alaJVYw5vW/gWc/L
gsvKk6qPkE4kjrUWEayhbK0xI1IFJMAc1O2I0LSpD6FR4+QXioabux60gpDT
IslHTI+yCLg21DAMwzBMGimVSjSfNrW03lTfWJ9rbr/97vWbBx7aWaL/0/Ta
kC/MX5hbmm9uar6ak81o2XEoZ//x6aUv5FfKSdcrHiSJw3rwQvWJLDHR3que
1CV+RKoAup2kcpzz6AULGfqa1j4UmzX288bj+77z3ieWPzqAgMfEvm4vKw81
9BrTQw3DMAzDpJfJycmurq5CoUiT5qIleZpV59XlFtDc2nB1w7p1ZaGzs3Pn
8KGnzrxtNJwNxS79h0cO+asv+Q+Ry1H90ysGpSoC8axuq4dFOqbIxEc7kidc
YL9uaVm6g/ZFqXDcum/gWXecZOSiw/7D5n2REUNNW1uBBpZqQw3XSGUYhmGY
YGZnZ0dGRnp7e9uv0dyykv5Pk+zg4ODly5eFDNix/6w5Cyqcov2Hxwbuz/He
vePk/btOj559hzQbHRHcMxCUGs21A+7NKi/+4m9fxo9IFbip21Ey1ZMLyCjw
nvLszpgGWyeJxMNWI3hPyv6WBKCh5r77H5GHGgGGmqQaxjAMwzCpg2bVqamp
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
vWc2AXZtdHUY7Qb8sqRO0xL5WDbggOTHUJU3FbA1mYrFaTXRnpaHlGEYJj5T
U1NjY2ODg4P9/f0DAwOjo6P0l9nZJKPwqo3MAdI9QAaQ6oDjqFDFEaIjEZ+o
t468B8yhJHr/zx8/Fj+bSG8ogDA78cpvNc7d1bzNowVOwlAfIEfxRfRGjxoq
QmoImLJ17QqhN+rSq0iUZKHqqEaEr5RRxx4s0i3HhGKtR+sF951MAkS76d2Q
mjg4jTIMkz0mJye7urra52huWZlf0UL/LxaL9GtHRweNQkk1zGMk12JXIQ0m
x6uSkg9lRbTjfUrCBsY90gl9j5kVObIDAPbK42eo7qnimQ91HSozT0DFJf+Z
9ep2OIokKwkUwcaELsOj9phcVC9KUd4PPPjmls/01Iunz1wETUVoAExR4sdg
0W6uunRNnJ1GGYbJErOzs8PDwzSwNLW01i1eNq8uJx91tyzNN7XQv27atOni
RbN1RioCBVLtiDbv08jvCXqlBYL6aI9Zw2i2B3l6WrPl2Le3nzA3q0KXvvPe
J4hNo/VCzBmwmm6PlgAwoOISQHiyoUT0qQjWgyeSLoUpxKRGOzOevlSsgwQW
9lwQ/2tzOSMnfnTfwyRYtFccbSzg+DTKMExmuHLlSm9vb6FQbGhcQcPLqtXd
D+0s7Rl59fjZd/efeGP7rmNre7fQ3xctybcVCp2dnTMzM5ZbiP107dK9POe0
jAlLbBArqghr2ZVJgAmXks5NR1q6H+/ecVJXxKgHjyaBX0TMzfpqM2mEJDlI
IBl8zU1EUJalvHwaz2kOBPBq0TB6zyZAXqZUZBoUYElobrUORWqiQkQ1sNdG
n+747agp2uMPWRFwfxplGCYzjIyMFIvFuluW1ueatw4coHHGfwwefGF5220L
6htpzOnv77ffSH9ZJc9ByjZy/B3NU6+f/0BeGtDH1dyhxnZ2j/kqPHR+Ejnd
PzzZsGbXynv3GcpD6Elwh33zOPv1wXpPrEfUlZuiid6Qbrfg2KwXjQ3GIkuX
ERibaOYcTkwAxWhI3MJ3yKbFGPfC/cSPKqLd6KqqGqmYRhmGyQDT09MdHR2N
y5puXpwXxoFqx7GXJhqbv7ZoSb69vf3cuXOW24mAKRx9jz3bP3zmnfc+0aWZ
6Tzy6oA0T82APtM1mGQufvZXalLTur233PGTYu9+EysFf6oWWOEi7ykE6z14
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
MlWJGjcKewePwhynyN0xxYv0MuDq9R3fwS/z2rfM+dK3rrv54WuWPIg/5970
7ds27s+v2IXzl676/le++TgH2ytBcsqgCDb1pW8Ubt+4/yqB/1M/dJ9QJe6Q
g+du1nxpo4q3hACsjTFJGyPjvfcnrWuvypGQIggMk0CBRFHgQwborpIuGyMd
FDSOXrmimQkntgDbSN9ofPRGcwiho1UeJugQTLc8U1vZO8YI2PvEex9QL+rc
PNi+uiAi7XO/9G2QdhD4zy958PPN3/jbue1/c03LX3w6XZVuuyZzy43d316w
bAvO52B7hTC4DMrY2Njw8HBfXx+cjvnZ9sVL70x96e7b79l30+rCLXf/QNje
5CzlU+5HsPcZT6bok7cEvIo2BlNDTMNT7mGqNqYUDr/wyzuuml/r4XK/M4Oh
G8YvXMKkUCqYg0GtlG0SHCaOOd7l9YVw7BXl3qy8/AfDF4jtq0pEnZac0LHp
MYHqo8PIG13xEDHlDT79p9DcVzcNZG/fAbqO43NfeOCzjSv/w99W/e9/9Zn/
4//+x7/5+6p/+Fz1tXPr/vrvr/2rT1zzFx+/tuGmuzjYXjmoDEoun6+pXWhA
GRThjIiraGhshkuCbvPJf5rzf33sc3/3j3OvXXyb6GwOe6sNg1wQdkYTTQnt
vd0iRRtjatiZYLY2xhbiEdsafN6Lyog1QMKdtRw4QUmaJ3zV2K0nhr8+SMGN
ysttM3zEmV9fAIG3za2EjoEZDZQA05yVveP3HQMvrbj/R/j9tg37a27eMnfp
A39T1fq//eWnP/bpWVXVC6qqU/Ix97r6OTXpT3127h0rvhbfzIS64fipX298
uBjrMijwQfr7+4X4p7p2odpt5qc/WzX/P33q2mtq8995/KmoGxseaBs4xqDz
mTDmpH8rV/lv1cYYb5wToo0hKI/43p1Py0YeTD6OsUcGo1yAxsCoKlLh3T8+
Hq9tHeHHHGgLMFgi2wrdgPkak76thEas1OO/59++BP9L7vl33DfU0VP86qaB
jnV7/+Mna/7Pv/7s5+fUil2TG7YUthef2X/k9KMDxzZt3be8ex1en78g05Kb
FnJMTExEfcUmYMfAi25EFNpiampqetUgl69LL3boNtXX1f/TtTVfuummhHQb
qi01Y+5HDFtioZiVyv0WRRtjfNg5adoYa2qg//4/LsqGPe6ZrhmMsiAikMrC
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
Tk1NdXd353L5uvRisPQlN3du2FLYXnxm/5HTjw4c27R13/LudXh9/oJMSy7X
3t4+MTER2A1jlAGx9KzMLGJmDCf8XqFmBuOCaH8lUzlxV2uEGaNG/Mth4FAW
R2ctDYFS4qDZbmLaQWhj8CHW1I7oDEwhGDrAmshI89SjMFwiZ4VD9jmRaE6k
jGaxOoORNAjxPCZ0ylTpsLHF9sBb8EbKVGnLH37/hz86VHGiJPDFYjGfz1df
V1+Taljfuwt03Xr07T64qGXp7Jo0qHtPT0/oN4xREiI5g1WvJYoMBj2/VKiZ
offaqlxcgsi5NahOn+/QKnKl3ZBwUuZjwM64NTgIbQxccmtqR7Qqvok4GMYA
1gDzkTWRkZ6pRzEYMZrg7TpklsPgwhBG+1mszmAwbAEGLraoi0yV5YrnRabK
PcMnKFOlCGPCQJWq4nTPwwOLGlrSC7NzazMixl7q2PfkyXTDDfMXZFpbW48e
PRr1rWKoADW1bnMQm5SDVl161szIuztdasutIBG7NWBOy/SlaANlX8eZM34R
7YG19REU+KuNsU2dF9NEHAzzgCkGc5ZifMCHZxwmIcO9WB0tZ7E6g8HwBlAO
Es+DmXgQz+N8IZ7/0TOn9wz/fE3f8Fc3DYh/VS24ofq6+qrq1MqePgfSLo6H
dh7AmZlsY1tb29TUVNQ3hmEDQfCsPQQ+YKDhd8+aGfRtimB720qJAUI8QfmX
iKThk0u9l1zjGfNaoJ3uU7X7qI3B1eHTrKkdI6zDxWAQbLdFwwuOJFGtLVis
zmAwNAEMJmWq3DN8oqxMlbdt3P/FlY/d8LXdf/Hxa69bkFnUsnRG0i6OZZ2r
q2sXtra2njt3LuobwHACZivrfCrC7wHtC/OsmTk0coYcTG+ehXAZcLHK2wXd
LVUslbJE4u3On48LocHlLIP3URtjG8PEB+rDiBhJBmYfqwgTFiDyREYsVmcw
GPECzCZlqhTi+VK26yt3bf/EP84BD1/evc4lb1/fu2vWvFQ+nz98eObC8QTb
fDszlrBkVA7QSHh21vA7OkZAAVsPmhk5raLLzaEKqLasIkMlruv8rudfdXJC
wZ/lVO0OZ/qljYFjhfug+FzgSCyyZegAWHJFw4m+CsMeYaIYFqszGAyTIJQ2
x37++jPHzz7wvWc27Xy6+/4fta/eM6flzr/9h1lV1am19+1wydu37X0K5zc1
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
CsFGN2OqVHt7sSyAofZTqZRXxR4dHUWxS8sjdzcuNVnsZWs34zbxrv7+20nG
oLRRuwyEhO6xbtvPs56DKSetcUCokLzH8dsPfk/yXgI3hMDz8V/+igpPESIG
LYWc1XGmWGO8BXMllpc5ebZoweQLF1m4qgtHs6XgVjK5L37slYWr01QkC/k8
vYpU1YK6jcmLdosBsUMKASbThmVS7W0hfwHsFY2NjeHKaGmoqnPvW2bWCKru
bMBtotiq/V5pazBjdyM+1mx9w5qhXntQkB0dYsAXCh1oPzQl1GQDZ3UoKExm
3zz5nrj7+goykjdPJArO81IUb5WPbmeTO3nI01qMhZJ4G6mq5cq1m919Z1SW
IrFDCsFGzO8OYZcAdplUKlUXi00tDc+d35S12EtXtk2eftsnv7W1VfdqmB5i
Gqh1SlQdGNdQD0lX43w2p7MCt+yBIwZ8oeBAx4tWgG7ZwFkdf8IJmJBKL+1P
0IfwYJq/kxK5l9/36Cv3TKRwt+YqT1O/pvXdD274ZF8SXNbCdTyPVNUtkq75
XbJwCAFGzO+2Y68Ado2xsTHMOGZHayaVhJat3WxQ5nWbuqaVRcKRaH19/fDw
sPFlMXIdP30xk80QQ5vJ4qGisuUcgw6JbQgYUuAGO7OLAV9wAXSVVENyfSPm
rWggmEIaTFHFWb1QUKYRRl+R/wXJT/7+tbtJt+eUy5Fhk/sjm17jzs2ygcIP
kapadO2QkgRbCDYG5ndZhM0JhwSwC5BzfqgiipJj0qFdL9jZ+/aCpuX4a2l5
JB6P9/T0mL/4lWs3oWq0hkTbN0/HBUlXU9J4OrbuOUEK3FpyfjHgCwZAeJPq
NhM2SJu70aKSgTsZ/grJIc7qhQW+MjZ82XJB1u31P3qxeWIHImvXYcvJxp3H
2CJtuVQ+iVTVkskOKeZ3IcBkqvaScyknHBXAjpJKpVDyaHXN1NJwaagqcffi
pSvb1mxM4SdupDwSmzw9VBGpwjnJZNLaBq/Q1ZgMsnXR2jaC+UPyiQ7oLhLb
lHOeDjHgC1mBGFDOBDNNQm/+6SNIHXzpBgtDyzYegLp48+R7UhMKFE4jjJ92
SVn2upk7sfUSug5r12GTO4Zy7ntzzU6jxD+Rqrro2iFRYLQvWbQSgoputZct
D8zjggB2iMHBwcbGxlgsjuLNmBVB+TG/mIK7KL+9NFBTG2toaLBliyh09ahO
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
ETP/5CMvfOrgC0mVM0xHs1cxu7ANE5q9oVJHc9tPtKVrpLsXkTPDhpAMw2ih
bUENunE389vzFe2mNxxEMF/XMqsWMxlPuuypdTuci1IHzLFIxAvQoWTMZYoh
tW5H80s0ycUX+ZM//XPxl0Q7ESMukfE6oDw835wHNHsTm42a2+5ZBepOIXc7
XbqH5sywISTDMBmRXdnbHl86+aprAilf0U7DCvJ1DY1xyJzXFczXYibj6dDt
GUtT5XNwfD0oL7KviUSRxakGnurqv4JuCuH6RKtFmCFmbyd4q4zT3iyg2RvK
Qjcdi4iHugVIdxPltzYJ5sywISTDMFlA5mf8QaMzDRAOBttl0W4/NORZWVPW
aNsu0GIm4+nQ7RlLUz02cm9H9nsURRbdniL6LRu/p7BkhPN5dtUkF7OYCHer
gGZvwuFTYDr3L55uku5eIGeGDSEZhkmH3DeGHjQ8feu1ZWc7GUTezMWd4rFQ
w4XUXI2lcFrMZLzMBuyCjKWpHhu5x6LlHoWSRbfjrNTzo+RFonQrUMhYyF6i
q9eUNR1o9oaMs+gqGa21b0uXSXc5Z4YNIRmGASsrK+fOnZufn6/X63Nzc4uL
i/STtbWQoBBptqDrIyQidSzaA3R6kVcKchHtnjR0mjsBLMq/uPRTXe+pxUzG
k84tS3pS9kkEG7nHgLmt9hQyodvT1dlBeKvrXhRjigcBCd7qUQUsM2W/FKRp
c89yx0TGXLqOaW/btnSZdEfOjNxs1IdshmG6jOXl5cnJydothoZHS9uH6c9q
tUr/HB8fp55BfjF1GkHXR5Lx1Dd2RNWMC6Ldzh4lCNHoiufrMpPxpLuQRQhl
L01lI/cYcI+0Z5GhA0nxuyl2X0Kii9BviHiryzkofy2JH3otnlJATV0EXqjx
mxPVmFbnNSmW9+/OcXVDIyJnhppNoiGbYZhugubmCwsL9LCXh0f6Nm9b11eQ
j767tpbKw/S/+/btu3LlpiaXSylFt//subepe+wUzeOCaLezJziqwzQmz0P/
ZA/TadHt2UtTPcOO1h0NZI/2JwUzyiy/rr55kK8UIp3JEn4le19nIoEtKUhB
N1faY6eji8eFDl8vf9/659++b7f6kM0wTDdx48aNmZmZSqU6UNxOj/w99009
cqRxvPnqCxfefer064eOnto18xD9fNOW0lilMjExsbq6ihAK/YW6xE6R6wJH
wi+wCDAahjIxLmPtO3vijRbdDj2WZW5i2tG6c8GV0S54Mu7EiqmWuhrE8pb4
ZwordXyollVFdKR5zRZNzOuD2FlYjKebpLsYskdHK5sLg4pDdt6nzDCMTprN
ZrVapRl6f2HowNwJevaDx/zJ84NjOzb0F6kfuOdj99OAS11xLvmKGXEk3dFO
2qehdfDseSkAg2nGVAGRcZEx396oo3XnAt2ufYKZUbdDDao3Hl8JM6zU1SPe
WNzR0nto38U4Bdrz6EKheUHumrlrpHvSIbter+d9ygzDaKPVao2Pjxe3le/c
XBIT9qjj1EuXikMf2TRQGh0du3jxYt4nngZHRLvsAme0FsBQ3RlWCrLbBOna
Pl7LKZl2tO5QYBio/ZHJqNtT7L4E9YifIH6uKP5RCqFr20qcUl5lQSbq1oNY
MM5SIXcDsewkHrK3lGq1WocO2QzDBKGZ+PDI2Lq+wmx9PqYHEMfjT56lV5bK
w9Rv3LhxI+9zT4Yjot2zaGssNnaf1u3zhtKG7EveunIwZGvu1G9iwdG6E8Fl
0e46klG3E+KJVr9fyEvBkgrEv7p7P95Ei1+W9j3RkiKn2Rv9IAsbVSQ6jRzT
k7LQO0M2wzCh0OM8UNw+OLajbQ8gjp1Te/s2b6P5++XL+XggpMMd0W5tG0Fz
w7G4klp2KdKl2/E+GQsWoCQdtzC1SfadraLIrtuT7r4UmhKfdFcyLBLpClAj
UyWvfS4MTfB90DQf3zSXHe5AR0v3HhmyGYYJpdVq0eNMD/WumYcUO4EDcyfW
byxUq9WXX+6YmCSN0RDtNELlWEUr+/CYHrkMLX/DTEZLeFCXbtdSmupJkqwL
rJ414qxuT7pvb+geUoh4KzYeNDZd6zIpHCn1goQ60zF/a1GLtnSodO+RIZth
mCiWlpbocV7XV9j/6BOKncCx516h14+Mji0sLOR9+kpc+Z//CheyfEW7Z3el
GFWWerNJNZrJeFprHrVsBYXsZS1Gf12DofSh7Lo96e5LUXtIYTatGPFOGueP
J50jpUZsngCyBM1t9qRIJ0r3XhiyGYaJodlsjoxW6KF+7PhpxU7g1EuX6PWD
5ZGOKFF3SrTLlVmmF8TNuRpqNJPxpPPMHmnUVS3LRu5BxBzQnG5P/WAmzeGB
zvet72CdRTHgDMmnq5Fg4SAvZ1prm0DRLbNTla8CJhG6OjTTdP2QzTBMPJcu
XarVahv6iyoVLuKYP3n+1uS90mg08j79Njgl2j1JpVjwMTAnPjWayXhavUq0
lKZ6bOQehs8+URdaotawAFV5wKPWd2SLJ5WAc9I4f1tSOFLqxaYjpeyCm3u3
jK6Srr/R9H4tdPeQzTBMW1ZXV6kT6B8o3Tu5W7ET2HPwGHUa9FtLS06rGlm0
kzzIfXSwufOI0WQPjWYynlbdrqs01WMj9wBB+0QtaNHt0F0qE0m0t2BcHfM+
lfaDOL9GlYvYr+mIdxRJk4WygFpgo7vOKdJB0r2Lh2yGYRSZnJwsbiv3F4ZO
nn1DZcVt6O4J6jSoE3B592QanSG9aDDKfX8oeadvC0YlRosrNZrJeFp1u67S
VI+N3ANkT0SPf9ssuh16W0Xu0mQzqpEg4q0424U1iq6pMSLeedmQJpq5ZETu
EtW3uzVHB0n3rhyyGYZRp9FojFUqd/QX77lvqm0nsHv/3PqNNytcZmdn8z7x
SFwT7Z6UW2InuGTOzFCvmYwn6fYnTv8g+7uhNDWjlGIjdx/wCdS7AKHlbSF3
Fad+MZbviXK8ofQ0PmVJHSn1YjlXB0uQ1Evnvh7qdY50774hm2GYRKytrdH8
fbA8sq6vsOfgsZge4NDRU3duLhVL5fHx8VarlfeJ3yRYSeSgaJeTOS2cj1HN
qddMxpPOVksyucbcezZyl4Gk0avbtbwtssIUGzzy4YP/hdaoIlwhOzWmtZBc
tJZkHorliQPyr1xY2KI7jolkqHUAnaQL84uOHrIZhtGCKHUpbC1TP0BT+ODq
27Pn3to5tZf+t3+gVK1WFxc1L5enQ5SSyeOLg6Jdrnez41dgNMdDr5mMQKNu
x0J/dm98NnKXSZRDnuJtM04HMMlSeeTjXwzh2laNI86v1/PcZpJ5EMubt8oW
W3rtatMhS/c9R74t3wKxGJFX6YGPDh2yGYbRSKPRoH6gPDxyR3+xvzBUu/f+
3fvnHjnSoD+pWxgoVdZvLGwtDdFr6vW6I9sli0Vt5FdQvwrRTn/Jd1MPgFoz
a5uYG62p1GsmI9Co2zW6wbORuwxcCvWuPujS7chvUYkSow2HCkVq2OK+q2wM
hKySlOcdRlJHSr3Yd5JHnMER+6Yo6S7amJ01UxU6cchmGEYvy8vLk5OTlUqV
HvZNW0rUG9BsfQP1CQM3F9pGRisTExPubLhGAz22QKWulfpSxKlIuDpiA4LN
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
1bN4zO907zFnGIZhGEaRVqs1Pj5e3Fa+c3NJBN9idh4vDn1k05abO49fvHjR
wrn99O+u+ESOhQQM+lCSfyT5xARBqLLP3NpJJyr/wRAwck8dELaPmNfYrB32
pApTah5011DV65te4WU0+yNhP/v4t3yneuV//muK1Zx46e7bTUneq9Rm3pfL
jznDMAzDMIrU6/XhkbF1fYXZ+nzbzccff/IsvbJUHiYNYMFaGY6INkWOvJsk
/YWE6IGv+jeysZOrAyN3a3bo2YFliuXPFcp59vFvfvHE96LyxqHbxfHA4TP7
jr744Pw5OmcI73RZSTHS3XcOwamonZJnlx9zhmEYhmEUoaF5oLh9cGxH29Fc
HDun9vZt3lar1S5ftpF37bPOsyOYg0HRXLQWpi2GfAJNYE23/+yX/0KfJQ6a
zX1h4eXgPqG+WZ5PtwePLIb5UdLd53Lj25jA2s5Hjj/mDMMwDMO0pdVq0dBM
A/SumYcUB/QDcyfWbyxUq1U7G6MgdXnaYnL79fc/iBd4vuQHcyDl4yd/+0/4
IWk/+Z/54ksOxwnjEtEcx5DPIT4r6gjufBT/+oxXNVS6B1OG5BR3OxtUuf+Y
MwzDMAzTlqWlJRqa1/UV9j/6hOKAfuy5V+j1I6NjCwsLFs4Q5ZnTdt0F5Wz2
4GEt+g1DG7jWk2gn4eeOrzvdoM9/5TsvLv1UFHuilJhELJ28uIyGbhxNGYIx
dvkIquKYFwd3FE1BqHT3rc7Iqzl2CiXcf8wZhmEYhmlLs9kcGa3QAP3Y8dOK
A/qply7R6wfLI9bsJiCEbDq3R7nH20kCkYE0JZlK2lhcDcsG6fHgBh1+6sKR
515/7OlX6199ae/8eVyuFBsbKfKTv/0nXbpdl4QOSndfu0WKu7X1o454zBmG
YRiGiefSpUu1Wm1Df1GlWk0c8yfP3wrEVRqNhp2TPHPhHaFzbDq3e9Ehd8sm
hzByP/nNt4Q7uv1ziAdnaFoShxKTLROc3RgNtgOfdPedBlLcrU2+OuIxZxiG
YRgmntXVVRrQ+wdK907uVhzQ9xw8RgKAfmtpyZLqELkilp3bveiQu2nNTF/z
zXd/QZMUcfzlT3/5heMvHfzaK1OHz+Ac6GoYPYdECF/0mIOUqrlPj8mWCQrj
KNcX7YXGsnQPNl3hlmltR62OeMwZhmEYhmnL5ORkcVu5vzB08uwbKqvnQ3dP
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
AAAAAAAAAAAAAAAAwKMD5p/LYw==
    "], {{0, 0}, {360., 359.28}}, {0, 255},
    ColorFunction->RGBColor], {
    {RGBColor[0, 0, 1], Opacity[0.25], EdgeForm[{GrayLevel[0], Thickness[
     0.001]}], DiskBox[{180, 180}, 40], 
     {RGBColor[1, 0, 0], Opacity[0.25], DiskBox[{180, 180}, 90]}, 
     {RGBColor[0, 1, 0], Opacity[0.25], DiskBox[{180, 180}, 175]}}}},
  ImageSize->{360., 359.28},
  PlotRange->{{0, 360.}, {0, 359.28}}]], "Output",
 CellChangeTimes->{{3.7081949127558746`*^9, 3.708194921969406*^9}, {
  3.7081953898627205`*^9, 3.7081954740703487`*^9}, {3.7081958442754917`*^9, 
  3.7081958572336674`*^9}, {3.7081958893624053`*^9, 
  3.708195971932886*^9}},ExpressionUUID->"83d9ee07-7e23-464f-a39e-\
9b97d0dfa567"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"img2", "=", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"EdgeForm", "[", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], "]"}], ",", "Red", 
      ",", 
      RowBox[{"Opacity", "[", "0.25", "]"}], ",", 
      RowBox[{"Disk", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"50", ",", "50"}], "}"}], ",", "10"}], "]"}]}], "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7081951308212833`*^9, 3.7081952106067944`*^9}, {
  3.7081952535271854`*^9, 3.708195264530963*^9}, {3.70819538041403*^9, 
  3.708195417186068*^9}},ExpressionUUID->"67b64aa4-9dac-4156-b15d-\
c3f3e1b485c5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"Flatten", "@", 
    RowBox[{"{", 
     RowBox[{"intofil", ",", "filtocor"}], "}"}]}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"\"\<Name\>\"", ",", "Tooltip"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7081858912799788`*^9, 3.7081858929051285`*^9}, {
  3.7081865037256517`*^9, 
  3.708186540380607*^9}},ExpressionUUID->"f34456aa-a598-4a00-8338-\
50e044fde21f"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Fold[Permute,{a,b},{{1,2},{2,1}}]", "FoldPermute,{a,b},{{1,2},{2,1}}]",
        "Fold[Permute,a,b},{{1,2},{2,1}}]", 
       "Fold[Permute,{ab},{{1,2},{2,1}}]", "Fold[Permute,{a,b,{{1,2},{2,1}}]",
        "Fold[Permute,{a,b}{{1,2},{2,1}}]", 
       "Fold[Permute,{a,b},{1,2},{2,1}}]", "Fold[Permute,{a,b},{{,2},{2,1}}]",
        "Fold[Permute,{a,b},{{12},{2,1}}]", 
       "Fold[Permute,{a,b},{{1,},{2,1}}]", "Fold[Permute,{a,b},{{1,2,{2,1}}]",
        "Fold[Permute,{a,b},{{1,2}{2,1}}]", 
       "Fold[Permute,{a,b},{{1,2},2,1}}]", "Fold[Permute,{a,b},{{1,2},{,1}}]",
        "Fold[Permute,{a,b},{{1,2},{21}}]", 
       "Fold[Permute,{a,b},{{1,2},{2,}}]", "Fold[Permute,{a,b},{{1,2},{2,1}]",
        "Fold[Permute,{a,b},{{1,2},{2,1}}", 
       TextCell[
        Row[{"F", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "oldPermute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fo", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "ldPermute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fol", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "dPermute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldP", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "ermute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPe", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "rmute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPer", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "mute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPerm", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "ute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPermu", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "te,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPermut", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "e,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPermute", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,a", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{ab},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{ab},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{ab},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "b,{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b}{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b}{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b}{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "{a,b},{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "a,b},{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",b},{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{12},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{12},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{12},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{1,},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{1,2}{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2}{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2}{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2},2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2},2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},2,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},2,1", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{1,2},{,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2},{,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2},{,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{1,2},{21}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2},{21}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2},{21}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{1,2},{2,}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2},{2,}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2},{2,}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},{", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,1}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},{2,1", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},{2,1}", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},{2,1}}", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]}, {{{1, 2}, {1, 
       3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 7}, {1, 8}, {1, 9}, {1, 10}, {
       1, 11}, {1, 12}, {1, 13}, {1, 14}, {1, 15}, {1, 16}, {1, 17}, {1, 
       17}, {1, 18}, {2, 19}, {2, 20}, {2, 21}, {2, 22}, {2, 23}, {2, 24}, {2,
        25}, {2, 26}, {2, 27}, {2, 28}, {2, 29}, {3, 30}, {3, 31}, {3, 32}, {
       3, 33}, {4, 34}, {4, 35}, {4, 36}, {5, 37}, {5, 38}, {6, 39}, {6, 
       40}, {6, 41}, {7, 42}, {7, 43}, {7, 44}, {7, 45}, {7, 46}, {7, 47}, {7,
        48}, {7, 42}, {7, 43}, {7, 44}, {7, 45}, {7, 46}, {7, 47}, {7, 48}, {
       8, 49}, {8, 50}, {8, 51}, {9, 52}, {9, 53}, {9, 54}, {10, 55}, {10, 
       56}, {10, 57}, {11, 58}, {12, 59}, {12, 60}, {12, 61}, {13, 62}, {13, 
       63}, {13, 64}, {13, 65}, {13, 66}, {14, 67}, {14, 68}, {14, 69}, {15, 
       70}, {15, 71}, {15, 72}, {16, 73}, {16, 74}, {16, 75}, {17, 76}, {17, 
       77}, {17, 78}, {17, 76}, {17, 77}, {17, 78}, {18, 79}}, Null}, {
      VertexLabels -> {
         Placed["Name", Tooltip]}}]]}, 
    TagBox[GraphicsGroupBox[{{{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.0202865640651874], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           4.979073546299636, 2.6700007401421666`}}, 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           1.2028022878513804`, 1.1733778686972671`}}, 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           1.221433220769156, 1.8588240629247683`}}, 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           2.3836219651702417`, 3.1202567162241346`}}, 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           1.9238357207022847`, 1.1316891493720413`}}, 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.455156498282025, 2.465557797635123}, {
           2.033138837114058, 3.5523295353927797`}, {2.3385697762162585`, 
           4.677444488529635}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.455156498282025, 2.465557797635123}, {
           2.7605874373842236`, 3.590672750772019}, {2.3385697762162585`, 
           4.677444488529635}}], 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           3.087882858720395, 3.7004885810098735`}}, 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           2.9364155786224764`, 1.187940569619117}}, 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           0.9241809792080413, 2.3232433538127535`}}, 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           2.9808398544298615`, 2.0650433341332257`}}, 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           1.216002063254127, 3.3639882109818604`}}, 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           3.771110903550237, 1.131226157779968}}, 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           3.4771193141755603`, 3.2181843037690454`}}, 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           2.4373261821882592`, 0.9284671675389724}}, 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           1.6992998338388494`, 3.678115884215651}}, 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.455156498282025, 2.465557797635123}, {
           1.686094421737915, 2.4267467800642364`}, {1.0441253130519672`, 
           2.8519978072898646`}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.455156498282025, 2.465557797635123}, {
           1.8131873895960713`, 2.890808824861739}, {1.0441253130519672`, 
           2.8519978072898646`}}], 0.04810696373613041], 
          ArrowBox[{{2.455156498282025, 2.465557797635123}, {
           3.1315731498624393`, 2.5067351094718267`}}, 0.04810696373613041], 
          ArrowBox[{{4.979073546299636, 2.6700007401421666`}, {
           5.640633411257147, 2.762914115981149}}, 0.04810696373613041], 
          ArrowBox[{{4.979073546299636, 2.6700007401421666`}, {
           5.371226194043853, 3.346036224186691}}, 0.04810696373613041], 
          ArrowBox[{{4.979073546299636, 2.6700007401421666`}, {
           5.838289960034524, 2.348309740703028}}, 0.04810696373613041], 
          ArrowBox[{{4.979073546299636, 2.6700007401421666`}, {
           5.680226940360697, 2.1342689552802425`}}, 0.04810696373613041], 
          ArrowBox[{{4.979073546299636, 2.6700007401421666`}, {
           5.398543796744468, 2.1003298752449537`}}, 0.04810696373613041], 
          ArrowBox[{{4.979073546299636, 2.6700007401421666`}, {
           5.506796705270757, 2.4390807894383024`}}, 0.04810696373613041], 
          ArrowBox[{{4.979073546299636, 2.6700007401421666`}, {
           5.667964239795078, 3.278813431980084}}, 0.04810696373613041], 
          ArrowBox[{{4.979073546299636, 2.6700007401421666`}, {
           5.928426763342836, 2.837084907301009}}, 0.04810696373613041], 
          ArrowBox[{{4.979073546299636, 2.6700007401421666`}, {
           5.906006816969359, 2.5835042313035808`}}, 0.04810696373613041], 
          ArrowBox[{{4.979073546299636, 2.6700007401421666`}, {
           5.8001877831214514`, 3.0615531744247897`}}, 0.04810696373613041], 
          ArrowBox[{{4.979073546299636, 2.6700007401421666`}, {
           5.434227252634811, 3.0361846752324553`}}, 0.04810696373613041], 
          ArrowBox[{{1.2028022878513804`, 1.1733778686972671`}, {
           0.5092286598633953, 0.5245868351498157}}, 0.04810696373613041], 
          ArrowBox[{{1.2028022878513804`, 1.1733778686972671`}, {
           0.7195432169346963, 0.6351405099648759}}, 0.04810696373613041], 
          ArrowBox[{{1.2028022878513804`, 1.1733778686972671`}, {
           0.8298008290550969, 0.37136949549888554`}}, 0.04810696373613041], 
          ArrowBox[{{1.2028022878513804`, 1.1733778686972671`}, {
           0.41767353667152607`, 0.816663034004635}}, 0.04810696373613041], 
          ArrowBox[{{1.221433220769156, 1.8588240629247683`}, {
           0.6955750922112522, 1.3808010304209526`}}, 0.04810696373613041], 
          ArrowBox[{{1.221433220769156, 1.8588240629247683`}, {
           0.573385676523813, 1.7286973574877007`}}, 0.04810696373613041], 
          ArrowBox[{{1.221433220769156, 1.8588240629247683`}, {
           0.41137859551038014`, 1.5260687599592682`}}, 0.04810696373613041], 
          ArrowBox[{{2.3836219651702417`, 3.1202567162241346`}, {
           2.4454267736919717`, 3.6700895166155596`}}, 0.04810696373613041], 
          ArrowBox[{{2.3836219651702417`, 3.1202567162241346`}, {
           2.0910391561625468`, 3.397685521272157}}, 0.04810696373613041], 
          ArrowBox[{{1.9238357207022847`, 1.1316891493720413`}, {
           1.6006885212902706`, 0.28850519860509527`}}, 0.04810696373613041], 
          ArrowBox[{{1.9238357207022847`, 1.1316891493720413`}, {
           1.8368725649677464`, 0.4107007364119162}}, 0.04810696373613041], 
          ArrowBox[{{1.9238357207022847`, 1.1316891493720413`}, {
           1.504445542094924, 0.559901887051679}}, 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           2.197819658060222, 5.151276613167185}, {2.365794107939095, 
           5.616155158857377}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           2.5065442260951323`, 5.142323034251151}, {2.365794107939095, 
           5.616155158857377}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           1.9547654619313615`, 4.925557329009747}, {1.793154377287892, 
           5.353047200897608}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           2.1769586915728105`, 5.104934360409412}, {1.793154377287892, 
           5.353047200897608}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           2.06586745769551, 5.093476697268827}, {2.0933404743354584`, 
           5.590160285261039}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           2.3660427928562022`, 5.1741280765177535`}, {2.0933404743354584`, 
           5.590160285261039}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           2.3490120853997554`, 5.1556763899346185`}, {2.6412760133050144`, 
           5.534353811642646}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           2.6308337041215255`, 5.056121910273459}, {2.6412760133050144`, 
           5.534353811642646}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           2.2581657908627872`, 5.016585519375013}, {2.39475866289331, 
           5.3372470651451245`}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           2.475162648246782, 4.998106034364183}, {2.39475866289331, 
           5.3372470651451245`}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           2.4591125675069327`, 5.070726199873615}, {2.789560938747385, 
           5.315685263840761}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           2.6690181474567107`, 4.922403552412656}, {2.789560938747385, 
           5.315685263840761}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           2.081037507057497, 4.953370133958691}, {2.0375573350369147`, 
           5.328293200922742}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{2.3385697762162585`, 4.677444488529635}, {
           2.2950896041956765`, 5.052367555437559}, {2.0375573350369147`, 
           5.328293200922742}}], 0.04810696373613041], 
          ArrowBox[{{3.087882858720395, 3.7004885810098735`}, {
           3.449457273311835, 4.447244355353284}}, 0.04810696373613041], 
          ArrowBox[{{3.087882858720395, 3.7004885810098735`}, {
           3.6156244554055736`, 4.2445021327199965`}}, 0.04810696373613041], 
          ArrowBox[{{3.087882858720395, 3.7004885810098735`}, {
           3.1777115046192996`, 4.35993218130929}}, 0.04810696373613041], 
          ArrowBox[{{2.9364155786224764`, 1.187940569619117}, {
           3.219616937505344, 0.3729283554982521}}, 0.04810696373613041], 
          ArrowBox[{{2.9364155786224764`, 1.187940569619117}, {
           3.345640463567641, 0.6348126183634875}}, 0.04810696373613041], 
          ArrowBox[{{2.9364155786224764`, 1.187940569619117}, {
           2.9851851145685098`, 0.5089935044022007}}, 0.04810696373613041], 
          ArrowBox[{{0.9241809792080413, 2.3232433538127535`}, {
           0.1712572185376966, 2.44116937526593}}, 0.04810696373613041], 
          ArrowBox[{{0.9241809792080413, 2.3232433538127535`}, {
           0.1572705533915908, 2.059377711473984}}, 0.04810696373613041], 
          ArrowBox[{{0.9241809792080413, 2.3232433538127535`}, {0., 
           2.2621963243544023`}}, 0.04810696373613041], 
          ArrowBox[{{2.9808398544298615`, 2.0650433341332257`}, {
           3.4847059664717683`, 1.8171168176954207`}}, 0.04810696373613041], 
          ArrowBox[{{1.216002063254127, 3.3639882109818604`}, {
           0.5121784322069138, 3.6742679634998385`}}, 0.04810696373613041], 
          ArrowBox[{{1.216002063254127, 3.3639882109818604`}, {
           0.4633580555129799, 3.9225974709307128`}}, 0.04810696373613041], 
          ArrowBox[{{1.216002063254127, 3.3639882109818604`}, {
           0.7137671125742844, 3.962867669881536}}, 0.04810696373613041], 
          ArrowBox[{{3.771110903550237, 1.131226157779968}, {
           4.241021330681377, 0.6312298548488304}}, 0.04810696373613041], 
          ArrowBox[{{3.771110903550237, 1.131226157779968}, {
           4.517047187182023, 0.631422856049173}}, 0.04810696373613041], 
          ArrowBox[{{3.771110903550237, 1.131226157779968}, {4.4642164264297, 
           0.9287114965136622}}, 0.04810696373613041], 
          ArrowBox[{{3.771110903550237, 1.131226157779968}, {
           4.287512292560503, 0.36738193548106235`}}, 0.04810696373613041], 
          ArrowBox[{{3.771110903550237, 1.131226157779968}, {
           4.007766143329869, 0.3451714478162935}}, 0.04810696373613041], 
          ArrowBox[{{3.4771193141755603`, 3.2181843037690454`}, {
           3.8510364783341773`, 3.7884472078396985`}}, 0.04810696373613041], 
          ArrowBox[{{3.4771193141755603`, 3.2181843037690454`}, {
           4.08325133714783, 3.3670025632562113`}}, 0.04810696373613041], 
          ArrowBox[{{3.4771193141755603`, 3.2181843037690454`}, {
           4.100051320509163, 3.6747104233169496`}}, 0.04810696373613041], 
          ArrowBox[{{2.4373261821882592`, 0.9284671675389724}, {
           2.6326423552578073`, 0.14187404814464388`}}, 0.04810696373613041], 
          ArrowBox[{{2.4373261821882592`, 0.9284671675389724}, {
           2.41462161781355, 0.}}, 0.04810696373613041], 
          ArrowBox[{{2.4373261821882592`, 0.9284671675389724}, {
           2.2575332553782053`, 0.1826564534690469}}, 0.04810696373613041], 
          ArrowBox[{{1.6992998338388494`, 3.678115884215651}, {
           1.2321991687914244`, 4.417428017141436}}, 0.04810696373613041], 
          ArrowBox[{{1.6992998338388494`, 3.678115884215651}, {
           1.1700021080332783`, 4.157270071165028}}, 0.04810696373613041], 
          ArrowBox[{{1.6992998338388494`, 3.678115884215651}, {
           1.5122142000300316`, 4.36600692611143}}, 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{1.0441253130519672`, 
           2.8519978072898646`}, {0.5678346067668056, 2.8154767861815913`}, {
           0.16284380873641568`, 3.068792943155376}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{1.0441253130519672`, 
           2.8519978072898646`}, {0.6391345150215758, 3.1053139642736145`}, {
           0.16284380873641568`, 3.068792943155376}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{1.0441253130519672`, 
           2.8519978072898646`}, {0.6451256431121782, 2.9467347571554967`}, {
           0.3802474757594232, 3.2598088422205027`}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{1.0441253130519672`, 
           2.8519978072898646`}, {0.7792471456992139, 3.1650718923609302`}, {
           0.3802474757594232, 3.2598088422205027`}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{1.0441253130519672`, 
           2.8519978072898646`}, {0.6878166508832357, 2.7623599519353745`}, {
           0.3478579210011117, 2.9017115569737726`}}], 0.04810696373613041], 
          ArrowBox[BezierCurveBox[{{1.0441253130519672`, 
           2.8519978072898646`}, {0.7041665831698414, 2.9913494123151647`}, {
           0.3478579210011117, 2.9017115569737726`}}], 0.04810696373613041], 
          ArrowBox[{{3.1315731498624393`, 2.5067351094718267`}, {
           3.700718162366088, 2.501039166386201}}, 0.04810696373613041]}}}, {{
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.455156498282025, 2.465557797635123}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b},{{1,2},{2,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b},{{1,2},{2,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{4.979073546299636, 2.6700007401421666}, 
             0.04810696373613041],
            "\"FoldPermute,{a,b},{{1,2},{2,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "FoldPermute,{a,b},{{1,2},{2,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{1.2028022878513804, 1.1733778686972671}, 
             0.04810696373613041],
            "\"Fold[Permute,a,b},{{1,2},{2,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,a,b},{{1,2},{2,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{1.221433220769156, 1.8588240629247683}, 
             0.04810696373613041],
            "\"Fold[Permute,{ab},{{1,2},{2,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{ab},{{1,2},{2,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.3836219651702417, 3.1202567162241346}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b,{{1,2},{2,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b,{{1,2},{2,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{1.9238357207022847, 1.1316891493720413}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b}{{1,2},{2,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b}{{1,2},{2,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.3385697762162585, 4.677444488529635}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b},{1,2},{2,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b},{1,2},{2,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{3.087882858720395, 3.7004885810098735}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b},{{,2},{2,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b},{{,2},{2,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.9364155786224764, 1.187940569619117}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b},{{12},{2,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b},{{12},{2,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.9241809792080413, 2.3232433538127535}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b},{{1,},{2,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b},{{1,},{2,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.9808398544298615, 2.0650433341332257}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b},{{1,2,{2,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b},{{1,2,{2,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{1.216002063254127, 3.3639882109818604}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b},{{1,2}{2,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b},{{1,2}{2,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{3.771110903550237, 1.131226157779968}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b},{{1,2},2,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b},{{1,2},2,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{3.4771193141755603, 3.2181843037690454}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b},{{1,2},{,1}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b},{{1,2},{,1}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.4373261821882592, 0.9284671675389724}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b},{{1,2},{21}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b},{{1,2},{21}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{1.6992998338388494, 3.678115884215651}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b},{{1,2},{2,}}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b},{{1,2},{2,}}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{1.0441253130519672, 2.8519978072898646}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b},{{1,2},{2,1}]\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b},{{1,2},{2,1}]", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{3.1315731498624393, 2.5067351094718267}, 
             0.04810696373613041],
            "\"Fold[Permute,{a,b},{{1,2},{2,1}}\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "Fold[Permute,{a,b},{{1,2},{2,1}}", "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{5.640633411257147, 2.762914115981149}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"F", 
                StyleBox["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "oldPermute,{a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"F", 
                Style["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "oldPermute,{a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"F", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "oldPermute,{a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{5.371226194043853, 3.346036224186691}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fo", 
                StyleBox["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "ldPermute,{a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fo", 
                Style["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "ldPermute,{a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fo", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ldPermute,{a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{5.838289960034524, 2.348309740703028}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fol", 
                StyleBox["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "dPermute,{a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fol", 
                Style["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "dPermute,{a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fol", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "dPermute,{a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{5.680226940360697, 2.1342689552802425}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold", 
                StyleBox["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "Permute,{a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold", 
                Style["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "Permute,{a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{5.398543796744468, 2.1003298752449537}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"FoldP", 
                StyleBox["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "ermute,{a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"FoldP", 
                Style["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "ermute,{a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"FoldP", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ermute,{a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{5.506796705270757, 2.4390807894383024}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"FoldPe", 
                StyleBox["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "rmute,{a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"FoldPe", 
                Style["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "rmute,{a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"FoldPe", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "rmute,{a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{5.667964239795078, 3.278813431980084}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"FoldPer", 
                StyleBox["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "mute,{a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"FoldPer", 
                Style["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "mute,{a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"FoldPer", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "mute,{a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{5.928426763342836, 2.837084907301009}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"FoldPerm", 
                StyleBox["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "ute,{a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"FoldPerm", 
                Style["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "ute,{a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"FoldPerm", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ute,{a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{5.906006816969359, 2.5835042313035808}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"FoldPermu", 
                StyleBox["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "te,{a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"FoldPermu", 
                Style["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "te,{a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"FoldPermu", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "te,{a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{5.8001877831214514, 3.0615531744247897}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"FoldPermut", 
                StyleBox["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "e,{a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"FoldPermut", 
                Style["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "e,{a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"FoldPermut", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "e,{a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{5.434227252634811, 3.0361846752324553}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"FoldPermute", 
                StyleBox["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"FoldPermute", 
                Style["[", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",{a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"FoldPermute", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.5092286598633953, 0.5245868351498157}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "Permute,a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "Permute,a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.7195432169346963, 0.6351405099648759}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.8298008290550969, 0.37136949549888554}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "a,b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute,", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "a,b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "a,b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.41767353667152607, 0.816663034004635}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,a", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",b},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute,a", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",b},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,a", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",b},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.6955750922112522, 1.3808010304209526}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "[Permute,{ab},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "[Permute,{ab},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{ab},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.573385676523813, 1.7286973574877007}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "Permute,{ab},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "Permute,{ab},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{ab},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.41137859551038014, 1.5260687599592682}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{ab},{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",{ab},{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{ab},{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.4454267736919717, 3.6700895166155596}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{a,", 
                StyleBox["}", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "b,{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute,{a,", 
                Style["}", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "b,{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{a,", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "b,{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.0910391561625468, 3.397685521272157}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{a,b", 
                StyleBox["}", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute,{a,b", 
                Style["}", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{a,b", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{1.6006885212902706, 0.28850519860509527}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "[Permute,{a,b}{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "[Permute,{a,b}{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{a,b}{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{1.8368725649677464, 0.4107007364119162}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "Permute,{a,b}{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "Permute,{a,b}{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b}{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{1.504445542094924, 0.559901887051679}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{a,b}{{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",{a,b}{{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b}{{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.365794107939095, 5.616155158857377}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "Permute,{a,b},{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "Permute,{a,b},{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{1.793154377287892, 5.353047200897608}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{a,b},{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",{a,b},{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b},{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.0933404743354584, 5.590160285261039}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "{a,b},{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute,", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "{a,b},{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "{a,b},{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.6412760133050144, 5.534353811642646}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "a,b},{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute,{", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "a,b},{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "a,b},{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.39475866289331, 5.3372470651451245}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{a", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",b},{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute,{a", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",b},{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{a", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",b},{1,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.789560938747385, 5.315685263840761}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{a,b},", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "{1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute,{a,b},", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "{1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{a,b},", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "{1,2},{2,1}}]"}]], 
            "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.0375573350369147, 5.328293200922742}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{a,b},{", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "1,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute,{a,b},{", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], "1,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{a,b},{", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "1,2},{2,1}}]"}]], 
            "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{3.449457273311835, 4.447244355353284}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "[Permute,{a,b},{{,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "[Permute,{a,b},{{,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{a,b},{{,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{3.6156244554055736, 4.2445021327199965}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "Permute,{a,b},{{,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "Permute,{a,b},{{,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{3.1777115046192996, 4.35993218130929}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{a,b},{{,2},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",{a,b},{{,2},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b},{{,2},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{3.219616937505344, 0.3729283554982521}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "[Permute,{a,b},{{12},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "[Permute,{a,b},{{12},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{a,b},{{12},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{3.345640463567641, 0.6348126183634875}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "Permute,{a,b},{{12},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "Permute,{a,b},{{12},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{12},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.9851851145685098, 0.5089935044022007}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{a,b},{{12},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",{a,b},{{12},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b},{{12},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.1712572185376966, 2.44116937526593}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "[Permute,{a,b},{{1,},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "[Permute,{a,b},{{1,},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{a,b},{{1,},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.1572705533915908, 2.059377711473984}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "Permute,{a,b},{{1,},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "Permute,{a,b},{{1,},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{1,},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           TooltipBox[DiskBox[{0., 2.2621963243544023}, 0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{a,b},{{1,},{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",{a,b},{{1,},{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b},{{1,},{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{3.4847059664717683, 1.8171168176954207}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{a,b},{{1,2", 
                StyleBox["}", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute,{a,b},{{1,2", 
                Style["}", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{2,1}}]"}]], 
            "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.5121784322069138, 3.6742679634998385}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "[Permute,{a,b},{{1,2}{2,1}}]"}]], 
             TextCell[
              Row[{"Fold", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "[Permute,{a,b},{{1,2}{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{a,b},{{1,2}{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.4633580555129799, 3.9225974709307128}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "Permute,{a,b},{{1,2}{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "Permute,{a,b},{{1,2}{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{1,2}{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.7137671125742844, 3.962867669881536}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{a,b},{{1,2}{2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",{a,b},{{1,2}{2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b},{{1,2}{2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{4.241021330681377, 0.6312298548488304}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "Permute,{a,b},{{1,2},2,1}}]"}]], 
             TextCell[
              Row[{"Fold[", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "Permute,{a,b},{{1,2},2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{1,2},2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{4.517047187182023, 0.631422856049173}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{a,b},{{1,2},2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",{a,b},{{1,2},2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b},{{1,2},2,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{4.4642164264297, 0.9287114965136622}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{a,b},{{1,2},", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "2,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute,{a,b},{{1,2},", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,1}}]"}]], 
            "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{4.287512292560503, 0.36738193548106235}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{a,b},{{1,2},2,", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute,{a,b},{{1,2},2,", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], "1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},2,", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "1}}]"}]], 
            "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{4.007766143329869, 0.3451714478162935}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{a,b},{{1,2},2,1", 
                StyleBox["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "}}]"}]], 
             TextCell[
              Row[{"Fold[Permute,{a,b},{{1,2},2,1", 
                Style["{", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], "}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},2,1", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "}}]"}]], 
            "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{3.8510364783341773, 3.7884472078396985}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "[Permute,{a,b},{{1,2},{,1}}]"}]], 
             TextCell[
              Row[{"Fold", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "[Permute,{a,b},{{1,2},{,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{a,b},{{1,2},{,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{4.08325133714783, 3.3670025632562113}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "Permute,{a,b},{{1,2},{,1}}]"}]], 
             TextCell[
              Row[{"Fold[", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "Permute,{a,b},{{1,2},{,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{1,2},{,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{4.100051320509163, 3.6747104233169496}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{a,b},{{1,2},{,1}}]"}]], 
             TextCell[
              Row[{"Fold[Permute", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",{a,b},{{1,2},{,1}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b},{{1,2},{,1}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.6326423552578073, 0.14187404814464388}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "[Permute,{a,b},{{1,2},{21}}]"}]], 
             TextCell[
              Row[{"Fold", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "[Permute,{a,b},{{1,2},{21}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{a,b},{{1,2},{21}}]"}]], "Tooltip"]& ], 
          TagBox[
           TooltipBox[DiskBox[{2.41462161781355, 0.}, 0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "Permute,{a,b},{{1,2},{21}}]"}]], 
             TextCell[
              Row[{"Fold[", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "Permute,{a,b},{{1,2},{21}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{1,2},{21}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{2.2575332553782053, 0.1826564534690469}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{a,b},{{1,2},{21}}]"}]], 
             TextCell[
              Row[{"Fold[Permute", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",{a,b},{{1,2},{21}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b},{{1,2},{21}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{1.2321991687914244, 4.417428017141436}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "[Permute,{a,b},{{1,2},{2,}}]"}]], 
             TextCell[
              Row[{"Fold", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "[Permute,{a,b},{{1,2},{2,}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{a,b},{{1,2},{2,}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{1.1700021080332783, 4.157270071165028}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "Permute,{a,b},{{1,2},{2,}}]"}]], 
             TextCell[
              Row[{"Fold[", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                "Permute,{a,b},{{1,2},{2,}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{1,2},{2,}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{1.5122142000300316, 4.36600692611143}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute", 
                StyleBox["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ",{a,b},{{1,2},{2,}}]"}]], 
             TextCell[
              Row[{"Fold[Permute", 
                Style["\[Placeholder]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], 
                ",{a,b},{{1,2},{2,}}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b},{{1,2},{2,}}]"}]], "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.16284380873641568, 3.068792943155376}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{a,b},{{1,2},{", 
                StyleBox["}", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "2,1}]"}]], 
             TextCell[
              Row[{"Fold[Permute,{a,b},{{1,2},{", 
                Style["}", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,1}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},{", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,1}]"}]], 
            "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.3802474757594232, 3.2598088422205027}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{a,b},{{1,2},{2,1", 
                StyleBox["}", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "}]"}]], 
             TextCell[
              Row[{"Fold[Permute,{a,b},{{1,2},{2,1", 
                Style["}", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], "}]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},{2,1", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "}]"}]], 
            "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{0.3478579210011117, 2.9017115569737726}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{a,b},{{1,2},{2,1}", 
                StyleBox["}", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], "]"}]], 
             TextCell[
              Row[{"Fold[Permute,{a,b},{{1,2},{2,1}", 
                Style["}", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},{2,1}", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]], 
            "Tooltip"]& ], 
          TagBox[
           
           TooltipBox[
            DiskBox[{3.700718162366088, 2.501039166386201}, 
             0.04810696373613041],
            InterpretationBox[
             Cell[
              TextData[{"Fold[Permute,{a,b},{{1,2},{2,1}}", 
                StyleBox["]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold, StripOnInput -> 
                 False], ""}]], 
             TextCell[
              Row[{"Fold[Permute,{a,b},{{1,2},{2,1}}", 
                Style["]", 
                 RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]]],
           Annotation[#, 
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},{2,1}}", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]], 
            "Tooltip"]& ]}}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{
  3.708186950623351*^9},ExpressionUUID->"da017376-32fc-437d-b9f4-\
e569cf03a6c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{
   RowBox[{"Flatten", "@", 
    RowBox[{"{", 
     RowBox[{"intofil", ",", "filtocor"}], "}"}]}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"\"\<Name\>\"", ",", "Below"}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.708184472854803*^9, 3.708184522250786*^9}, {
   3.7081846906059885`*^9, 3.7081847441679163`*^9}, {3.7081855391581855`*^9, 
   3.7081855444319315`*^9}, {3.708185606104602*^9, 3.708185606626978*^9}, 
   3.7081856376363716`*^9, 
   3.708186410838874*^9},ExpressionUUID->"dfb39628-786e-48ec-90f4-\
361c05a36fa9"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "Fold[Permute,{a,b},{{1,2},{2,1}}]", "FoldPermute,{a,b},{{1,2},{2,1}}]",
        "Fold[Permute,a,b},{{1,2},{2,1}}]", 
       "Fold[Permute,{ab},{{1,2},{2,1}}]", "Fold[Permute,{a,b,{{1,2},{2,1}}]",
        "Fold[Permute,{a,b}{{1,2},{2,1}}]", 
       "Fold[Permute,{a,b},{1,2},{2,1}}]", "Fold[Permute,{a,b},{{,2},{2,1}}]",
        "Fold[Permute,{a,b},{{12},{2,1}}]", 
       "Fold[Permute,{a,b},{{1,},{2,1}}]", "Fold[Permute,{a,b},{{1,2,{2,1}}]",
        "Fold[Permute,{a,b},{{1,2}{2,1}}]", 
       "Fold[Permute,{a,b},{{1,2},2,1}}]", "Fold[Permute,{a,b},{{1,2},{,1}}]",
        "Fold[Permute,{a,b},{{1,2},{21}}]", 
       "Fold[Permute,{a,b},{{1,2},{2,}}]", "Fold[Permute,{a,b},{{1,2},{2,1}]",
        "Fold[Permute,{a,b},{{1,2},{2,1}}", 
       TextCell[
        Row[{"F", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "oldPermute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fo", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "ldPermute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fol", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "dPermute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldP", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "ermute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPe", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "rmute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPer", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "mute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPerm", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "ute,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPermu", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "te,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"FoldPermut", 
          Style["[", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "e,{a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "a,b},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{ab},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{ab},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{ab},{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b}{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b}{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b}{{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "{a,b},{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "a,b},{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "{1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "1,2},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{12},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{12},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{12},{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{2,1}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{1,2}{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2}{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2}{2,1}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2},2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},2,", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "1}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},2,1", 
          Style["{", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "}}]"}]], 
       TextCell[
        Row[{"Fold", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "[Permute,{a,b},{{1,2},{21}}]"}]], 
       TextCell[
        Row[{"Fold[", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          "Permute,{a,b},{{1,2},{21}}]"}]], 
       TextCell[
        Row[{"Fold[Permute", 
          Style["\[Placeholder]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], 
          ",{a,b},{{1,2},{21}}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},{", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,1}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},{2,1", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "}]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},{2,1}", 
          Style["}", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]], 
       TextCell[
        Row[{"Fold[Permute,{a,b},{{1,2},{2,1}}", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]}, {{{1, 2}, {1, 
       3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 7}, {1, 8}, {1, 9}, {1, 10}, {
       1, 11}, {1, 12}, {1, 13}, {1, 14}, {1, 15}, {1, 16}, {1, 17}, {1, 
       17}, {1, 18}, {2, 19}, {2, 20}, {2, 21}, {2, 22}, {2, 23}, {2, 24}, {2,
        25}, {2, 26}, {2, 27}, {2, 28}, {3, 29}, {3, 30}, {4, 31}, {4, 32}, {
       4, 33}, {5, 34}, {6, 35}, {6, 36}, {6, 37}, {7, 38}, {7, 39}, {7, 
       40}, {7, 41}, {7, 42}, {7, 38}, {7, 39}, {7, 40}, {7, 41}, {7, 42}, {9,
        43}, {9, 44}, {9, 45}, {11, 46}, {12, 47}, {12, 48}, {12, 49}, {13, 
       50}, {13, 51}, {13, 52}, {13, 53}, {15, 54}, {15, 55}, {15, 56}, {17, 
       57}, {17, 58}, {17, 59}, {17, 57}, {17, 58}, {17, 59}, {18, 60}}, 
       Null}, {VertexLabels -> {
         Placed["Name", Below]}}]]}, 
    TagBox[GraphicsGroupBox[{{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.020389114379557115`], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          4.848579312481029, 2.4749166915978855`}}, 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          1.2299737202124439`, 2.1637882009954117`}}, 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          1.3851305898853314`, 3.56737476836895}}, 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          1.778271328228857, 2.8522650869450605`}}, 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          1.172116971109306, 1.44984960720282}}, 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.4514455904343824`, 
          2.4205007628413524`}, {2.0151069273789664`, 3.3144505301406726`}, {
          2.19456077673624, 4.292884958855038}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.4514455904343824`, 
          2.4205007628413524`}, {2.6308994397916567`, 3.3989351915523605`}, {
          2.19456077673624, 4.292884958855038}}], 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          2.639087826705379, 2.977152665622457}}, 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          3.4264005939897344`, 1.3176578878188556`}}, 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          2.244891067133515, 2.8407724680176836`}}, 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          3.229745131857085, 2.327064962923755}}, 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          2.7284280652527286`, 0.8825864195719899}}, 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          3.3340641806235354`, 3.7722277343174353`}}, 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          2.639570982637411, 1.9604839286495368`}}, 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          0.8755518665571802, 2.7327530762455052`}}, 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          2.9130360049133266`, 2.6565778148350296`}}, 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.4514455904343824`, 
          2.4205007628413524`}, {2.433450435095219, 1.5812162500296152`}, {
          1.9208011090630204`, 0.9164508872280792}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.4514455904343824`, 
          2.4205007628413524`}, {1.9387962644021808`, 1.7557354000404495`}, {
          1.9208011090630204`, 0.9164508872280792}}], 0.0476761431967728], 
         ArrowBox[{{2.4514455904343824`, 2.4205007628413524`}, {
          2.0318316079371295`, 1.791589888443387}}, 0.0476761431967728], 
         ArrowBox[{{4.848579312481029, 2.4749166915978855`}, {
          5.363936767709726, 2.174305431977584}}, 0.0476761431967728], 
         ArrowBox[{{4.848579312481029, 2.4749166915978855`}, {
          5.360384966091607, 2.795425278584819}}, 0.0476761431967728], 
         ArrowBox[{{4.848579312481029, 2.4749166915978855`}, {
          5.562056309639392, 1.8867881623033609`}}, 0.0476761431967728], 
         ArrowBox[{{4.848579312481029, 2.4749166915978855`}, {
          5.845783969481121, 2.483822899042}}, 0.0476761431967728], 
         ArrowBox[{{4.848579312481029, 2.4749166915978855`}, {
          5.738945571258128, 2.1609588941139792`}}, 0.0476761431967728], 
         ArrowBox[{{4.848579312481029, 2.4749166915978855`}, {
          5.746176961533809, 2.8291465929783244`}}, 0.0476761431967728], 
         ArrowBox[{{4.848579312481029, 2.4749166915978855`}, {
          5.175199185238807, 3.130213669358908}}, 0.0476761431967728], 
         ArrowBox[{{4.848579312481029, 2.4749166915978855`}, {
          5.518412792803819, 3.0993925768733392`}}, 0.0476761431967728], 
         ArrowBox[{{4.848579312481029, 2.4749166915978855`}, {
          5.561633019392158, 2.521566679471713}}, 0.0476761431967728], 
         ArrowBox[{{4.848579312481029, 2.4749166915978855`}, {
          5.21093381312901, 1.834250450670415}}, 0.0476761431967728], 
         ArrowBox[{{1.2299737202124439`, 2.1637882009954117`}, {
          0.43657174848899016`, 2.1341525002447956`}}, 0.0476761431967728], 
         ArrowBox[{{1.2299737202124439`, 2.1637882009954117`}, {
          0.4961660862869386, 1.835974444249926}}, 0.0476761431967728], 
         ArrowBox[{{1.3851305898853314`, 3.56737476836895}, {
          1.0196680607533617`, 4.290815660437276}}, 0.0476761431967728], 
         ArrowBox[{{1.3851305898853314`, 3.56737476836895}, {
          0.6439454456709566, 3.905011743860359}}, 0.0476761431967728], 
         ArrowBox[{{1.3851305898853314`, 3.56737476836895}, {
          0.7477931572122098, 4.178716728582527}}, 0.0476761431967728], 
         ArrowBox[{{1.778271328228857, 2.8522650869450605`}, {
          1.252344465422641, 3.1833120371210697`}}, 0.0476761431967728], 
         ArrowBox[{{1.172116971109306, 1.44984960720282}, {0.4855696890689045,
           0.9112734372533251}}, 0.0476761431967728], 
         ArrowBox[{{1.172116971109306, 1.44984960720282}, {0.7216780500914617,
           0.7479372055896032}}, 0.0476761431967728], 
         ArrowBox[{{1.172116971109306, 1.44984960720282}, {0.360537576318678, 
          1.166659373305161}}, 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.19456077673624, 4.292884958855038}, {
          1.883384451959698, 4.6453327189564835`}, {1.8421527425748712`, 
          5.113680959894557}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.19456077673624, 4.292884958855038}, {
          2.153329067351406, 4.7612331998325015`}, {1.8421527425748712`, 
          5.113680959894557}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.19456077673624, 4.292884958855038}, {
          1.8387179862203402`, 4.506211960419555}, {1.6789624796954938`, 
          4.889109700441505}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.19456077673624, 4.292884958855038}, {
          2.034805270211416, 4.675782698897754}, {1.6789624796954938`, 
          4.889109700441505}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.19456077673624, 4.292884958855038}, {
          2.0049756039678845`, 4.743537075139775}, {2.119889397279932, 
          5.218747226256809}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.19456077673624, 4.292884958855038}, {
          2.3094745700482875`, 4.768095110002202}, {2.119889397279932, 
          5.218747226256809}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.19456077673624, 4.292884958855038}, {
          2.2219565790943174`, 4.749746965880777}, {2.5151801368395574`, 
          5.101163198709843}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.19456077673624, 4.292884958855038}, {
          2.4877843344814794`, 4.644301191641711}, {2.5151801368395574`, 
          5.101163198709843}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.19456077673624, 4.292884958855038}, {
          2.1238450499106816`, 4.634391949948189}, {2.269639264887045, 
          4.951207015616376}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{2.19456077673624, 4.292884958855038}, {
          2.3403549917126076`, 4.609700024566013}, {2.269639264887045, 
          4.951207015616376}}], 0.0476761431967728], 
         ArrowBox[{{3.4264005939897344`, 1.3176578878188556`}, {
          3.694984474220088, 0.6101342356186981}}, 0.0476761431967728], 
         ArrowBox[{{3.4264005939897344`, 1.3176578878188556`}, {
          3.987280223336482, 0.651512180621409}}, 0.0476761431967728], 
         ArrowBox[{{3.4264005939897344`, 1.3176578878188556`}, {
          4.086371301607729, 0.9556405140829813}}, 0.0476761431967728], 
         ArrowBox[{{3.229745131857085, 2.327064962923755}, {
          3.8021337393505377`, 2.27646695926385}}, 0.0476761431967728], 
         ArrowBox[{{2.7284280652527286`, 0.8825864195719899}, {
          2.882538346403023, 0.}}, 0.0476761431967728], 
         ArrowBox[{{2.7284280652527286`, 0.8825864195719899}, {
          3.1249128692498105`, 0.1584234340380184}}, 0.0476761431967728], 
         ArrowBox[{{2.7284280652527286`, 0.8825864195719899}, {
          2.606577853028568, 0.08241122946755297}}, 0.0476761431967728], 
         ArrowBox[{{3.3340641806235354`, 3.7722277343174353`}, {
          3.9852023321312746`, 4.117594974403625}}, 0.0476761431967728], 
         ArrowBox[{{3.3340641806235354`, 3.7722277343174353`}, {
          3.6580940173848457`, 4.580529353035235}}, 0.0476761431967728], 
         ArrowBox[{{3.3340641806235354`, 3.7722277343174353`}, {
          3.8784730047973373`, 4.390074972338862}}, 0.0476761431967728], 
         ArrowBox[{{3.3340641806235354`, 3.7722277343174353`}, {
          3.3947812848702235`, 4.451355659915195}}, 0.0476761431967728], 
         ArrowBox[{{0.8755518665571802, 2.7327530762455052`}, {0., 
          2.90126556969364}}, 0.0476761431967728], 
         ArrowBox[{{0.8755518665571802, 2.7327530762455052`}, {
          0.02456980640031503, 2.6077572528034962`}}, 0.0476761431967728], 
         ArrowBox[{{0.8755518665571802, 2.7327530762455052`}, {
          0.15845861616227097`, 3.1557491537583875`}}, 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{1.9208011090630204`, 0.9164508872280792}, {
          2.043869854656798, 0.50282621273024}, {1.897402466399265, 
          0.09689691879723705}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{1.9208011090630204`, 0.9164508872280792}, {
          1.7743337208054881`, 0.5105215932953228}, {1.897402466399265, 
          0.09689691879723705}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{1.9208011090630204`, 0.9164508872280792}, {
          1.9054025874710534`, 0.446332911418274}, {1.6139660707580201`, 
          0.07712730153043612}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{1.9208011090630204`, 0.9164508872280792}, {
          1.6293645923499906`, 0.5472452773402338}, {1.6139660707580201`, 
          0.07712730153043612}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{1.9208011090630204`, 0.9164508872280792}, {
          1.7639972437165068`, 0.500262281248896}, {1.3907697217594115`, 
          0.25839118998777977`}}], 0.0476761431967728], 
         ArrowBox[BezierCurveBox[{{1.9208011090630204`, 0.9164508872280792}, {
          1.5475735871059226`, 0.6745797959661303}, {1.3907697217594115`, 
          0.25839118998777977`}}], 0.0476761431967728], 
         ArrowBox[{{2.0318316079371295`, 1.791589888443387}, {
          1.6675022114545934`, 1.3102590201428663`}}, 0.0476761431967728]}}, {
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
         0.7]}], {
          DiskBox[{2.4514455904343824, 2.4205007628413524}, 
           0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,{a,b},{{1,2},{2,1}}]\"\>", 
           Offset[{0, -2}, {2.4514455904343824, 2.3728246196445797}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{4.848579312481029, 2.4749166915978855}, 
           0.0476761431967728], 
          InsetBox["\<\"FoldPermute,{a,b},{{1,2},{2,1}}]\"\>", 
           Offset[{0, -2}, {4.848579312481029, 2.427240548401113}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.2299737202124439, 2.1637882009954117}, 
           0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,a,b},{{1,2},{2,1}}]\"\>", 
           Offset[{0, -2}, {1.2299737202124439, 2.116112057798639}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.3851305898853314, 3.56737476836895}, 0.0476761431967728],
           InsetBox["\<\"Fold[Permute,{ab},{{1,2},{2,1}}]\"\>", 
           Offset[{0, -2}, {1.3851305898853314, 3.519698625172177}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.778271328228857, 2.8522650869450605}, 
           0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,{a,b,{{1,2},{2,1}}]\"\>", 
           Offset[{0, -2}, {1.778271328228857, 2.804588943748288}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.172116971109306, 1.44984960720282}, 0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,{a,b}{{1,2},{2,1}}]\"\>", Offset[{0, -2},
            {1.172116971109306, 1.4021734640060473}], ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.19456077673624, 4.292884958855038}, 0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,{a,b},{1,2},{2,1}}]\"\>", 
           Offset[{0, -2}, {2.19456077673624, 4.245208815658265}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.639087826705379, 2.977152665622457}, 0.0476761431967728],
           InsetBox["\<\"Fold[Permute,{a,b},{{,2},{2,1}}]\"\>", 
           Offset[{0, -2}, {2.639087826705379, 2.9294765224256842}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.4264005939897344, 1.3176578878188556}, 
           0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,{a,b},{{12},{2,1}}]\"\>", 
           Offset[{0, -2}, {3.4264005939897344, 1.269981744622083}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.244891067133515, 2.8407724680176836}, 
           0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,{a,b},{{1,},{2,1}}]\"\>", 
           Offset[{0, -2}, {2.244891067133515, 2.793096324820911}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.229745131857085, 2.327064962923755}, 0.0476761431967728],
           InsetBox["\<\"Fold[Permute,{a,b},{{1,2,{2,1}}]\"\>", 
           Offset[{0, -2}, {3.229745131857085, 2.2793888197269823}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.7284280652527286, 0.8825864195719899}, 
           0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,{a,b},{{1,2}{2,1}}]\"\>", 
           Offset[{0, -2}, {2.7284280652527286, 0.8349102763752171}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.3340641806235354, 3.7722277343174353}, 
           0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,{a,b},{{1,2},2,1}}]\"\>", 
           Offset[{0, -2}, {3.3340641806235354, 3.7245515911206626}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.639570982637411, 1.9604839286495368}, 
           0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,{a,b},{{1,2},{,1}}]\"\>", 
           Offset[{0, -2}, {2.639570982637411, 1.912807785452764}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.8755518665571802, 2.7327530762455052}, 
           0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,{a,b},{{1,2},{21}}]\"\>", 
           Offset[{0, -2}, {0.8755518665571802, 2.6850769330487325}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.9130360049133266, 2.6565778148350296}, 
           0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,{a,b},{{1,2},{2,}}]\"\>", 
           Offset[{0, -2}, {2.9130360049133266, 2.608901671638257}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.9208011090630204, 0.9164508872280792}, 
           0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,{a,b},{{1,2},{2,1}]\"\>", 
           Offset[{0, -2}, {1.9208011090630204, 0.8687747440313064}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.0318316079371295, 1.791589888443387}, 
           0.0476761431967728], 
          InsetBox["\<\"Fold[Permute,{a,b},{{1,2},{2,1}}\"\>", 
           Offset[{0, -2}, {2.0318316079371295, 1.7439137452466142}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.363936767709726, 2.174305431977584}, 0.0476761431967728],
           InsetBox[
           InterpretationBox[Cell[TextData[{
             "F",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "oldPermute,{a,b},{{1,2},{2,1}}]"
            }],ExpressionUUID->"73949013-4b2a-4b89-b35e-82aa0f6a7a20"],
            TextCell[
             Row[{"F", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "oldPermute,{a,b},{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {5.363936767709726, 2.126629288780811}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.360384966091607, 2.795425278584819}, 0.0476761431967728],
           InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fo",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ldPermute,{a,b},{{1,2},{2,1}}]"
            }],ExpressionUUID->"de0ab31c-389c-4772-bf2b-7a4cff46c7e9"],
            TextCell[
             Row[{"Fo", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ldPermute,{a,b},{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {5.360384966091607, 2.7477491353880463}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.562056309639392, 1.8867881623033609}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fol",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "dPermute,{a,b},{{1,2},{2,1}}]"
            }],ExpressionUUID->"0505ae1e-6f74-4403-bbe1-bc844e55951f"],
            TextCell[
             Row[{"Fol", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "dPermute,{a,b},{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {5.562056309639392, 1.8391120191065882}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.845783969481121, 2.483822899042}, 0.0476761431967728], 
          InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Permute,{a,b},{{1,2},{2,1}}]"
            }],ExpressionUUID->"3193c93c-216c-4deb-8ded-40982cec5df3"],
            TextCell[
             Row[{"Fold", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {5.845783969481121, 2.436146755845227}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.738945571258128, 2.1609588941139792}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "FoldP",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ermute,{a,b},{{1,2},{2,1}}]"
            }],ExpressionUUID->"3e0247f8-eb0f-40f3-9ce2-6acd84590b91"],
            TextCell[
             Row[{"FoldP", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ermute,{a,b},{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {5.738945571258128, 2.1132827509172065}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.746176961533809, 2.8291465929783244}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "FoldPe",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "rmute,{a,b},{{1,2},{2,1}}]"
            }],ExpressionUUID->"7d9d4c6b-8f55-4e46-89f7-09ac62dbcf0c"],
            TextCell[
             Row[{"FoldPe", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "rmute,{a,b},{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {5.746176961533809, 2.7814704497815517}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.175199185238807, 3.130213669358908}, 0.0476761431967728],
           InsetBox[
           InterpretationBox[Cell[TextData[{
             "FoldPer",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "mute,{a,b},{{1,2},{2,1}}]"
            }],ExpressionUUID->"298b85bf-9c12-45d8-963b-86efa2acfd08"],
            TextCell[
             Row[{"FoldPer", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "mute,{a,b},{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {5.175199185238807, 3.0825375261621355}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.518412792803819, 3.0993925768733392}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "FoldPerm",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "ute,{a,b},{{1,2},{2,1}}]"
            }],ExpressionUUID->"dfe3183d-2e11-436b-aa1e-b60bbecdb32f"],
            TextCell[
             Row[{"FoldPerm", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "ute,{a,b},{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {5.518412792803819, 3.0517164336765665}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.561633019392158, 2.521566679471713}, 0.0476761431967728],
           InsetBox[
           InterpretationBox[Cell[TextData[{
             "FoldPermu",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "te,{a,b},{{1,2},{2,1}}]"
            }],ExpressionUUID->"6a95d656-3c17-4704-99f7-771f5403632b"],
            TextCell[
             Row[{"FoldPermu", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "te,{a,b},{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {5.561633019392158, 2.4738905362749404}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{5.21093381312901, 1.834250450670415}, 0.0476761431967728], 
          InsetBox[
           InterpretationBox[Cell[TextData[{
             "FoldPermut",
             StyleBox["[",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "e,{a,b},{{1,2},{2,1}}]"
            }],ExpressionUUID->"faaea986-5daf-4507-9b10-8a3f2584676c"],
            TextCell[
             Row[{"FoldPermut", 
               Style["[", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "e,{a,b},{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {5.21093381312901, 1.7865743074736422}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.43657174848899016, 2.1341525002447956}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Permute,a,b},{{1,2},{2,1}}]"
            }],ExpressionUUID->"10183863-2454-4254-9213-ae2191f74c02"],
            TextCell[
             Row[{"Fold[", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,a,b},{{1,2},{2,1}}]"}]]], Offset[{0, -2}, 
           {0.43657174848899016, 2.086476357048023}], ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.4961660862869386, 1.835974444249926}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "a,b},{{1,2},{2,1}}]"
            }],ExpressionUUID->"77240b6f-2cc1-4e09-82ae-1a1ccd2de92f"],
            TextCell[
             Row[{"Fold[Permute,", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "a,b},{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {0.4961660862869386, 1.7882983010531532}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.0196680607533617, 4.290815660437276}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Permute,{ab},{{1,2},{2,1}}]"
            }],ExpressionUUID->"2012d694-dee3-4355-9856-3688ef11fe83"],
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{ab},{{1,2},{2,1}}]"}]]], Offset[{0, -2}, 
           {1.0196680607533617, 4.243139517240503}], ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.6439454456709566, 3.905011743860359}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Permute,{ab},{{1,2},{2,1}}]"
            }],ExpressionUUID->"645a7b74-6a57-4d0d-ae31-f42620606350"],
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{ab},{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {0.6439454456709566, 3.8573356006635864}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.7477931572122098, 4.178716728582527}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{ab},{{1,2},{2,1}}]"
            }],ExpressionUUID->"bdda8973-a016-4e6d-b3b8-1204e6223106"],
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{ab},{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {0.7477931572122098, 4.131040585385755}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.252344465422641, 3.1833120371210697}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,{a,b",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{{1,2},{2,1}}]"
            }],ExpressionUUID->"7c7171ce-9bae-486f-a5f2-aa7bfd20ba8a"],
            TextCell[
             Row[{"Fold[Permute,{a,b", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {1.252344465422641, 3.135635893924297}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.4855696890689045, 0.9112734372533251}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Permute,{a,b}{{1,2},{2,1}}]"
            }],ExpressionUUID->"a17133b6-70b6-462b-9524-43e0ec64f3fb"],
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{a,b}{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {0.4855696890689045, 0.8635972940565523}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.7216780500914617, 0.7479372055896032}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Permute,{a,b}{{1,2},{2,1}}]"
            }],ExpressionUUID->"96a31d98-63e8-4e2d-b27d-c085f03fefdd"],
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b}{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {0.7216780500914617, 0.7002610623928304}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.360537576318678, 1.166659373305161}, 0.0476761431967728],
           InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{a,b}{{1,2},{2,1}}]"
            }],ExpressionUUID->"8ae962ad-93ce-42cc-896e-8ae36767860f"],
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b}{{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {0.360537576318678, 1.1189832301083882}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.8421527425748712, 5.113680959894557}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Permute,{a,b},{1,2},{2,1}}]"
            }],ExpressionUUID->"35ecb39b-ac0b-471d-919a-22a1856a715a"],
            TextCell[
             Row[{"Fold[", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {1.8421527425748712, 5.0660048166977845}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.6789624796954938, 4.889109700441505}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "{a,b},{1,2},{2,1}}]"
            }],ExpressionUUID->"de44c4c1-8a47-4624-b869-5351e68476b4"],
            TextCell[
             Row[{"Fold[Permute,", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "{a,b},{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {1.6789624796954938, 4.8414335572447325}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.119889397279932, 5.218747226256809}, 0.0476761431967728],
           InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,{",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "a,b},{1,2},{2,1}}]"
            }],ExpressionUUID->"905732b1-42d2-42ba-a712-788729ec9bb8"],
            TextCell[
             Row[{"Fold[Permute,{", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "a,b},{1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {2.119889397279932, 5.171071083060037}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.5151801368395574, 5.101163198709843}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,{a,b},",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "{1,2},{2,1}}]"
            }],ExpressionUUID->"20dbcb7e-9ee6-44cc-9f39-15166492719c"],
            TextCell[
             Row[{"Fold[Permute,{a,b},", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "{1,2},{2,1}}]"}]]],
            Offset[{0, -2}, {2.5151801368395574, 5.05348705551307}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.269639264887045, 4.951207015616376}, 0.0476761431967728],
           InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,{a,b},{",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "1,2},{2,1}}]"
            }],ExpressionUUID->"6dc7239b-c1a4-4efe-beca-9eaefd8301c1"],
            TextCell[
             Row[{"Fold[Permute,{a,b},{", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "1,2},{2,1}}]"}]]], 
           Offset[{0, -2}, {2.269639264887045, 4.903530872419603}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.694984474220088, 0.6101342356186981}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Permute,{a,b},{{12},{2,1}}]"
            }],ExpressionUUID->"28a189fa-4cef-43b8-bb5b-d6d931f4dcc2"],
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{a,b},{{12},{2,1}}]"}]]], 
           Offset[{0, -2}, {3.694984474220088, 0.5624580924219252}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.987280223336482, 0.651512180621409}, 0.0476761431967728],
           InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Permute,{a,b},{{12},{2,1}}]"
            }],ExpressionUUID->"547a60a9-333e-41c8-a2ca-4bd850a9b31c"],
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{12},{2,1}}]"}]]], 
           Offset[{0, -2}, {3.987280223336482, 0.6038360374246362}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{4.086371301607729, 0.9556405140829813}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{a,b},{{12},{2,1}}]"
            }],ExpressionUUID->"458cabed-9266-4879-9e3e-0697a995e88b"],
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b},{{12},{2,1}}]"}]]], 
           Offset[{0, -2}, {4.086371301607729, 0.9079643708862085}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.8021337393505377, 2.27646695926385}, 0.0476761431967728],
           InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,{a,b},{{1,2",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{2,1}}]"
            }],ExpressionUUID->"755867cd-2f23-4993-97ab-98ec06600ee0"],
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ",{2,1}}]"}]]], 
           Offset[{0, -2}, {3.8021337393505377, 2.228790816067077}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.882538346403023, 0.}, 0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Permute,{a,b},{{1,2}{2,1}}]"
            }],ExpressionUUID->"8d380c69-82c6-44a2-922b-131ce404b266"],
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{a,b},{{1,2}{2,1}}]"}]]], 
           Offset[{0, -2}, {2.882538346403023, -0.0476761431967728}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.1249128692498105, 0.1584234340380184}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Permute,{a,b},{{1,2}{2,1}}]"
            }],ExpressionUUID->"4dc82a29-bb22-4927-ae57-44d079b8fb38"],
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{1,2}{2,1}}]"}]]], 
           Offset[{0, -2}, {3.1249128692498105, 0.1107472908412456}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{2.606577853028568, 0.08241122946755297}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{a,b},{{1,2}{2,1}}]"
            }],ExpressionUUID->"478f0518-a715-4a01-a673-28ede40cbedd"],
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b},{{1,2}{2,1}}]"}]]], 
           Offset[{0, -2}, {2.606577853028568, 0.034735086270780174}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.9852023321312746, 4.117594974403625}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Permute,{a,b},{{1,2},2,1}}]"
            }],ExpressionUUID->"226f2643-e890-4f07-a68b-08290356d257"],
            TextCell[
             Row[{"Fold[", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{1,2},2,1}}]"}]]], 
           Offset[{0, -2}, {3.9852023321312746, 4.069918831206852}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.6580940173848457, 4.580529353035235}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,{a,b},{{1,2},",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "2,1}}]"
            }],ExpressionUUID->"c64c97fb-0bc2-4a2a-89a4-95a8580225d3"],
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,1}}]"}]]], 
           Offset[{0, -2}, {3.6580940173848457, 4.532853209838462}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.8784730047973373, 4.390074972338862}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,{a,b},{{1,2},2,",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "1}}]"
            }],ExpressionUUID->"722aaa56-0bf5-4440-b749-10c7f74fe5c7"],
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},2,", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "1}}]"}]]], 
           Offset[{0, -2}, {3.8784730047973373, 4.342398829142089}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{3.3947812848702235, 4.451355659915195}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,{a,b},{{1,2},2,1",
             StyleBox["{",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "}}]"
            }],ExpressionUUID->"fcfa8b27-b91d-4a75-bb8c-7dc943134354"],
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},2,1", 
               Style["{", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "}}]"}]]], 
           Offset[{0, -2}, {3.3947812848702235, 4.403679516718422}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0., 2.90126556969364}, 0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "[Permute,{a,b},{{1,2},{21}}]"
            }],ExpressionUUID->"d515e5c4-066c-47e4-98e7-864b76b6c04c"],
            TextCell[
             Row[{"Fold", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "[Permute,{a,b},{{1,2},{21}}]"}]]], 
           Offset[{0, -2}, {0., 2.853589426496867}], ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.02456980640031503, 2.6077572528034962}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "Permute,{a,b},{{1,2},{21}}]"
            }],ExpressionUUID->"3e1ffc3f-eb15-4496-96e9-57472bf105ee"],
            TextCell[
             Row[{"Fold[", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               "Permute,{a,b},{{1,2},{21}}]"}]]], 
           Offset[{0, -2}, {0.02456980640031503, 2.5600811096067235}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{0.15845861616227097, 3.1557491537583875}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute",
             StyleBox["\[Placeholder]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             ",{a,b},{{1,2},{21}}]"
            }],ExpressionUUID->"631bc4bc-571b-4189-aa74-6f3850431f34"],
            TextCell[
             Row[{"Fold[Permute", 
               Style["\[Placeholder]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], 
               ",{a,b},{{1,2},{21}}]"}]]], 
           Offset[{0, -2}, {0.15845861616227097, 3.108073010561615}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.897402466399265, 0.09689691879723705}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,{a,b},{{1,2},{",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "2,1}]"
            }],ExpressionUUID->"92f89808-570a-4984-8522-286a84ece063"],
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},{", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "2,1}]"}]]], 
           Offset[{0, -2}, {1.897402466399265, 0.049220775600464256}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.6139660707580201, 0.07712730153043612}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,{a,b},{{1,2},{2,1",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "}]"
            }],ExpressionUUID->"89f57154-7923-47f2-988e-649e57225fcc"],
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},{2,1", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "}]"}]]], 
           Offset[{0, -2}, {1.6139660707580201, 0.029451158333663324}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.3907697217594115, 0.25839118998777977}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,{a,b},{{1,2},{2,1}",
             StyleBox["}",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]],
             "]"
            }],ExpressionUUID->"52331acf-a955-4501-ab17-df4b5825d853"],
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},{2,1}", 
               Style["}", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], "]"}]]], 
           Offset[{0, -2}, {1.3907697217594115, 0.21071504679100697}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}, {
          DiskBox[{1.6675022114545934, 1.3102590201428663}, 
           0.0476761431967728], InsetBox[
           InterpretationBox[Cell[TextData[{
             "Fold[Permute,{a,b},{{1,2},{2,1}}",
             StyleBox["]",
              StripOnInput->False,
              LineColor->RGBColor[1, 0, 0],
              FrontFaceColor->RGBColor[1, 0, 0],
              BackFaceColor->RGBColor[1, 0, 0],
              GraphicsColor->RGBColor[1, 0, 0],
              FontSize->20,
              FontWeight->Bold,
              FontColor->RGBColor[1, 0, 0]]
            }],ExpressionUUID->"df1fa505-732c-4cc8-b285-4b321ec9b0a2"],
            TextCell[
             Row[{"Fold[Permute,{a,b},{{1,2},{2,1}}", 
               Style["]", 
                RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]], 
           Offset[{0, -2}, {1.6675022114545934, 1.2625828769460936}], 
           ImageScaled[{0.5, 1}],
           BaseStyle->"Graphics"]}}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{562.9999999999932, Automatic}]], "Output",
 CellChangeTimes->{
  3.708185544927271*^9, 3.708185606991217*^9, {3.7081856380736785`*^9, 
   3.7081856581568975`*^9}, 3.7081856934228697`*^9, 3.7081858035538406`*^9, 
   3.7081858643248854`*^9},ExpressionUUID->"91909e75-e716-4927-99d2-\
82e687800ab7"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["...", "Chapter",
 CellChangeTimes->{{3.707935095580842*^9, 
  3.7079350958285627`*^9}},ExpressionUUID->"a92b9e38-a3ad-4ac1-9be1-\
43773ef248b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ss", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"StringInsert", "[", 
     RowBox[{
     "\"\<N[N[Nest[Nest[x^2,x,6,4,3]]]\>\"", ",", "\"\<\[Placeholder]\>\"", 
      ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{
       RowBox[{
       "StringLength", "[", "\"\<N[N[Nest[Nest[x^2,x,6,4,3]]]\>\"", "]"}], 
       "+", "1"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7079359326814775`*^9, 3.7079359697010665`*^9}, 
   3.707937355509373*^9, {3.707937439570305*^9, 
   3.7079374404135857`*^9}},ExpressionUUID->"49296e24-4fca-4e40-afe3-\
9187bb3c0d36"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\[Placeholder]N[N[Nest[Nest[x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N\[Placeholder][N[Nest[Nest[x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[\[Placeholder]N[Nest[Nest[x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N\[Placeholder][Nest[Nest[x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[\[Placeholder]Nest[Nest[x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[N\[Placeholder]est[Nest[x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Ne\[Placeholder]st[Nest[x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nes\[Placeholder]t[Nest[x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest\[Placeholder][Nest[x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[\[Placeholder]Nest[x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[N\[Placeholder]est[x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[Ne\[Placeholder]st[x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nes\[Placeholder]t[x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest\[Placeholder][x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[\[Placeholder]x^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x\[Placeholder]^2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x^\[Placeholder]2,x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x^2\[Placeholder],x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x^2,\[Placeholder]x,6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x^2,x\[Placeholder],6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x^2,x,\[Placeholder]6,4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x^2,x,6\[Placeholder],4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x^2,x,6,\[Placeholder]4,3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x^2,x,6,4\[Placeholder],3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x^2,x,6,4,\[Placeholder]3]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x^2,x,6,4,3\[Placeholder]]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x^2,x,6,4,3]\[Placeholder]]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x^2,x,6,4,3]]\[Placeholder]]\"\>", 
   ",", "\<\"N[N[Nest[Nest[x^2,x,6,4,3]]]\[Placeholder]\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7079359700144463`*^9, 
  3.70793744072797*^9},ExpressionUUID->"e3bbe659-d162-40fc-bfe1-edf08717545c"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.707937536204629*^9, 
  3.707937537065364*^9}},ExpressionUUID->"acf15f22-1bee-4ac8-94d9-\
151b95493f1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"s3", "=", 
   RowBox[{"Riffle", "[", 
    RowBox[{
     RowBox[{"StringSplit", "[", 
      RowBox[{"str", ",", "s2"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Red"}], "]"}], "&"}], "/@", "s2"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s4", "=", 
   RowBox[{"TextCell", "[", 
    RowBox[{"Row", "[", "s3", "]"}], "]"}]}], ";"}]}], "Input",ExpressionUUID-\
>"90141110-d4ca-46dd-9165-cb01d5c19b12"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EvaluationNotebook", "[", "]"}]], "Input",
 CellChangeTimes->{{3.708012860704337*^9, 3.708012865017395*^9}, 
   3.7080129810962915`*^9},ExpressionUUID->"208dc65c-8f74-42ba-9f71-\
a09df700d893"],

Cell[BoxData[
 TemplateBox[{FrontEndObject[
    LinkObject["sr7a8_shm", 3, 1]],16,
   "FrontEndObject[LinkObject[\"sr7a8_shm\", 3, 1]]","16",
   "\"FinalVersion.nb\"",
   "\"C:\\\\Users\\\\Andrey.Krotkih\\\\Documents\\\\GitHub\\\\WSS2017\\\\\
FinalVersion.nb\""},
  "NotebookObject"]], "Output",
 CellChangeTimes->{{3.7080135480399714`*^9, 
  3.7080135501254296`*^9}},ExpressionUUID->"b1cde2c8-2850-4f17-9f7a-\
4b4124443e9b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{",", "\[IndentingNewLine]", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"Quiet", "[", 
    RowBox[{"ToExpression", "[", "$x", "]"}], "]"}], "]"}]}]], "Input",Express\
ionUUID->"d20e3bc4-99fa-42e1-9fb3-d532acdcfc08"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", 
  RowBox[{"\"\<f[\>\"", ",", "False", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.7080161260326385`*^9, 3.7080161382967167`*^9}, {
  3.70801619362358*^9, 3.7080161943407936`*^9}, {3.708016255654567*^9, 
  3.708016256403019*^9}, {3.708016373857154*^9, 
  3.7080163744603777`*^9}},ExpressionUUID->"b4e80211-ed95-4f09-b173-\
f02eb36b597d"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"Closing bracket missing\"\>"},
     {
      InterpretationBox[Cell[TextData[{
        "f[",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]]
       }],ExpressionUUID->"0becb6ca-ac3c-4b73-8946-4896bcf0fcab"],
       TextCell[
        Row[{"f[", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.70801613199446*^9, 3.7080161387322025`*^9}, 
   3.7080161945728445`*^9, 3.708016256776025*^9, {3.708016361817918*^9, 
   3.7080163748394113`*^9}, {3.708016490045293*^9, 3.708016513562394*^9}, 
   3.7080170765087433`*^9, 
   3.7082066027551217`*^9},ExpressionUUID->"8c60b9b9-9d75-4c19-a988-\
a39b1b9a0d32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["s1"], "Input",
 CellChangeTimes->{{3.7080163641489058`*^9, 
  3.708016364222458*^9}},ExpressionUUID->"809d7a98-5fcb-46e0-91ba-\
31ba48750368"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "\<\"]f[\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "\<\"f][\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\<\"f[]\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.708016364461131*^9, 
  3.708016377860244*^9}},ExpressionUUID->"9c204d0d-e1a4-4d3b-865d-\
bf9b3f22af58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["s2"], "Input",
 CellChangeTimes->{{3.708016258086028*^9, 3.7080162581442795`*^9}, {
  3.708016379693429*^9, 
  3.7080163798850656`*^9}},ExpressionUUID->"2d3808b0-2f23-4ed3-b309-\
2b6a2c7c78e4"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.708016258328822*^9, 
  3.7080163801327395`*^9},ExpressionUUID->"ecb5b304-5abf-433a-8bb5-\
8dca45d48c31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testAnalyser", "[", 
  RowBox[{
   RowBox[{"s1", "[", 
    RowBox[{"[", 
     RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.7080163883214827`*^9, 
  3.7080164299121323`*^9}},ExpressionUUID->"e6cbd8a3-5b34-4f4c-bc0c-\
acf7cf962a30"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.708016412113488*^9, 3.7080164302333755`*^9}, {
  3.7080164850721636`*^9, 
  3.7080165104786243`*^9}},ExpressionUUID->"859d2904-0575-4f03-8b3d-\
ab8093c841cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7080162695058517`*^9, 
  3.708016278593941*^9}},ExpressionUUID->"83162218-e7ee-4de4-9131-\
a4a13d76a576"],

Cell[CellGroupData[{

Cell[BoxData["s1"], "Input",
 CellChangeTimes->{{3.7080161411664224`*^9, 
  3.7080161412636733`*^9}},ExpressionUUID->"6c861a15-ea08-465b-aa0b-\
d0168da8908d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"1", ",", "\<\"\[Placeholder]\"\>"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7080161415435667`*^9},ExpressionUUID->"e8dea3c3-8da7-4e2a-8844-\
45b4ccb37f65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["s2"], "Input",
 CellChangeTimes->{{3.7080161580359216`*^9, 
  3.708016158115157*^9}},ExpressionUUID->"dd4439e0-fb71-4c5b-b8c7-\
01fbe330b7e1"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.708016158282078*^9},ExpressionUUID->"b3be483a-7973-4435-85d0-\
85823aa8102f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"syntaxCorrector", "[", 
  RowBox[{"\"\<F[ccccv\>\"", ",", "True", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.7080168206207714`*^9, 
  3.708016835076155*^9}},ExpressionUUID->"0ce45909-5d9b-4925-8e4e-\
9de3be07dfdd"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"Closing bracket missing\"\>"},
     {
      InterpretationBox[Cell[TextData[{
        "F[",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        "ccccv"
       }],ExpressionUUID->"3181752c-27c3-4cfc-8eab-52530fb923e0"],
       TextCell[
        Row[{"F[", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "ccccv"}]]]},
     {
      InterpretationBox[Cell[TextData[{
        "F[c",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        "cccv"
       }],ExpressionUUID->"354cfc6f-1f2a-4008-9a6b-12b2059d3c4d"],
       TextCell[
        Row[{"F[c", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "cccv"}]]]},
     {
      InterpretationBox[Cell[TextData[{
        "F[cc",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        "ccv"
       }],ExpressionUUID->"42f27193-97c2-45f4-b289-3a768513eaf5"],
       TextCell[
        Row[{"F[cc", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "ccv"}]]]},
     {
      InterpretationBox[Cell[TextData[{
        "F[ccc",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        "cv"
       }],ExpressionUUID->"f482a969-fe52-4671-a022-e916becd5bef"],
       TextCell[
        Row[{"F[ccc", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "cv"}]]]},
     {
      InterpretationBox[Cell[TextData[{
        "F[cccc",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]],
        "v"
       }],ExpressionUUID->"213ba866-a46c-48db-9672-bd2136287065"],
       TextCell[
        Row[{"F[cccc", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], "v"}]]]},
     {
      InterpretationBox[Cell[TextData[{
        "F[ccccv",
        StyleBox["]",
         StripOnInput->False,
         LineColor->RGBColor[1, 0, 0],
         FrontFaceColor->RGBColor[1, 0, 0],
         BackFaceColor->RGBColor[1, 0, 0],
         GraphicsColor->RGBColor[1, 0, 0],
         FontSize->20,
         FontWeight->Bold,
         FontColor->RGBColor[1, 0, 0]]
       }],ExpressionUUID->"3bf2f47b-06c0-45ff-b171-e01a18b27bc2"],
       TextCell[
        Row[{"F[ccccv", 
          Style["]", 
           RGBColor[1, 0, 0], FontSize -> 20, Bold], ""}]]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7080168273613195`*^9, 3.708016835435378*^9}, 
   3.7080168858595505`*^9, 3.708017080198285*^9, 
   3.708206596770681*^9},ExpressionUUID->"93b2ade7-8967-446a-8beb-\
9c3c3b19a5be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["s1"], "Input",
 CellChangeTimes->{{3.708016837720707*^9, 
  3.7080168377702417`*^9}},ExpressionUUID->"231dbda5-0c85-4cc3-bb57-\
886bd0c0f34d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "\<\"]F[ccccv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "\<\"F][ccccv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\<\"F[]ccccv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "\<\"F[c]cccv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "\<\"F[cc]ccv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "\<\"F[ccc]cv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "\<\"F[cccc]v\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "\<\"F[ccccv]\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7080168380689516`*^9},ExpressionUUID->"0f1cff4f-dead-4b73-b05c-\
d856b592e669"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["s2"], "Input",
 CellChangeTimes->{{3.7080168440166464`*^9, 
  3.708016844114215*^9}},ExpressionUUID->"c1822c20-5062-40d3-bd2f-\
8f68354d7fed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "\<\"F[]ccccv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "\<\"F[c]cccv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "\<\"F[cc]ccv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "\<\"F[ccc]cv\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "\<\"F[cccc]v\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7080168445406356`*^9},ExpressionUUID->"28384a18-97ba-4de2-a301-\
1a42f7e302d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"messagePrinter", "[", "\"\<Nest[f,x,]\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.708083187776881*^9, 
  3.7080832563245316`*^9}},ExpressionUUID->"d10971d9-9076-4eb1-9cb2-\
b67a9efba3b7"],

Cell[BoxData[
 RowBox[{"{", 
  TagBox[
   StyleBox[
    RowBox[{"Nest", "::", "intnm"}], "MessageName"],
   HoldForm], "}"}]], "Output",
 CellChangeTimes->{{3.708083221511629*^9, 
  3.708083256574519*^9}},ExpressionUUID->"3199cca2-3255-4a43-9d8e-\
fbf515c7adc9"]
}, Open  ]],

Cell[BoxData["$MessageList"], "Input",
 CellChangeTimes->{{3.70808386232246*^9, 
  3.7080838658879976`*^9}},ExpressionUUID->"ff863d2d-7fda-43b2-b108-\
b193bcc3f979"],

Cell[BoxData[
 RowBox[{"\"\<{{1,2},{a,b,c}\>\"", "\[Rule]", 
  "\"\<{{1,2},{a,b,c}}\>\""}]], "Input",
 CellChangeTimes->{{3.708093752240304*^9, 3.708093765302968*^9}, {
  3.7080948981110115`*^9, 
  3.708094916376813*^9}},ExpressionUUID->"251a2971-ea95-44ad-95f7-\
5876123ada0a"],

Cell[BoxData[
 RowBox[{"\"\<{{1,2},{a,b,c}\>\"", "\[Rule]", 
  "\"\<AASTriangle[...]\>\""}]], "Input",
 CellChangeTimes->{{3.708094986533718*^9, 
  3.7080949959244733`*^9}},ExpressionUUID->"80b4b0a7-8aba-463e-85f3-\
6724f49c8bd5"],

Cell[BoxData["\"\<{{1,2},{a,b,c}}\>\""], "Input",
 CellChangeTimes->{{3.7080950629875774`*^9, 
  3.7080950658469877`*^9}},ExpressionUUID->"cf9720cf-f09a-49e8-a7c5-\
bb11a82a6b4e"],

Cell[BoxData[
 RowBox[{"\"\<{{3,2},{a,b,c}}\>\"", "->", 
  "\"\<{{1,2},{a,b,c}}\>\""}]], "Input",
 CellChangeTimes->{{3.7080950736596146`*^9, 
  3.708095084394054*^9}},ExpressionUUID->"a4c76f21-8730-4fc7-aee5-\
977cafcfa984"],

Cell["\<\
1) NN: dataset, and architecture
2) Applications
3) reading cells\
\>", "Text",
 CellChangeTimes->{{3.708096525805199*^9, 
  3.7080965556352973`*^9}},ExpressionUUID->"84907407-da26-44f9-ab1c-\
ca49986cc935"],

Cell["\<\
A)
1) Adapting the pair of expressions for the NN.
2) We construct the neural net as follows\
\>", "Text",
 CellChangeTimes->{{3.708095901227183*^9, 3.708095961235629*^9}, {
  3.708095995602936*^9, 
  3.708095999509658*^9}},ExpressionUUID->"02bc9609-89a1-49aa-a08f-\
95cfd5c4a938"],

Cell[BoxData[
 RowBox[{"\"\<{{_,_},{_,_,_}\>\"", "\[Rule]", 
  "\"\<{{_,_},{_},_,_}\>\""}]], "Input",
 CellChangeTimes->{{3.7080959469975166`*^9, 
  3.70809595124452*^9}},ExpressionUUID->"d5c7451b-c2cf-4a8b-9af4-\
f4b83c42e446"],

Cell["3) The main program should be as follows", "Text",
 CellChangeTimes->{{3.708095964547966*^9, 
  3.7080959794715242`*^9}},ExpressionUUID->"d22f7450-9415-4ac0-b822-\
52fe81a0d697"],

Cell[BoxData[
 RowBox[{
  RowBox[{"input", ":", "\"\<{{1,2},{a,b,c}\>\""}], "\[Rule]", 
  RowBox[{
   RowBox[{"convertedInput", ":", "\"\<{{_,_},{_,_,_}\>\""}], "\[Rule]", 
   RowBox[{
    RowBox[{"resultingNN", ":", "\"\<{{_,_},{_},_,_}\>\""}], "->", 
    "\"\<{{1,2},{a},b,c}\>\""}]}]}]], "Input",
 CellChangeTimes->{{3.708095595947221*^9, 
  3.7080958703623548`*^9}},ExpressionUUID->"160be503-3442-4cb8-bf35-\
08b4f9e3fe24"],

Cell["\<\
B) OR we can try to have a better architecture for the neural net or better \
examples.\
\>", "Text",
 CellChangeTimes->{{3.7080960052747355`*^9, 
  3.7080960240420046`*^9}},ExpressionUUID->"1ea2a184-d657-4f23-ac6e-\
e8f7bf907f8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{"\"\<{{1,2},{a,b,c,de}}\>\"", ",", 
   RowBox[{"LetterCharacter", "\[RuleDelayed]", "\"\<_\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7080960434157524`*^9, 
  3.708096073961316*^9}},ExpressionUUID->"efe77cc2-8608-446d-b180-\
484776b74878"],

Cell[BoxData["\<\"{{1,2},{_,_,_,__}}\"\>"], "Output",
 CellChangeTimes->{{3.7080960684514017`*^9, 
  3.7080960741804533`*^9}},ExpressionUUID->"e7152fc3-11df-4c23-b102-\
73034bc8a92a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{"\"\<{{1,2},{a,b,c,de}}\>\"", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", ":", 
      RowBox[{"LetterCharacter", ".."}]}], "/;", 
     RowBox[{"Not", "@", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}], ",", "x"}], 
       "]"}]}]}], "\[RuleDelayed]", "\"\<_\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7080961301330276`*^9, 
  3.7080961622547464`*^9}},ExpressionUUID->"9dc4b2cf-bf85-48a4-80ce-\
99497a84c733"],

Cell[BoxData["\<\"{{1,2},{_,_,_,_}}\"\>"], "Output",
 CellChangeTimes->{
  3.708096163600711*^9},ExpressionUUID->"6257a1a0-47fb-4630-9fe3-\
124ea226802a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{"\"\<Fold[f,{1,2}]\>\"", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"x", ":", 
      RowBox[{"LetterCharacter", ".."}]}], "/;", 
     RowBox[{"MemberQ", "[", 
      RowBox[{
       RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}], ",", 
       RowBox[{"Echo", "@", "x"}]}], "]"}]}], "\[RuleDelayed]", 
    "\"\<_\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7080961732635336`*^9, {3.708096268324086*^9, 
   3.7080963006199293`*^9}},ExpressionUUID->"75d3510b-b9d5-4c33-acb4-\
a2fc2f69f9cd"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Fold\"\>"], "Echo",
 CellChangeTimes->{
  3.708096301235363*^9},ExpressionUUID->"47cdb770-332b-4ca2-b0a9-\
9e177514c765"],

Cell[BoxData["\<\"f\"\>"], "Echo",
 CellChangeTimes->{
  3.7080963012994094`*^9},ExpressionUUID->"d732b925-3693-44e7-92ee-\
2c9144444775"]
}, Open  ]],

Cell[BoxData["\<\"_[f,{1,2}]\"\>"], "Output",
 CellChangeTimes->{
  3.7080961737398877`*^9, {3.70809627024044*^9, 
   3.708096301343441*^9}},ExpressionUUID->"0d029e47-3ce2-4ddb-bcc5-\
abf54d3ccf76"]
}, Open  ]],

Cell["", "Text",ExpressionUUID->"32fc688f-3230-4e50-a2a3-c0ee3e9052c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToString", "[", "Fold", "]"}], "<>", "\"\<[\>\"", "<>", 
  RowBox[{"ToString", "[", 
   RowBox[{
    RowBox[{"SyntaxInformation", "[", "Fold", "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
  "\"\<]\>\""}]], "Input",
 CellChangeTimes->{{3.708096192586209*^9, 
  3.7080962567529035`*^9}},ExpressionUUID->"24b0ecd0-52b8-4131-a22f-\
942c7aaac88b"],

Cell[BoxData["\<\"Fold[{_, _., _.}]\"\>"], "Output",
 CellChangeTimes->{{3.708096199013765*^9, 
  3.708096257253256*^9}},ExpressionUUID->"0d4c8663-75bf-442c-8c8c-\
c22f7a6cb469"]
}, Open  ]],

Cell[BoxData["."], "Input",
 CellChangeTimes->{
  3.708096205514346*^9},ExpressionUUID->"8e0d7a63-0d20-4da8-9227-\
2a6f56ddb89e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringReplace", "[", 
  RowBox[{"\"\<Fold[f,{1,2}]\>\"", ",", 
   RowBox[{"LetterCharacter", "\[RuleDelayed]", "\"\<_\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7080960931669407`*^9, 
  3.708096109493442*^9}},ExpressionUUID->"0c4ed235-6664-4997-b456-\
edfc8365452e"],

Cell[BoxData["\<\"____[_,{1,2}]\"\>"], "Output",
 CellChangeTimes->{
  3.708096111083585*^9},ExpressionUUID->"8ed897cd-4384-4dd4-aa11-\
a3c27ee6f47a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToCharacterCode", "[", "\"\<{{3,2},{a,b,c}}\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.708095126753847*^9, 
  3.7080951341914043`*^9}},ExpressionUUID->"74d4260a-fb63-441d-be62-\
08b69a662651"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "123", ",", "123", ",", "51", ",", "44", ",", "50", ",", "125", ",", "44", 
   ",", "123", ",", "97", ",", "44", ",", "98", ",", "44", ",", "99", ",", 
   "125", ",", "125"}], "}"}]], "Output",
 CellChangeTimes->{
  3.708095135363307*^9},ExpressionUUID->"73d286d0-9456-43fe-b049-\
768b9a693855"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToCharacterCode", "[", "\"\<{{1,2},{a,b,c}}\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7080951474259634`*^9, 
  3.708095151847886*^9}},ExpressionUUID->"c4c985c1-dbfe-4e87-a4c6-\
825d37725691"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "123", ",", "123", ",", "49", ",", "44", ",", "50", ",", "125", ",", "44", 
   ",", "123", ",", "97", ",", "44", ",", "98", ",", "44", ",", "99", ",", 
   "125", ",", "125"}], "}"}]], "Output",
 CellChangeTimes->{
  3.708095152248617*^9},ExpressionUUID->"228d2f98-0b69-4a18-aedd-\
0f574413a9f9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"ListQ", "[", "result", "]"}], ",", 
   RowBox[{"(*", 
    RowBox[{"display", " ", "message"}], "*)"}], ",", "..."}], "]"}]], "Input",
 CellChangeTimes->{{3.708094001586505*^9, 
  3.708094044430722*^9}},ExpressionUUID->"51f8f90c-6860-434e-850d-\
928db1691488"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "Fbold", "]"}]], "Input",
 CellChangeTimes->{{3.7080935508789463`*^9, 
  3.708093606082651*^9}},ExpressionUUID->"fb033e4d-d92c-4cdb-b961-\
bb27e4415fad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", "InputField", "]"}]], "Input",
 CellChangeTimes->{{3.7080969121347995`*^9, 
  3.7080969139160614`*^9}},ExpressionUUID->"236244ac-aca7-45f9-9242-\
6ef408211656"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Alignment", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Background", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BaselinePosition", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"ContentPadding", "\[Rule]", "True"}], ",", 
   RowBox[{"ContinuousAction", "\[Rule]", "False"}], ",", 
   RowBox[{"DefaultBaseStyle", "\[Rule]", "\<\"InputField\"\>"}], ",", 
   RowBox[{"DefaultFieldHintStyle", "\[Rule]", "\<\"FieldHintStyle\"\>"}], 
   ",", 
   RowBox[{"Enabled", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FieldCompletionFunction", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FieldHint", "\[Rule]", "Null"}], ",", 
   RowBox[{"FieldHintStyle", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"FieldMasked", "\[Rule]", "False"}], ",", 
   RowBox[{"FieldSize", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"FrameMargins", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageMargins", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"MenuList", "\[Rule]", 
    RowBox[{"{", "}"}]}], ",", 
   RowBox[{"Method", "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.708096914216259*^9},ExpressionUUID->"97c4849f-a436-4d05-9599-\
b2e541884406"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"strspl", "=", 
  RowBox[{"StringSplit", "[", 
   RowBox[{"\"\<Nest[f,x,4]\>\"", ",", 
    RowBox[{
     RowBox[{"x", ":", "PunctuationCharacter"}], "\[RuleDelayed]", "x"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7081022079133577`*^9, 3.7081022714682617`*^9}, {
  3.708102326957451*^9, 3.7081023325414004`*^9}, {3.708102432600524*^9, 
  3.7081024370926976`*^9}},ExpressionUUID->"110356bf-1049-4bcc-bf90-\
64d474590d14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Nest\"\>", ",", "\<\"[\"\>", ",", "\<\"f\"\>", 
   ",", "\<\",\"\>", ",", "\<\"x\"\>", ",", "\<\",\"\>", ",", "\<\"4\"\>", 
   ",", "\<\"]\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.7081022528410783`*^9, 3.708102271784461*^9}, 
   3.708102333013729*^9, 
   3.7081024374839735`*^9},ExpressionUUID->"2f8f176b-a32b-410f-88cc-\
498b27b07797"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"correctSplitting", "[", "str_String", "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "=", "str"}], ",", "s1", ",", "s2", ",", 
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"str", ",", 
        RowBox[{
         RowBox[{"x", ":", "PunctuationCharacter"}], "\[RuleDelayed]", 
         "x"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "s1", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}], ",", 
            RowBox[{"s1", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"s2", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"StringDrop", "[", 
              RowBox[{
               RowBox[{"s1", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"{", "#", "}"}]}], "]"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"StringLength", "[", 
              RowBox[{"s1", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"s1", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", 
                   RowBox[{"i", "-", "1"}]}], "]"}], "]"}], ",", 
                RowBox[{"s2", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], ",", 
                RowBox[{"s1", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ";;"}], "]"}], "]"}]}], "}"}], 
              "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"StringLength", "[", 
               RowBox[{"s1", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"StringJoin", "/@", 
      RowBox[{"Flatten", "[", 
       RowBox[{"result", ",", "1"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7081027228735905`*^9, 3.708102747292841*^9}, {
   3.7081027903973103`*^9, 3.7081028190425835`*^9}, 3.708102849593113*^9, {
   3.7081031474995728`*^9, 3.708103163129614*^9}, {3.7081032164282684`*^9, 
   3.708103230570259*^9}, {3.708103261823343*^9, 3.708103360586109*^9}, 
   3.708103662837639*^9, {3.7081037115770893`*^9, 3.708103900467515*^9}, {
   3.7081041359198527`*^9, 3.708104205805237*^9}, {3.7081044449987073`*^9, 
   3.7081044563387184`*^9}},ExpressionUUID->"1fa77908-9614-4ae1-8169-\
df4ce92b9f2a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"correctInserting", "[", 
   RowBox[{"str_String", ",", "strinst_String"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"s", "=", "str"}], ",", "s1", ",", "s2", ",", 
      RowBox[{"result", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", 
      RowBox[{"symb", "=", "strinst"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"StringSplit", "[", 
       RowBox[{"str", ",", 
        RowBox[{
         RowBox[{"x", ":", "PunctuationCharacter"}], "\[RuleDelayed]", 
         "x"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "\[LessEqual]", 
        RowBox[{"Length", "[", "s1", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Not", "[", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"Names", "[", "\"\<System`*\>\"", "]"}], ",", 
            RowBox[{"s1", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"s2", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "+", 
                RowBox[{"Total", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"StringLength", "[", "#", "]"}], "&"}], "/@", 
                  RowBox[{"(", 
                   RowBox[{"s1", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"i", "-", "1"}]}], "]"}], "]"}], ")"}]}], "]"}]}],
                ",", 
               RowBox[{"StringInsert", "[", 
                RowBox[{
                 RowBox[{"s1", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "symb", ",", 
                 RowBox[{"{", "#", "}"}]}], "]"}]}], "}"}], "&"}], "/@", 
            RowBox[{"Range", "[", 
             RowBox[{"StringLength", "[", 
              RowBox[{"s1", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"result", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"s2", "[", 
                 RowBox[{"[", 
                  RowBox[{"#", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"s1", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", 
                    RowBox[{"i", "-", "1"}]}], "]"}], "]"}], ",", 
                  RowBox[{"s2", "[", 
                   RowBox[{"[", 
                    RowBox[{"#", ",", "2"}], "]"}], "]"}], ",", 
                  RowBox[{"s1", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ";;"}], "]"}], "]"}]}], "}"}]}], 
               "}"}], "&"}], "/@", 
             RowBox[{"Range", "[", 
              RowBox[{"StringLength", "[", 
               RowBox[{"s1", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"StringJoin", "/@", 
       RowBox[{"Flatten", "[", 
        RowBox[{"result", ",", "1"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Transpose", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"result", ",", "1"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"StringJoin", "/@", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"result", ",", "1"}], "]"}], "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7081045501089635`*^9, 3.7081046724063625`*^9}, {
   3.708104821409006*^9, 3.708104851977369*^9}, {3.7081055287624493`*^9, 
   3.7081056377884717`*^9}, {3.7081056972734957`*^9, 3.708105745538606*^9}, 
   3.7081057949044685`*^9, {3.708105905604674*^9, 3.708105926173205*^9}, {
   3.7081060026786013`*^9, 3.70810601295286*^9}, {3.708106067401326*^9, 
   3.7081061298694563`*^9}, 3.7081062179260955`*^9, {3.708106248438651*^9, 
   3.7081062528877945`*^9}, {3.7081063479639893`*^9, 3.708106360320718*^9}, {
   3.708106430671417*^9, 3.7081064336275053`*^9}, {3.708106490390607*^9, 
   3.70810656086968*^9}},ExpressionUUID->"a8754287-a484-4e7d-9d18-\
266ad4d7b9a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"correctInserting", "[", 
  RowBox[{"\"\<Nestfhh,x,4]\>\"", ",", "\"\<[\>\""}], "]"}]], "Input",Expressi\
onUUID->"26074061-991d-4313-9e12-76d6fae5911e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "\<\"[Nestfhh,x,4]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "\<\"N[estfhh,x,4]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "\<\"Ne[stfhh,x,4]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "\<\"Nes[tfhh,x,4]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "\<\"Nest[fhh,x,4]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "\<\"Nestf[hh,x,4]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "\<\"Nestfh[h,x,4]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "\<\"Nestfhh[,x,4]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"9", ",", "\<\"Nestfhh,[x,4]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "\<\"Nestfhh,x[,4]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "\<\"Nestfhh,x,[4]\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "\<\"Nestfhh,x,4[]\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.708106534875021*^9, 
  3.7081065631532803`*^9}},ExpressionUUID->"0891b2a9-acb8-48a1-aaa2-\
9537cd9bd043"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"correctInserting", "[", 
      RowBox[{"\"\<Nestfhh,x,4]\>\"", ",", "\"\<[\>\""}], "]"}], ",", "1"}], 
    "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7081063764170933`*^9, 
  3.7081064080504484`*^9}},ExpressionUUID->"56bfb688-497d-40c5-b61e-\
55ab8162926b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "11", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7081056511208906`*^9, 3.7081059305723124`*^9, 3.70810601546865*^9, 
   3.708106132485305*^9, 3.7081062557268004`*^9, {3.70810635286744*^9, 
   3.708106435959141*^9}},ExpressionUUID->"43841e0a-f264-4b11-91a3-\
1b33c5d0c115"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "/@", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"correctInserting", "[", 
       RowBox[{"\"\<Nestfhh,x,4]\>\"", ",", "\"\<[\>\""}], "]"}], ",", "1"}], 
     "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708106421989275*^9, 3.7081064233422422`*^9}, {
  3.7081064597939787`*^9, 
  3.7081064620205975`*^9}},ExpressionUUID->"41b9a513-8954-4953-ae8c-\
58971ac2eed5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"[Nestfhh,x,4]\"\>", ",", "\<\"N[estfhh,x,4]\"\>", 
   ",", "\<\"Ne[stfhh,x,4]\"\>", ",", "\<\"Nes[tfhh,x,4]\"\>", 
   ",", "\<\"Nest[fhh,x,4]\"\>", ",", "\<\"Nestf[hh,x,4]\"\>", 
   ",", "\<\"Nestfh[h,x,4]\"\>", ",", "\<\"Nestfhh[,x,4]\"\>", 
   ",", "\<\"Nestfhh,[x,4]\"\>", ",", "\<\"Nestfhh,x[,4]\"\>", 
   ",", "\<\"Nestfhh,x,[4]\"\>", ",", "\<\"Nestfhh,x,4[]\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7081064237795486`*^9, 
  3.70810646255693*^9},ExpressionUUID->"0e9add19-141e-4f65-9d4b-2a7153953861"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "/@", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"correctInserting", "[", 
     RowBox[{"\"\<Nestfhh,x,4]\>\"", ",", "\"\<[\>\""}], "]"}], ",", "1"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7081046530747213`*^9, 3.7081046656796246`*^9}, {
  3.708104704013691*^9, 
  3.7081047144650755`*^9}},ExpressionUUID->"a5545cf4-e1a2-4229-b690-\
9c11e925b1c3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"[Nestfhh,x,4]\"\>", ",", "\<\"N[estfhh,x,4]\"\>", 
   ",", "\<\"Ne[stfhh,x,4]\"\>", ",", "\<\"Nes[tfhh,x,4]\"\>", 
   ",", "\<\"Nest[fhh,x,4]\"\>", ",", "\<\"Nestf[hh,x,4]\"\>", 
   ",", "\<\"Nestfh[h,x,4]\"\>", ",", "\<\"Nestfhh[,x,4]\"\>", 
   ",", "\<\"Nestfhh,[x,4]\"\>", ",", "\<\"Nestfhh,x[,4]\"\>", 
   ",", "\<\"Nestfhh,x,[4]\"\>", ",", "\<\"Nestfhh,x,4[]\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7081046751873255`*^9, {3.708104709730729*^9, 
   3.7081047149354067`*^9}},ExpressionUUID->"6b1a212e-bc2c-4419-b854-\
d8a42ec7478e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"correctSplitting", "[", "\"\<Nest[fhh,x,4]\>\"", "]"}]], "Input",Exp\
ressionUUID->"8b9b0fe7-e928-444a-bc1e-2a6f9594ab5a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Nestfhh,x,4]\"\>", ",", "\<\"Nest[hh,x,4]\"\>", 
   ",", "\<\"Nest[fh,x,4]\"\>", ",", "\<\"Nest[fh,x,4]\"\>", 
   ",", "\<\"Nest[fhhx,4]\"\>", ",", "\<\"Nest[fhh,,4]\"\>", 
   ",", "\<\"Nest[fhh,x4]\"\>", ",", "\<\"Nest[fhh,x,]\"\>", 
   ",", "\<\"Nest[fhh,x,4\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7081044659304943`*^9},ExpressionUUID->"e668f91c-d611-49a5-b133-\
0e438dd09087"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "/@", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"correctSplitting", "[", "\"\<Nest[fhh,x,4]\>\"", "]"}], ",", 
    "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.708104229043641*^9, 3.708104289601424*^9}, {
  3.7081043904051385`*^9, 
  3.7081044179556026`*^9}},ExpressionUUID->"1180e7c7-9083-451f-a6c4-\
5c575656ff40"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Nestfhh,x,4]\"\>", ",", "\<\"Nest[hh,x,4]\"\>", 
   ",", "\<\"Nest[fh,x,4]\"\>", ",", "\<\"Nest[fh,x,4]\"\>", 
   ",", "\<\"Nest[fhhx,4]\"\>", ",", "\<\"Nest[fhh,,4]\"\>", 
   ",", "\<\"Nest[fhh,x4]\"\>", ",", "\<\"Nest[fhh,x,]\"\>", 
   ",", "\<\"Nest[fhh,x,4\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.708104219212696*^9, 3.708104290084777*^9}, {
  3.708104396322318*^9, 
  3.7081044184439464`*^9}},ExpressionUUID->"3fadf32f-92ed-40b5-9fa0-\
d741220bb83a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"correctSplitting", "[", "\"\<Nest[f,x,4]\>\"", "]"}], ",", 
     "1"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7081038804984083`*^9, 3.708103889401699*^9}, {
  3.7081040165034904`*^9, 
  3.7081040645064025`*^9}},ExpressionUUID->"2e124ca3-4e81-43f8-ba8c-\
da42916d6bfb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Nest\"\>", ",", "\<\"[\"\>", ",", "\<\"\"\>", ",", "\<\",\"\>",
    ",", "\<\"x\"\>", ",", "\<\",\"\>", ",", "\<\"4\"\>", ",", "\<\"]\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.708103903757839*^9, {3.708104022385645*^9, 3.7081040651108294`*^9}, {
   3.7081041874112425`*^9, 
   3.7081042092156467`*^9}},ExpressionUUID->"37e33118-962e-41a2-8b4d-\
f41b299fde94"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7081231033520756`*^9, 
  3.7081231044168415`*^9}},ExpressionUUID->"fef46788-74c8-4ed0-8856-\
4259bbd22945"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1520, 781},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info173707853223-7757805"->{
  Cell[91183, 2154, 575, 13, 
  63, "Print", "ExpressionUUID" -> "48427a99-f3a0-4d7c-8c28-798a30498c6e",
   CellTags->"Info173707853223-7757805"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info173707853223-7757805", 1368915, 28742}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 175, 3, 134, "Title", "ExpressionUUID" -> \
"a62f317b-406a-411c-b1b6-84bd6a8d504e"],
Cell[CellGroupData[{
Cell[780, 29, 212, 4, 96, "Chapter", "ExpressionUUID" -> \
"0b2a7c97-6769-4c60-bb89-1ed70cd885ef"],
Cell[CellGroupData[{
Cell[1017, 37, 169, 3, 51, "Subsubsection", "ExpressionUUID" -> \
"e88bbe65-c3cc-4da9-ada7-7ce372171907"],
Cell[1189, 42, 16477, 383, 70, "Input", "ExpressionUUID" -> \
"6428a9cc-8000-4b7c-974c-379280e2015b"]
}, Closed]],
Cell[CellGroupData[{
Cell[17703, 430, 167, 3, 40, "Subsubsection", "ExpressionUUID" -> \
"1b0c0d7b-8834-4ae2-b1f1-3dba1fa70aef"],
Cell[17873, 435, 1439, 35, 70, "Input", "ExpressionUUID" -> \
"62d34e81-7383-4d16-8b12-028c83402eb4"]
}, Closed]],
Cell[CellGroupData[{
Cell[19349, 475, 157, 3, 40, "Subsubsection", "ExpressionUUID" -> \
"335000b9-7c3e-4bcd-a947-d2e0fb3acc90"],
Cell[19509, 480, 671, 18, 70, "Input", "ExpressionUUID" -> \
"bc9b5f5a-ba01-415e-a16d-455d5135aa25"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20229, 504, 155, 3, 96, "Chapter", "ExpressionUUID" -> \
"eb0b9604-7ee3-47f0-9744-cce8cecbae10"],
Cell[CellGroupData[{
Cell[20409, 511, 255, 5, 46, "Input", "ExpressionUUID" -> \
"a8d168b1-3d63-4e7b-839c-bca13d7d63fa"],
Cell[20667, 518, 907, 22, 96, "Output", "ExpressionUUID" -> \
"184ca86d-9392-4e70-9658-6127630f940a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21611, 545, 159, 2, 46, "Input", "ExpressionUUID" -> \
"e92d1f41-f078-4d01-9638-1308c793c83f"],
Cell[21773, 549, 1005, 24, 148, "Output", "ExpressionUUID" -> \
"4cd21ab1-75ca-4311-a87a-af607d1ee471"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22815, 578, 188, 4, 46, "Input", "ExpressionUUID" -> \
"aa740a4d-b3be-4c27-81de-ee7a8b207f50"],
Cell[23006, 584, 1296, 31, 279, "Output", "ExpressionUUID" -> \
"a620e078-b830-4555-8bee-17e4882d9ec5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24339, 620, 188, 4, 46, "Input", "ExpressionUUID" -> \
"ddc9e334-4c20-4bcf-8444-87d4de38af69"],
Cell[24530, 626, 1165, 28, 279, "Output", "ExpressionUUID" -> \
"3b5c7bed-0de2-44a6-b2a8-758bb873c252"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25732, 659, 161, 2, 46, "Input", "ExpressionUUID" -> \
"d3519e72-b27e-48ee-8e7a-c4151467a655"],
Cell[25896, 663, 989, 24, 148, "Output", "ExpressionUUID" -> \
"d3c89a48-7c8e-4a8e-964a-ab6b51f8f056"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26922, 692, 181, 3, 46, "Input", "ExpressionUUID" -> \
"5f17572b-1c02-4262-aeca-c9975f757fbe"],
Cell[27106, 697, 1107, 27, 175, "Output", "ExpressionUUID" -> \
"19d111bc-1516-4818-9722-0cb81c57e81b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28250, 729, 229, 5, 46, "Input", "ExpressionUUID" -> \
"f52609c7-c3a3-4296-a0a7-243a5d12c012"],
Cell[28482, 736, 1361, 42, 110, "Output", "ExpressionUUID" -> \
"ff81e35d-8f2b-465a-b08b-5f455c063fab"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29880, 783, 231, 5, 70, "Input", "ExpressionUUID" -> \
"83b7585d-f3ae-4e7b-91dd-37f92a74f4ce"],
Cell[30114, 790, 1275, 30, 70, "Output", "ExpressionUUID" -> \
"aa5c6740-aa47-4748-8681-ccfb93739923"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31426, 825, 236, 4, 70, "Input", "ExpressionUUID" -> \
"e9dcf599-771e-444c-9f68-332a406ca037"],
Cell[31665, 831, 937, 27, 70, "Output", "ExpressionUUID" -> \
"7db942cf-9118-4714-af5a-9eb194c479ad"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32651, 864, 171, 3, 70, "Chapter", "ExpressionUUID" -> \
"f1f6f4c8-2e8a-44f7-864b-076243fd0e3f"],
Cell[CellGroupData[{
Cell[32847, 871, 179, 3, 70, "Subsubsection", "ExpressionUUID" -> \
"4ff5cd55-5b46-4e74-8d72-fee6eaa76204"],
Cell[33029, 876, 1537, 37, 70, "Input", "ExpressionUUID" -> \
"51c1216a-f6a3-49bc-8368-92e776e3d966"],
Cell[34569, 915, 786, 22, 70, "Input", "ExpressionUUID" -> \
"f3242da5-f962-4fdc-913c-82a4cb21514a"],
Cell[35358, 939, 622, 18, 70, "Input", "ExpressionUUID" -> \
"2ed341d8-0588-4ef9-8dde-aeffb44ce8a6"],
Cell[35983, 959, 725, 20, 70, "Input", "ExpressionUUID" -> \
"d564cd75-a7cf-41c3-ad4f-66b5b5d82cc0"],
Cell[36711, 981, 834, 22, 70, "Input", "ExpressionUUID" -> \
"93407458-889f-4719-be06-e57e074756dc"],
Cell[37548, 1005, 785, 21, 70, "Input", "ExpressionUUID" -> \
"48346c79-66d3-47ff-bcdb-78f0145aed99"],
Cell[38336, 1028, 999, 25, 70, "Input", "ExpressionUUID" -> \
"6625b7a1-5c55-40d5-91d2-e2a89dbba93e"],
Cell[CellGroupData[{
Cell[39360, 1057, 351, 9, 70, "Input", "ExpressionUUID" -> \
"623ef100-cc73-4c29-baa2-d2abfdf47d5c"],
Cell[39714, 1068, 1633, 24, 70, "Output", "ExpressionUUID" -> \
"869bb32f-108e-4764-b497-478e35d6140b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41384, 1097, 202, 4, 70, "Input", "ExpressionUUID" -> \
"96768787-6662-4648-b8e2-38ecb6a0fa44"],
Cell[41589, 1103, 477, 15, 70, "Output", "ExpressionUUID" -> \
"e7660073-8eb3-4eb0-b88d-e971af5b942a"]
}, Open  ]],
Cell[42081, 1121, 171, 3, 70, "Input", "ExpressionUUID" -> \
"be97ca00-4314-4a64-8554-aef24de5c73f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42289, 1129, 181, 3, 70, "Subsubsection", "ExpressionUUID" -> \
"e4e1ba9e-2791-4cb3-8daf-55d5b31d7e7e"],
Cell[42473, 1134, 168, 3, 70, "Input", "ExpressionUUID" -> \
"10c09dc8-a07c-48f1-a666-7c6c9b4b8dc0"],
Cell[CellGroupData[{
Cell[42666, 1141, 789, 19, 70, "Input", "ExpressionUUID" -> \
"50d67bf2-33cd-46e1-9d67-ac2f3cb28986",
 CellID->360473489],
Cell[43458, 1162, 27086, 446, 70, "Output", "ExpressionUUID" -> \
"7bdc60c2-a784-4322-bbf5-81b4ea11c80c"]
}, Closed]],
Cell[CellGroupData[{
Cell[70581, 1613, 507, 11, 70, "Input", "ExpressionUUID" -> \
"18096b74-0b97-46d0-a4ad-9ea41d038e6f",
 CellID->234116337],
Cell[71091, 1626, 1859, 36, 70, "Output", "ExpressionUUID" -> \
"2cd7945e-826f-43ed-b489-ae8f5e77f15e"]
}, Closed]],
Cell[CellGroupData[{
Cell[72987, 1667, 179, 3, 70, "Input", "ExpressionUUID" -> \
"9368c9eb-b84e-4fa6-9eca-76b81f34d87e"],
Cell[73169, 1672, 2007, 40, 70, "Output", "ExpressionUUID" -> \
"9b7395d1-2c27-4833-bed3-aa78b005487a"]
}, Closed]],
Cell[75191, 1715, 657, 17, 70, "Input", "ExpressionUUID" -> \
"8537153c-a22a-47b1-81b8-18e6e584b8da"],
Cell[CellGroupData[{
Cell[75873, 1736, 195, 4, 70, "Input", "ExpressionUUID" -> \
"08b8150b-7e8b-409f-a3bd-0f052a544353"],
Cell[76071, 1742, 333, 6, 70, "Output", "ExpressionUUID" -> \
"bc8ee044-f08f-4842-a965-62307f4f0029"]
}, Open  ]],
Cell[76419, 1751, 1440, 28, 70, "Input", "ExpressionUUID" -> \
"ae91ce2a-d5dc-44d5-8c5c-a837d8444439"],
Cell[77862, 1781, 752, 16, 70, "Input", "ExpressionUUID" -> \
"ca612552-9a64-4a6c-8e8c-1d3303c0ffa4"],
Cell[78617, 1799, 895, 23, 70, "Input", "ExpressionUUID" -> \
"911b420e-d004-41f7-838c-4786db0e324e"],
Cell[CellGroupData[{
Cell[79537, 1826, 199, 4, 70, "Input", "ExpressionUUID" -> \
"2560811e-58c0-4733-9569-09992319b70a"],
Cell[79739, 1832, 301, 5, 70, "Output", "ExpressionUUID" -> \
"a744668d-0b00-4723-96c0-73fdf85fc48e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80077, 1842, 178, 4, 70, "Input", "ExpressionUUID" -> \
"8eea6576-1267-437d-bc02-287daddcbef0"],
Cell[CellGroupData[{
Cell[80280, 1850, 10900, 302, 70, "Print", "ExpressionUUID" -> \
"f93ddce4-fdb9-4be6-93cf-b959463e5cc3"],
Cell[91183, 2154, 575, 13, 63, "Print", "ExpressionUUID" -> \
"48427a99-f3a0-4d7c-8c28-798a30498c6e",
 CellTags->"Info173707853223-7757805"]
}, Open  ]]
}, Open  ]],
Cell[91785, 2171, 2918, 67, 453, "Input", "ExpressionUUID" -> \
"2f3a2ded-28dd-4340-b395-36e8652304e8"],
Cell[94706, 2240, 292, 7, 46, "Input", "ExpressionUUID" -> \
"870b3d91-538c-43c5-9aea-3c5f0e5be5ea"],
Cell[CellGroupData[{
Cell[95023, 2251, 193, 4, 46, "Input", "ExpressionUUID" -> \
"0c2f548b-8fe5-47a1-a43d-809d3f93d71b"],
Cell[95219, 2257, 251, 4, 46, "Output", "ExpressionUUID" -> \
"b12d42fd-e9ae-441c-8ca7-c3ef01a66248"]
}, Open  ]],
Cell[95485, 2264, 1122, 24, 76, "Input", "ExpressionUUID" -> \
"87f33422-bf20-4e42-8855-3a19431e4e4f"],
Cell[CellGroupData[{
Cell[96632, 2292, 189, 4, 46, "Input", "ExpressionUUID" -> \
"5ed96b55-c128-411d-8315-31806f39d1e9"],
Cell[96824, 2298, 556, 9, 46, "Output", "ExpressionUUID" -> \
"0aa826cc-9e7c-44be-b3a0-d1db6df29c75"]
}, Open  ]],
Cell[97395, 2310, 782, 14, 46, "Input", "ExpressionUUID" -> \
"b8d3221c-8c8b-42a9-9aab-513e08651d14"],
Cell[98180, 2326, 384, 9, 46, "Input", "ExpressionUUID" -> \
"0e78ee2f-9846-49fc-873c-497d12eac734"],
Cell[CellGroupData[{
Cell[98589, 2339, 668, 10, 46, "Input", "ExpressionUUID" -> \
"63f0085a-a36a-4f92-860f-eadc62a20841"],
Cell[99260, 2351, 736, 11, 46, "Output", "ExpressionUUID" -> \
"32c3431b-94d3-4ef6-b8df-3fd99db03a5a"]
}, Open  ]],
Cell[100011, 2365, 309, 5, 46, "Input", "ExpressionUUID" -> \
"79ea1b57-4659-4542-91ab-d6c3a448177d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[100369, 2376, 203, 4, 96, "Chapter", "ExpressionUUID" -> \
"b746afd2-0999-4bf4-9fdb-7f3a4e0680fe"],
Cell[CellGroupData[{
Cell[100597, 2384, 221, 4, 70, "Input", "ExpressionUUID" -> \
"d5f2283f-5175-441e-80b9-a50f6a5f576d"],
Cell[100821, 2390, 268, 7, 70, "Output", "ExpressionUUID" -> \
"f35aff6c-f30a-4652-9fce-7ae492a4ff97"]
}, Open  ]],
Cell[101104, 2400, 980, 24, 70, "Input", "ExpressionUUID" -> \
"fe6a3421-276b-42f7-a5f6-5b0758b50a9c"],
Cell[CellGroupData[{
Cell[102109, 2428, 218, 4, 70, "Input", "ExpressionUUID" -> \
"f6e77913-d5a9-44e0-b8da-ae71fe99b39e"],
Cell[102330, 2434, 1061, 18, 70, "Output", "ExpressionUUID" -> \
"d763737e-c9e8-4b02-ab41-aa8b858b4e50"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[103452, 2459, 281, 4, 93, "Title", "ExpressionUUID" -> \
"6cff9361-32f8-49f7-b3ad-2708848c89a4"],
Cell[CellGroupData[{
Cell[103758, 2467, 212, 4, 96, "Chapter", "ExpressionUUID" -> \
"48a204ff-cca1-43ba-b071-0841dbdb0a44"],
Cell[CellGroupData[{
Cell[103995, 2475, 169, 3, 51, "Subsubsection", "ExpressionUUID" -> \
"7792255a-2ff1-40ee-bf57-ac1905b90cda"],
Cell[104167, 2480, 185, 4, 46, "Input", "ExpressionUUID" -> \
"533586e2-e4ba-4713-bead-32b14cbe8f5d"],
Cell[104355, 2486, 200, 4, 46, "Input", "ExpressionUUID" -> \
"967a113a-306d-4de0-b7fb-944d5677952d"],
Cell[104558, 2492, 14736, 307, 1990, "Input", "ExpressionUUID" -> \
"da34ff97-b2e4-4b02-9cbb-8d230979c7ec"]
}, Closed]],
Cell[CellGroupData[{
Cell[119331, 2804, 178, 3, 40, "Subsubsection", "ExpressionUUID" -> \
"405548c7-5817-4b94-b331-8d1475d5906f"],
Cell[119512, 2809, 18145, 393, 2396, "Input", "ExpressionUUID" -> \
"5a5c124e-a9cd-403b-908c-1f5fe886527e"]
}, Closed]],
Cell[CellGroupData[{
Cell[137694, 3207, 167, 3, 40, "Subsubsection", "ExpressionUUID" -> \
"bcdef83f-4339-4a80-af31-c118359630b0"],
Cell[137864, 3212, 2000, 47, 453, "Input", "ExpressionUUID" -> \
"737caaff-9298-4c01-8427-9d516e6f4944"]
}, Closed]],
Cell[CellGroupData[{
Cell[139901, 3264, 219, 4, 40, "Subsubsection", "ExpressionUUID" -> \
"94258586-b380-46b6-bc6b-93615168e02e"],
Cell[140123, 3270, 1449, 35, 336, "Input", "ExpressionUUID" -> \
"1afb726f-d98b-4b19-9b09-d14b0299f1b8"]
}, Closed]],
Cell[CellGroupData[{
Cell[141609, 3310, 157, 3, 40, "Subsubsection", "ExpressionUUID" -> \
"5f52cc58-52c5-4e7d-a94e-9e644ebc96ce"],
Cell[141769, 3315, 1387, 34, 105, "Input", "ExpressionUUID" -> \
"b3cccd56-d451-42e1-9b5b-1df1e763f5a1"],
Cell[143159, 3351, 1151, 30, 163, "Input", "ExpressionUUID" -> \
"4cdf9275-cb8a-4643-a4e4-facab3cb20c6"],
Cell[144313, 3383, 1141, 31, 105, "Input", "ExpressionUUID" -> \
"0c8bdac7-f756-498d-a57a-10b94512fa12"]
}, Closed]],
Cell[CellGroupData[{
Cell[145491, 3419, 169, 3, 40, "Subsubsection", "ExpressionUUID" -> \
"ca859286-186a-43ee-a988-c6cfe9210510"],
Cell[145663, 3424, 200, 4, 46, "Input", "ExpressionUUID" -> \
"fe654353-1c7d-4745-b7c0-efc15e7b7a41"],
Cell[145866, 3430, 3722, 75, 598, "Input", "ExpressionUUID" -> \
"774645d3-7ef5-437c-8958-4c7095f9af1b"]
}, Closed]],
Cell[CellGroupData[{
Cell[149625, 3510, 169, 3, 40, "Subsubsection", "ExpressionUUID" -> \
"db57d2c5-1f8e-4df4-9e44-2ed146d8b99f"],
Cell[149797, 3515, 3315, 81, 395, "Input", "ExpressionUUID" -> \
"ff495d05-ca5b-4201-b8d6-4a38ee98c804"]
}, Closed]],
Cell[CellGroupData[{
Cell[153149, 3601, 168, 3, 40, "Subsubsection", "ExpressionUUID" -> \
"254b0f5f-6e6f-411d-91c5-ba31c5d8c18c"],
Cell[153320, 3606, 199, 4, 46, "Input", "ExpressionUUID" -> \
"dad37760-ad2c-4923-aa5d-9db913bb77fa"],
Cell[153522, 3612, 5273, 124, 540, "Input", "ExpressionUUID" -> \
"457b1f1b-5e2e-4034-b4c8-42e59134239e"]
}, Closed]],
Cell[CellGroupData[{
Cell[158832, 3741, 165, 3, 40, "Subsubsection", "ExpressionUUID" -> \
"19f4b7aa-939a-4237-becd-c4f30cd6ff3b"],
Cell[159000, 3746, 1216, 30, 192, "Input", "ExpressionUUID" -> \
"84d4d2b5-e622-42ed-a1b2-d5cda532d877"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[160265, 3782, 155, 3, 77, "Chapter", "ExpressionUUID" -> \
"5ebc7ebe-96dc-4e43-b84d-519fd32b64da"],
Cell[CellGroupData[{
Cell[160445, 3789, 516, 9, 46, "Input", "ExpressionUUID" -> \
"6a5e75d5-f702-4e93-9684-277baaefdc70"],
Cell[160964, 3800, 2065, 49, 88, "Output", "ExpressionUUID" -> \
"bcf17039-8dc2-4122-8df1-5630d7e25101"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163066, 3854, 272, 6, 46, "Input", "ExpressionUUID" -> \
"754e2c2b-bbe6-402e-874d-59432cb32f7c"],
Cell[163341, 3862, 1373, 39, 88, "Output", "ExpressionUUID" -> \
"da878870-15dd-4c9b-b66e-d82275fc8e40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164751, 3906, 469, 10, 46, "Input", "ExpressionUUID" -> \
"fc9f5b2f-6bb1-4d08-bc77-2e15fe51a458"],
Cell[165223, 3918, 3236, 85, 195, "Output", "ExpressionUUID" -> \
"825d0b04-67a6-42eb-8db3-76ff5a9862d4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168496, 4008, 372, 8, 46, "Input", "ExpressionUUID" -> \
"29a4a3a0-f6cb-4136-a0e7-3e2efa01c51a"],
Cell[168871, 4018, 1755, 45, 88, "Output", "ExpressionUUID" -> \
"8467fa60-aef6-47a6-879c-53a65ffb3fb3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170663, 4068, 292, 6, 46, "Input", "ExpressionUUID" -> \
"9145d95b-b1ec-4ed0-8ea4-5979df37265d"],
Cell[170958, 4076, 5577, 163, 396, "Output", "ExpressionUUID" -> \
"51bc8700-3ffd-4cd0-ae06-4d65c926c081"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176572, 4244, 443, 11, 46, "Input", "ExpressionUUID" -> \
"b464ad85-404c-479c-aba1-6fe06823454c"],
Cell[177018, 4257, 7494, 205, 396, "Output", "ExpressionUUID" -> \
"ba900d1f-07ac-46b0-8a0a-c123b34c6539"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184549, 4467, 395, 11, 46, "Input", "ExpressionUUID" -> \
"23628450-349b-4181-805f-556c6f33bcc9"],
Cell[184947, 4480, 5630, 151, 176, "Output", "ExpressionUUID" -> \
"570fc5f4-8cfc-4a5d-9580-048aebc80861"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190614, 4636, 414, 11, 46, "Input", "ExpressionUUID" -> \
"ccdff6ac-c941-4129-95f0-69e50b525925"],
Cell[191031, 4649, 4968, 134, 220, "Output", "ExpressionUUID" -> \
"20201fb0-fe6c-451e-9955-6d8d7e370c21"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196036, 4788, 464, 12, 46, "Input", "ExpressionUUID" -> \
"92906bae-8ed0-4e98-9aff-406f6c16cdbb"],
Cell[196503, 4802, 5508, 137, 316, "Output", "ExpressionUUID" -> \
"cc48e2ca-2c20-4ddd-aad1-5e5de24b03b4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202048, 4944, 473, 11, 46, "Input", "ExpressionUUID" -> \
"24784d11-5f83-4aef-bb22-609b246eb9de"],
Cell[202524, 4957, 2292, 61, 88, "Output", "ExpressionUUID" -> \
"45ff0409-cdfd-4dba-9664-53265a04c39c"]
}, Open  ]],
Cell[204831, 5021, 577, 14, 76, "Input", "ExpressionUUID" -> \
"f8fbcc9e-69f1-471d-8226-0429369521db"],
Cell[CellGroupData[{
Cell[205433, 5039, 471, 8, 46, "Input", "ExpressionUUID" -> \
"0926240e-b78e-4c58-80cb-bcacfff3aca0"],
Cell[205907, 5049, 710, 12, 46, "Output", "ExpressionUUID" -> \
"4df89ec1-d696-4e31-98bf-798c098b441b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206654, 5066, 869, 21, 105, "Input", "ExpressionUUID" -> \
"4b07900e-21de-44ec-bd76-5726a84deb90"],
Cell[207526, 5089, 530, 8, 46, "Output", "ExpressionUUID" -> \
"138cdcb7-5c48-49af-a839-c8d7504a2073"],
Cell[208059, 5099, 531, 8, 46, "Output", "ExpressionUUID" -> \
"cab35c6e-c2c0-4e1f-9ce1-3d4a70f4f7bb"]
}, Open  ]],
Cell[208605, 5110, 170, 3, 46, "Input", "ExpressionUUID" -> \
"903e84fe-d913-45e8-abd3-1a845a0f3bbe"],
Cell[208778, 5115, 1145, 20, 46, "Input", "ExpressionUUID" -> \
"b1aae7b7-6265-49ac-8a30-cbacd6f76a34"],
Cell[CellGroupData[{
Cell[209948, 5139, 602, 10, 46, "Input", "ExpressionUUID" -> \
"1c1299d9-d66e-4661-b657-ccbc2f7f6dae"],
Cell[210553, 5151, 3391, 81, 113, "Output", "ExpressionUUID" -> \
"f3f83e55-2d29-41ce-bb69-49df86dc5f7e"]
}, Open  ]],
Cell[213959, 5235, 727, 20, 76, "Input", "ExpressionUUID" -> \
"bf105c45-d2b1-4523-ad8a-e70b894ca931"],
Cell[CellGroupData[{
Cell[214711, 5259, 1048, 29, 134, "Input", "ExpressionUUID" -> \
"384f5ff4-b78a-47c1-9667-c25723f9bb77"],
Cell[215762, 5290, 30302, 811, 1598, "Output", "ExpressionUUID" -> \
"9796b2fe-97e5-4ca1-9a2d-818ccdbdf70c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246101, 6106, 970, 28, 134, "Input", "ExpressionUUID" -> \
"3e50d230-2606-470d-82d3-c5b64371b8d8"],
Cell[247074, 6136, 11026, 306, 500, "Output", "ExpressionUUID" -> \
"5866620d-a317-4dbe-a933-c9a43e50de10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258137, 6447, 970, 28, 134, "Input", "ExpressionUUID" -> \
"d60872f8-883d-456d-9c45-e04511296ede"],
Cell[259110, 6477, 151709, 3844, 7741, "Output", "ExpressionUUID" -> \
"c2be3253-e670-4052-ba1b-83d294da1377"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410856, 10326, 974, 28, 134, "Input", "ExpressionUUID" -> \
"fe682491-1fa5-4ec5-81fc-c936cf769e73"],
Cell[411833, 10356, 33785, 906, 1799, "Output", "ExpressionUUID" -> \
"6f2242b2-2406-4983-a086-9f385a4f50c1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[445667, 11268, 160, 3, 96, "Chapter", "ExpressionUUID" -> \
"87f10dbd-59ad-4741-8224-a18dedd1d3c0"],
Cell[CellGroupData[{
Cell[445852, 11275, 1594, 37, 366, "Input", "ExpressionUUID" -> \
"8d8427a1-9216-4508-9805-7b464bcf6053"],
Cell[447449, 11314, 1145, 33, 175, "Output", "ExpressionUUID" -> \
"d0d839d9-d8c3-4825-85f0-5303a7a17eea"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[448640, 11353, 163, 3, 96, "Chapter", "ExpressionUUID" -> \
"006310cc-3f62-42ce-8733-b25e0bbaae73"],
Cell[CellGroupData[{
Cell[448828, 11360, 173, 3, 51, "Subsubsection", "ExpressionUUID" -> \
"3a33b871-b552-4af6-bd40-011d87a85b5d"],
Cell[CellGroupData[{
Cell[449026, 11367, 368, 8, 46, "Input", "ExpressionUUID" -> \
"2b7b29e6-3eb5-44e5-bba0-935a5a024bbf"],
Cell[449397, 11377, 308, 5, 70, "Output", "ExpressionUUID" -> \
"1e46d28d-3fa9-4079-90a8-61f69e5ec2df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[449742, 11387, 455, 9, 46, "Input", "ExpressionUUID" -> \
"bae8d23f-d8c2-4548-8c3b-c1b5f18d4ed5"],
Cell[450200, 11398, 451, 7, 70, "Output", "ExpressionUUID" -> \
"ff93ec61-35da-4a57-97e7-52d4d1347247"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450688, 11410, 3794, 85, 598, "Input", "ExpressionUUID" -> \
"6f329bfb-7ce7-4506-958b-b600a2391a17"],
Cell[454485, 11497, 20754, 372, 70, "Output", "ExpressionUUID" -> \
"b4f10651-f6e6-4359-b0da-b5c8498f59b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[475276, 11874, 226, 5, 46, "Input", "ExpressionUUID" -> \
"826bc1b8-5995-4a51-a4e9-cab5d11f35ee"],
Cell[475505, 11881, 20707, 371, 70, "Output", "ExpressionUUID" -> \
"d5081d50-ee6b-4bce-bcf0-49276e15b579"]
}, Open  ]],
Cell[CellGroupData[{
Cell[496249, 12257, 759, 17, 76, "Input", "ExpressionUUID" -> \
"d6ecf98e-e13c-4ab5-9000-7851beed0078"],
Cell[497011, 12276, 367, 6, 70, "Output", "ExpressionUUID" -> \
"a465358b-0baf-4445-ae74-3ef2b9c84a42"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[497427, 12288, 210, 4, 40, "Subsubsection", "ExpressionUUID" -> \
"01c96f52-fb72-452a-9263-1bb5cb1eb997"],
Cell[CellGroupData[{
Cell[497662, 12296, 3148, 71, 540, "Input", "ExpressionUUID" -> \
"1c864854-8919-4d64-9f47-614d9836faac"],
Cell[500813, 12369, 19467, 349, 285, "Output", "ExpressionUUID" -> \
"3c991245-b9e4-40f9-b378-e80e4774bc5c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[520317, 12723, 325, 6, 46, "Input", "ExpressionUUID" -> \
"544da9d8-f050-448b-a597-d152fe419c71"],
Cell[520645, 12731, 19395, 348, 491, "Output", "ExpressionUUID" -> \
"0841b3fa-32cb-4ee8-b4e2-493ab8165a75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540077, 13084, 382, 8, 46, "Input", "ExpressionUUID" -> \
"321ae9d7-381e-4f80-94a7-0378ab07de0a"],
Cell[540462, 13094, 310, 5, 46, "Output", "ExpressionUUID" -> \
"771b402c-5f21-4e4e-a834-098c57841155"]
}, Open  ]],
Cell[CellGroupData[{
Cell[540809, 13104, 615, 13, 46, "Input", "ExpressionUUID" -> \
"d41d7fde-0414-47a1-b4dc-8a5817066225"],
Cell[541427, 13119, 363, 6, 46, "Output", "ExpressionUUID" -> \
"78fceb6b-5a41-4726-938f-23ea089409ff"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[541851, 13132, 169, 3, 77, "Chapter", "ExpressionUUID" -> \
"c25a624a-227a-4995-897b-e37a314009fe"],
Cell[CellGroupData[{
Cell[542045, 13139, 4354, 126, 208, "Input", "ExpressionUUID" -> \
"6fcbce04-d6bb-4b87-918e-906f62e92232"],
Cell[546402, 13267, 1828, 40, 312, "Output", "ExpressionUUID" -> \
"e7bb3a90-d5e4-47fb-84c6-a2b6001976c0"]
}, Open  ]],
Cell[548245, 13310, 710, 17, 46, "Input", "ExpressionUUID" -> \
"d6719156-2a50-45e7-81b1-e8f10d177185"],
Cell[CellGroupData[{
Cell[548980, 13331, 181, 3, 51, "Subsubsection", "ExpressionUUID" -> \
"de0b7197-95c6-4bcb-8de7-ff2f9b1e0b6f"],
Cell[549164, 13336, 1975, 52, 192, "Input", "ExpressionUUID" -> \
"dccb6434-cdce-4d47-ad14-9fc6ced99036"],
Cell[CellGroupData[{
Cell[551164, 13392, 412, 9, 46, "Input", "ExpressionUUID" -> \
"8ca577da-c10c-4f36-bf28-084b3fd8e764"],
Cell[551579, 13403, 11669, 329, 322, "Output", "ExpressionUUID" -> \
"ac35e2ae-e288-4faf-afeb-78454b227907"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563285, 13737, 1090, 25, 76, "Input", "ExpressionUUID" -> \
"3cfdf135-5356-4f29-b5b2-8f02262b1e3e"],
Cell[564378, 13764, 52518, 865, 544, "Output", "ExpressionUUID" -> \
"7211639c-2014-4b6f-a46c-f9eadf22625d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[616933, 14634, 1301, 27, 76, "Input", "ExpressionUUID" -> \
"7e9495e9-d5a7-4156-809a-d2aabb7140be"],
Cell[618237, 14663, 188145, 3087, 896, 54532, 897, "CachedBoxData", \
"BoxData", "Output", "ExpressionUUID" -> \
"7e989199-636f-4a45-b521-d27e13226953"]
}, Open  ]],
Cell[CellGroupData[{
Cell[806419, 17755, 2072, 40, 250, "Input", "ExpressionUUID" -> \
"75703923-4201-4617-bec3-f6399f58a6e3"],
Cell[808494, 17797, 35880, 726, 562, "Output", "ExpressionUUID" -> \
"bea5383b-547e-49bc-822a-8d86bf5b6547"]
}, Open  ]],
Cell[CellGroupData[{
Cell[844411, 18528, 338, 8, 46, "Input", "ExpressionUUID" -> \
"c774f231-c235-4e3b-8a12-9e8570cab972"],
Cell[844752, 18538, 164443, 2699, 562, "Output", "ExpressionUUID" -> \
"98030d36-7d76-44ed-9be5-0aedbfc86b68"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009232, 21242, 199, 4, 46, "Input", "ExpressionUUID" -> \
"fe7e369c-583d-4459-93b1-446b649df585"],
Cell[1009434, 21248, 207, 5, 46, "Output", "ExpressionUUID" -> \
"d68967d2-964d-4328-a6d9-21aa3017ea46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1009678, 21258, 1411, 35, 221, "Input", "ExpressionUUID" -> \
"67dde6fd-2265-44a5-ac72-af494ca04079"],
Cell[1011092, 21295, 164804, 2704, 562, "Output", "ExpressionUUID" -> \
"83d9ee07-7e23-464f-a39e-9b97d0dfa567"]
}, Open  ]],
Cell[1175911, 24002, 729, 20, 46, "Input", "ExpressionUUID" -> \
"67b64aa4-9dac-4156-b15d-c3f3e1b485c5"],
Cell[CellGroupData[{
Cell[1176665, 24026, 475, 12, 46, "Input", "ExpressionUUID" -> \
"f34456aa-a598-4a00-8338-50e044fde21f"],
Cell[1177143, 24040, 83157, 2005, 535, "Output", "ExpressionUUID" -> \
"da017376-32fc-437d-b9f4-e569cf03a6c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1260337, 26050, 623, 14, 46, "Input", "ExpressionUUID" -> \
"dfb39628-786e-48ec-90f4-361c05a36fa9"],
Cell[1260963, 26066, 66121, 1449, 648, "Output", "ExpressionUUID" -> \
"91909e75-e716-4927-99d2-82e687800ab7"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1327145, 27522, 150, 3, 77, "Chapter", "ExpressionUUID" -> \
"a92b9e38-a3ad-4ac1-9be1-43773ef248b9"],
Cell[CellGroupData[{
Cell[1327320, 27529, 640, 17, 46, "Input", "ExpressionUUID" -> \
"49296e24-4fca-4e40-afe3-9187bb3c0d36"],
Cell[1327963, 27548, 2002, 33, 308, "Output", "ExpressionUUID" -> \
"e3bbe659-d162-40fc-bfe1-edf08717545c"]
}, Open  ]],
Cell[1329980, 27584, 152, 3, 46, "Input", "ExpressionUUID" -> \
"acf15f22-1bee-4ac8-94d9-151b95493f1a"],
Cell[1330135, 27589, 516, 16, 76, "Input", "ExpressionUUID" -> \
"90141110-d4ca-46dd-9165-cb01d5c19b12"],
Cell[CellGroupData[{
Cell[1330676, 27609, 217, 4, 46, "Input", "ExpressionUUID" -> \
"208dc65c-8f74-42ba-9f71-a09df700d893"],
Cell[1330896, 27615, 425, 10, 71, "Output", "ExpressionUUID" -> \
"b1cde2c8-2850-4f17-9f7a-4b4124443e9b"]
}, Open  ]],
Cell[1331336, 27628, 233, 5, 76, "Input", "ExpressionUUID" -> \
"d20e3bc4-99fa-42e1-9fb3-d532acdcfc08"],
Cell[CellGroupData[{
Cell[1331594, 27637, 392, 7, 46, "Input", "ExpressionUUID" -> \
"b4e80211-ed95-4f09-b173-f02eb36b597d"],
Cell[1331989, 27646, 1463, 40, 107, "Output", "ExpressionUUID" -> \
"8c60b9b9-9d75-4c19-a988-a39b1b9a0d32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1333489, 27691, 156, 3, 46, "Input", "ExpressionUUID" -> \
"809d7a98-5fcb-46e0-91ba-31ba48750368"],
Cell[1333648, 27696, 386, 11, 46, "Output", "ExpressionUUID" -> \
"9c204d0d-e1a4-4d3b-865d-bf9b3f22af58"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1334071, 27712, 207, 4, 46, "Input", "ExpressionUUID" -> \
"2d3808b0-2f23-4ed3-b309-2b6a2c7c78e4"],
Cell[1334281, 27718, 171, 4, 46, "Output", "ExpressionUUID" -> \
"ecb5b304-5abf-433a-8bb5-8dca45d48c31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1334489, 27727, 302, 8, 46, "Input", "ExpressionUUID" -> \
"e6cbd8a3-5b34-4f4c-bc0c-acf7cf962a30"],
Cell[1334794, 27737, 212, 4, 46, "Output", "ExpressionUUID" -> \
"859d2904-0575-4f03-8b3d-ab8093c841cc"]
}, Open  ]],
Cell[1335021, 27744, 201, 4, 46, "Input", "ExpressionUUID" -> \
"83162218-e7ee-4de4-9131-a4a13d76a576"],
Cell[CellGroupData[{
Cell[1335247, 27752, 158, 3, 46, "Input", "ExpressionUUID" -> \
"6c861a15-ea08-465b-aa0b-d0168da8908d"],
Cell[1335408, 27757, 222, 6, 46, "Output", "ExpressionUUID" -> \
"e8dea3c3-8da7-4e2a-8844-45b4ccb37f65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1335667, 27768, 156, 3, 46, "Input", "ExpressionUUID" -> \
"dd4439e0-fb71-4c5b-b8c7-01fbe330b7e1"],
Cell[1335826, 27773, 147, 4, 46, "Output", "ExpressionUUID" -> \
"b3be483a-7973-4435-85d0-85823aa8102f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1336010, 27782, 247, 5, 46, "Input", "ExpressionUUID" -> \
"0ce45909-5d9b-4925-8e4e-9de3be07dfdd"],
Cell[1336260, 27789, 4251, 128, 327, "Output", "ExpressionUUID" -> \
"93b2ade7-8967-446a-8beb-9c3c3b19a5be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1340548, 27922, 156, 3, 46, "Input", "ExpressionUUID" -> \
"231dbda5-0c85-4cc3-bb57-886bd0c0f34d"],
Cell[1340707, 27927, 749, 21, 46, "Output", "ExpressionUUID" -> \
"0f1cff4f-dead-4b73-b05c-d856b592e669"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1341493, 27953, 156, 3, 46, "Input", "ExpressionUUID" -> \
"c1822c20-5062-40d3-bd2f-8f68354d7fed"],
Cell[1341652, 27958, 527, 15, 46, "Output", "ExpressionUUID" -> \
"28384a18-97ba-4de2-a301-1a42f7e302d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1342216, 27978, 212, 4, 46, "Input", "ExpressionUUID" -> \
"d10971d9-9076-4eb1-9cb2-b67a9efba3b7"],
Cell[1342431, 27984, 262, 8, 46, "Output", "ExpressionUUID" -> \
"3199cca2-3255-4a43-9d8e-fbf515c7adc9"]
}, Open  ]],
Cell[1342708, 27995, 165, 3, 46, "Input", "ExpressionUUID" -> \
"ff863d2d-7fda-43b2-b108-b193bcc3f979"],
Cell[1342876, 28000, 278, 6, 46, "Input", "ExpressionUUID" -> \
"251a2971-ea95-44ad-95f7-5876123ada0a"],
Cell[1343157, 28008, 230, 5, 46, "Input", "ExpressionUUID" -> \
"80b4b0a7-8aba-463e-85f3-6724f49c8bd5"],
Cell[1343390, 28015, 179, 3, 46, "Input", "ExpressionUUID" -> \
"cf9720cf-f09a-49e8-a7c5-bb11a82a6b4e"],
Cell[1343572, 28020, 225, 5, 46, "Input", "ExpressionUUID" -> \
"a4c76f21-8730-4fc7-aee5-977cafcfa984"],
Cell[1343800, 28027, 217, 7, 103, "Text", "ExpressionUUID" -> \
"84907407-da26-44f9-ab1c-ca49986cc935"],
Cell[1344020, 28036, 291, 8, 103, "Text", "ExpressionUUID" -> \
"02bc9609-89a1-49aa-a08f-95cfd5c4a938"],
Cell[1344314, 28046, 228, 5, 46, "Input", "ExpressionUUID" -> \
"d5c7451b-c2cf-4a8b-9af4-f4b83c42e446"],
Cell[1344545, 28053, 184, 3, 46, "Text", "ExpressionUUID" -> \
"d22f7450-9415-4ac0-b822-52fe81a0d697"],
Cell[1344732, 28058, 427, 10, 46, "Input", "ExpressionUUID" -> \
"160be503-3442-4cb8-bf35-08b4f9e3fe24"],
Cell[1345162, 28070, 241, 6, 46, "Text", "ExpressionUUID" -> \
"1ea2a184-d657-4f23-ac6e-e8f7bf907f8d"],
Cell[CellGroupData[{
Cell[1345428, 28080, 304, 7, 46, "Input", "ExpressionUUID" -> \
"efe77cc2-8608-446d-b180-484776b74878"],
Cell[1345735, 28089, 183, 3, 46, "Output", "ExpressionUUID" -> \
"e7152fc3-11df-4c23-b102-73034bc8a92a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1345955, 28097, 533, 14, 46, "Input", "ExpressionUUID" -> \
"9dc4b2cf-bf85-48a4-80ce-99497a84c733"],
Cell[1346491, 28113, 154, 3, 46, "Output", "ExpressionUUID" -> \
"6257a1a0-47fb-4630-9fe3-124ea226802a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1346682, 28121, 551, 15, 46, "Input", "ExpressionUUID" -> \
"75d3510b-b9d5-4c33-acb4-a2fc2f69f9cd"],
Cell[CellGroupData[{
Cell[1347258, 28140, 139, 3, 36, "Echo", "ExpressionUUID" -> \
"47cdb770-332b-4ca2-b0a9-9e177514c765"],
Cell[1347400, 28145, 138, 3, 36, "Echo", "ExpressionUUID" -> \
"d732b925-3693-44e7-92ee-2c9144444775"]
}, Open  ]],
Cell[1347553, 28151, 198, 4, 46, "Output", "ExpressionUUID" -> \
"0d029e47-3ce2-4ddb-bcc5-abf54d3ccf76"]
}, Open  ]],
Cell[1347766, 28158, 71, 0, 46, "Text", "ExpressionUUID" -> \
"32fc688f-3230-4e50-a2a3-c0ee3e9052c6"],
Cell[CellGroupData[{
Cell[1347862, 28162, 421, 11, 46, "Input", "ExpressionUUID" -> \
"24b0ecd0-52b8-4131-a22f-942c7aaac88b"],
Cell[1348286, 28175, 178, 3, 46, "Output", "ExpressionUUID" -> \
"0d4c8663-75bf-442c-8c8c-c22f7a6cb469"]
}, Open  ]],
Cell[1348479, 28181, 129, 3, 46, "Input", "ExpressionUUID" -> \
"8e0d7a63-0d20-4da8-9227-2a6f56ddb89e"],
Cell[CellGroupData[{
Cell[1348633, 28188, 299, 7, 46, "Input", "ExpressionUUID" -> \
"0c4ed235-6664-4997-b456-edfc8365452e"],
Cell[1348935, 28197, 150, 3, 46, "Output", "ExpressionUUID" -> \
"8ed897cd-4384-4dd4-aa11-a3c27ee6f47a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1349122, 28205, 218, 4, 46, "Input", "ExpressionUUID" -> \
"74d4260a-fb63-441d-be62-08b69a662651"],
Cell[1349343, 28211, 337, 8, 46, "Output", "ExpressionUUID" -> \
"73d286d0-9456-43fe-b049-768b9a693855"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1349717, 28224, 218, 4, 46, "Input", "ExpressionUUID" -> \
"c4c985c1-dbfe-4e87-a4c6-825d37725691"],
Cell[1349938, 28230, 337, 8, 46, "Output", "ExpressionUUID" -> \
"228d2f98-0b69-4a18-aedd-0f574413a9f9"]
}, Open  ]],
Cell[1350290, 28241, 317, 8, 46, "Input", "ExpressionUUID" -> \
"51f8f90c-6860-434e-850d-928db1691488"],
Cell[1350610, 28251, 193, 4, 46, "Input", "ExpressionUUID" -> \
"fb033e4d-d92c-4cdb-b961-bb27e4415fad"],
Cell[CellGroupData[{
Cell[1350828, 28259, 199, 4, 46, "Input", "ExpressionUUID" -> \
"236244ac-aca7-45f9-9242-6ef408211656"],
Cell[1351030, 28265, 1451, 32, 163, "Output", "ExpressionUUID" -> \
"97c4849f-a436-4d05-9599-b2e541884406"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1352518, 28302, 450, 10, 46, "Input", "ExpressionUUID" -> \
"110356bf-1049-4bcc-bf90-64d474590d14"],
Cell[1352971, 28314, 387, 8, 46, "Output", "ExpressionUUID" -> \
"2f8f176b-a32b-410f-88cc-498b27b07797"]
}, Open  ]],
Cell[1353373, 28325, 3333, 81, 395, "Input", "ExpressionUUID" -> \
"1fa77908-9614-4ae1-8169-df4ce92b9f2a"],
Cell[1356709, 28408, 4943, 119, 482, "Input", "ExpressionUUID" -> \
"a8754287-a484-4e7d-9d18-266ad4d7b9a5"],
Cell[CellGroupData[{
Cell[1361677, 28531, 176, 3, 46, "Input", "ExpressionUUID" -> \
"26074061-991d-4313-9e12-76d6fae5911e"],
Cell[1361856, 28536, 1132, 29, 76, "Output", "ExpressionUUID" -> \
"0891b2a9-acb8-48a1-aaa2-9537cd9bd043"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1363025, 28570, 408, 11, 46, "Input", "ExpressionUUID" -> \
"56bfb688-497d-40c5-b61e-55ab8162926b"],
Cell[1363436, 28583, 431, 9, 46, "Output", "ExpressionUUID" -> \
"43841e0a-f264-4b11-91a3-1b33c5d0c115"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1363904, 28597, 499, 13, 46, "Input", "ExpressionUUID" -> \
"41b9a513-8954-4953-ae8c-58971ac2eed5"],
Cell[1364406, 28612, 559, 10, 76, "Output", "ExpressionUUID" -> \
"0e9add19-141e-4f65-9d4b-2a7153953861"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1365002, 28627, 400, 10, 46, "Input", "ExpressionUUID" -> \
"a5545cf4-e1a2-4229-b690-9c11e925b1c3"],
Cell[1365405, 28639, 592, 12, 76, "Output", "ExpressionUUID" -> \
"6b1a212e-bc2c-4419-b854-d8a42ec7478e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1366034, 28656, 146, 2, 46, "Input", "ExpressionUUID" -> \
"8b9b0fe7-e928-444a-bc1e-2a6f9594ab5a"],
Cell[1366183, 28660, 434, 9, 76, "Output", "ExpressionUUID" -> \
"e668f91c-d611-49a5-b133-0e438dd09087"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1366654, 28674, 366, 9, 46, "Input", "ExpressionUUID" -> \
"1180e7c7-9083-451f-a6c4-5c575656ff40"],
Cell[1367023, 28685, 507, 10, 76, "Output", "ExpressionUUID" -> \
"3fadf32f-92ed-40b5-9fa0-d741220bb83a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1367567, 28700, 423, 11, 46, "Input", "ExpressionUUID" -> \
"2e124ca3-4e81-43f8-ba8c-da42916d6bfb"],
Cell[1367993, 28713, 414, 9, 46, "Output", "ExpressionUUID" -> \
"37e33118-962e-41a2-8b4d-f41b299fde94"]
}, Open  ]],
Cell[1368422, 28725, 156, 3, 46, "Input", "ExpressionUUID" -> \
"fef46788-74c8-4ed0-8856-4259bbd22945"]
}, Open  ]]
}, Open  ]]
}
]
*)

