(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     38793,        951]
NotebookOptionsPosition[     19973,        568]
NotebookOutlinePosition[     34209,        839]
CellTagsIndexPosition[     34166,        836]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Palindromic Roman Numerals", "Title",ExpressionUUID->"773be964-a6b5-4a53-8e99-1e4c1bb67f9a"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"THE CHALLENGE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellMargins->{{66, 0}, {-2, 
  37}},ExpressionUUID->"e442cfa9-e121-4840-ab88-603a053cbcd1"],

Cell["", "WCIntroDividerLine",ExpressionUUID->"64e2a968-b5fc-4d0a-a16d-dd64e34d75ee"],

Cell[TextData[{
 "A palindromic Roman numeral is a number whose Roman numeral representation \
reads the same in either direction. Write a function that returns all numbers \
(in decimal) up to an integer ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "45704f5f-8d58-4f76-9c3d-cadc3c02a4bd"],
 " that are palindromic in Roman numerals."
}], "Description",ExpressionUUID->"f91d09a8-24e6-4799-9e02-9aed72ad5f16"],

Cell[CellGroupData[{

Cell["More Details", "Section",ExpressionUUID->"474d63ed-a67a-4c62-abde-fe73740ea03e"],

Cell["Here are the numbers from 1 to 10 in Roman numerals:", "Text",ExpressionUUID->"0084a313-5704-47c1-81d4-e1d3c8702087"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IntegerString", "[", 
    RowBox[{"#", ",", "\"\<Roman\>\""}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "10", "]"}]}]], "Input",
 Evaluatable->False,
 CellLabelAutoDelete->False,
 CellLabel->"In[1]:=",ExpressionUUID->"df39b66f-6494-4fc6-8a01-40cccfd131b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"I\"\>", ",", "\<\"II\"\>", ",", "\<\"III\"\>", 
   ",", "\<\"IV\"\>", ",", "\<\"V\"\>", ",", "\<\"VI\"\>", ",", "\<\"VII\"\>",
    ",", "\<\"VIII\"\>", ",", "\<\"IX\"\>", ",", "\<\"X\"\>"}], 
  "}"}]], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[1]=",ExpressionUUID->"23213a71-1c43-4a19-9f20-3b4ba64534fb"]
}, Open  ]],

Cell["These are not palindromes: IV, VI,VII, VIII, IX.", "Text",ExpressionUUID->"e01d7c5c-6a5a-40b6-aab2-d2679f37577c"],

Cell["\<\
The palindromes are I, II, III, V, X, corresponding to 1, 2, 3, 5, 10 in the \
usual decimal notation using Arabic numerals.\
\>", "Text",ExpressionUUID->"1ad9bfaf-f8e0-42f5-a469-237051d4a3a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What Your Function Should Do", "Section",ExpressionUUID->"9c4cd4c9-685d-469c-92cb-3a0986c99e2a"],

Cell[TextData[{
 "Write a function called ",
 StyleBox["RomanPalindromes", "InlineCode",
  FontWeight->"Plain"],
 " that takes an integer ",
 StyleBox["n", "InlineCode"],
 " and returns a list of all numbers up to ",
 StyleBox["n", "InlineCode"],
 " that are palindromic in their Roman numeral representation. "
}], "Text",ExpressionUUID->"b2b9869b-7512-4e8c-804a-deec4065db5e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["RomanPalindromes",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", "2", "]"}]], "Input",
 Evaluatable->False,
 CellLabelAutoDelete->False,
 CellLabel->"In[2]:=",ExpressionUUID->"0c90e647-e85b-49cd-9078-2efb609d538f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2"}], "}"}]], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[2]=",ExpressionUUID->"5fb5881b-74dc-46f3-bbd2-a70dc3698ae5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "Subsection",ExpressionUUID->"f63fef9f-4e0f-45c0-90ae-b3dcf05e5e09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["RomanPalindromes",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", "10", "]"}]], "Input",
 Evaluatable->False,
 CellLabelAutoDelete->False,
 CellLabel->"In[3]:=",ExpressionUUID->"fb087825-e684-4d9b-9a6d-e0402c639e05"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "10"}], "}"}]], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[3]=",ExpressionUUID->"6ad59449-a2a7-4018-8e54-d0dc504042f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["RomanPalindromes",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", "20", "]"}]], "Input",
 Evaluatable->False,
 CellLabelAutoDelete->False,
 CellLabel->"In[4]:=",ExpressionUUID->"a644f4cf-2cb3-4391-a85e-5999be964927"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "5", ",", "10", ",", "19", ",", "20"}], 
  "}"}]], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[4]=",ExpressionUUID->"9f45799a-caa3-4462-9528-c68311b798db"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["RomanPalindromes",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", "2222", "]"}]], "Input",
 Evaluatable->False,
 CellLabelAutoDelete->False,
 CellLabel->"In[5]:=",ExpressionUUID->"f7a5daa2-9171-4ba1-9ada-bce81f253ed1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "5", ",", "10", ",", "19", ",", "20", ",", 
   "30", ",", "50", ",", "100", ",", "190", ",", "200", ",", "300", ",", 
   "500", ",", "1000", ",", "1900", ",", "2000"}], "}"}]], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[5]=",ExpressionUUID->"c68c0ff8-f447-4779-9f4d-639a30c970a0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Things You May Find Useful", "Subsection",ExpressionUUID->"58b65de9-edf0-46ba-9165-2d4ab8a43d0a"],

Cell["\<\
Here is a list of some common Roman numeral characters. They stand for 1, 5, \
10 and 100:\
\>", "Text",ExpressionUUID->"b1150919-519e-4078-94f2-92c9aa0b5c0f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "\"\<I\>\"", ",", " ", "\"\<V\>\"", ",", " ", "\"\<X\>\"", ",", " ", 
   "\"\<C\>\""}], "}"}]], "Input",
 Evaluatable->False,ExpressionUUID->"ad6a5838-cb78-4b4e-a6b4-c619192267a1"],

Cell[TextData[{
 "Read more about ",
 ButtonBox["Roman numerals",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathworld.wolfram.com/RomanNumerals.html"], None},
  ButtonNote->"http://mathworld.wolfram.com/RomanNumerals.html"],
 "."
}], "Text",ExpressionUUID->"0a9c1fa8-b7e4-434d-bc84-9bc765e1c5e7"],

Cell["\<\
A palindromic number is a number written in base 10 that is the same when \
read forward or backward. For example, 123454321 is a palindromic number. \
\>", "Text",ExpressionUUID->"7aef20cb-c473-474c-8b3f-b7fc5a5a07b7"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"SCRATCH AREA\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->GrayLevel[0.65],
  FrameMargins->{{13, 13}, {2, 5}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellGroupingRules->{
  "SectionGrouping", 
   0},ExpressionUUID->"5271c5b7-4dcd-40eb-bd6d-fd1906ba8b26"],

Cell[BoxData[""], "WCIntroDividerLine",
 CellFrameColor->GrayLevel[
  0.65],ExpressionUUID->"1b86d021-8d7f-4d41-b438-a51777bc04ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["RomanPalindromes",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", "10", "]"}]], "Input",ExpressionUUID->\
"23815c57-6679-4c47-b86d-afd7ea211ec8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "5", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.705589141169467*^9, 
  3.705589227964595*^9},ExpressionUUID->"4f69fadc-17bd-4b44-8029-\
33cb5cab255d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IntegerString", "[", 
    RowBox[{"#", ",", "\"\<Roman\>\""}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "10", "]"}]}]], "Input",
 CellChangeTimes->{{3.7055889899025097`*^9, 
  3.705589009435998*^9}},ExpressionUUID->"1edda291-1ec8-4033-a3f5-\
1683ef5c5c56"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"I\"\>", ",", "\<\"II\"\>", ",", "\<\"III\"\>", 
   ",", "\<\"IV\"\>", ",", "\<\"V\"\>", ",", "\<\"VI\"\>", ",", "\<\"VII\"\>",
    ",", "\<\"VIII\"\>", ",", "\<\"IX\"\>", ",", "\<\"X\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.705588990791704*^9, 
  3.705589010172495*^9}},ExpressionUUID->"55d6029a-d067-41a8-91d2-\
7286a133c323"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringQ", "/@", 
  RowBox[{"{", 
   RowBox[{
   "\"\<I\>\"", ",", "\"\<II\>\"", ",", "\"\<III\>\"", ",", "\"\<IV\>\"", 
    ",", "\"\<V\>\"", ",", "\"\<VI\>\"", ",", "\"\<VII\>\"", ",", 
    "\"\<VIII\>\"", ",", "\"\<IX\>\"", ",", "\"\<X\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.7055890138657084`*^9, 
  3.7055890235491905`*^9}},ExpressionUUID->"f34b06c2-d2d3-4b1d-bc7d-\
57146ea414bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7055890240436707`*^9},ExpressionUUID->"99e6cb09-cc00-472e-97da-\
a66c4b957c74"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"IntegerString", "[", 
      RowBox[{"#", ",", "\"\<Roman\>\""}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", "10", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"StringReverse", "[", "#", "]"}], "\[Equal]", "#"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.705589034203032*^9, 3.705589050330659*^9}, {
  3.7055890962231226`*^9, 
  3.705589121080011*^9}},ExpressionUUID->"fdf358a8-0cc1-490a-9118-\
ceb78601bb11"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RomanPalindromes", "[", "n_Integer", "]"}], "/;", 
   RowBox[{"n", ">", "0"}]}], ":=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"IntegerString", "[", 
       RowBox[{"#", ",", "\"\<Roman\>\""}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", "n", "]"}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"StringReverse", "[", "#", "]"}], "\[Equal]", "#"}], "&"}]}], 
   "]"}]}]], "Input",ExpressionUUID->"40fbd224-5ef3-42b9-b83c-429d643aa4ce"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"ENTER YOUR CODE HERE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",ExpressionUUID->"30ffc637-83a3-48f0-\
8f87-f67a52bc905e"],

Cell[BoxData[""], "WCIntroDividerLine",ExpressionUUID->"50c0a197-63c8-4a34-a625-b264e0282452"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RomanPalindromes", "[", "n_Integer", "]"}], ":=", 
  RowBox[{"FromRomanNumeral", "/@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"IntegerString", "[", 
        RowBox[{"#", ",", "\"\<Roman\>\""}], "]"}], "&"}], "/@", 
      RowBox[{"Range", "[", "n", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"StringReverse", "[", "#", "]"}], "\[Equal]", "#"}], "&"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7055891282117605`*^9, 3.705589163479694*^9}, {
   3.7055892206244955`*^9, 3.7055892241174035`*^9}, 
   3.7064518013052444`*^9},ExpressionUUID->"b9b9d681-5ab4-4a11-b330-\
ffc0aa62b247"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
  DynamicModuleBox[{
    WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}, 
    ButtonBox[
     DynamicBox[
      ToBoxes[
       If[
        TrueQ[WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$], 
        Framed[
         Panel[
          ProgressIndicator[Appearance -> "Percolate", ImageSize -> {60, 20}],
           Background -> White, ImageSize -> {100, 20}, FrameMargins -> 0, 
          Alignment -> Center, Appearance -> "Frameless"], Background -> 
         GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
         RoundingRadius -> 3, Alignment -> Center], 
        Mouseover[
         Framed[
          Panel[
           Style["Submit", "ButtonLabel", ShowStringCharacters -> False], 
           Background -> RGBColor[0.9961, 0.3098, 0.21569], 
           ImageSize -> {100, 20}, FrameMargins -> 0, Alignment -> Center, 
           Appearance -> "Frameless"], Background -> 
          RGBColor[0.9961, 0.3098, 0.21569], FrameStyle -> 
          RGBColor[0.9961, 0.3098, 0.21569], RoundingRadius -> 3, Alignment -> 
          Center], 
         Framed[
          Panel[
           Style[
           "Submit", "ButtonLabelActive", ShowStringCharacters -> False], 
           Background -> GrayLevel[1], ImageSize -> {100, 20}, FrameMargins -> 
           0, Alignment -> Center, Appearance -> "Frameless"], Background -> 
          GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
          RoundingRadius -> 3, Alignment -> Center]]], StandardForm], 
      ImageSizeCache -> {174., {22., 32.}}], Appearance -> None, 
     ButtonFunction :> ((
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = True; (Off[
         MessageName[$CharacterEncoding, "utf8"]]; ((If[
          Not[
           TrueQ[
            WolframChallenges`$NotebookInitializedQ[
             Hash[{$SessionID, 
               Last[
                EvaluationNotebook[]]}]]]], 
          CloudGet[
           FileNameJoin[{
             CloudObject[
             "https://www.wolframcloud.com/objects/user-9449da4d-3158-4f88-\
9478-f11a7a0d89ab/public/symbols"], "InitializeNotebook"}]][]]; If[
          Not[
           ValueQ[
           WolframChallenges`Notebooks`Dialogs`RunWithSubmissionPolicy]], 
          WolframChallenges`Notebooks`Dialogs`RunWithSubmissionPolicy = 
          CloudGet[
            FileNameJoin[{
              CloudObject[
              "https://www.wolframcloud.com/objects/user-9449da4d-3158-4f88-\
9478-f11a7a0d89ab/public/symbols"], "RunWithSubmissionPolicy"}]]]; 
        WolframChallenges`Notebooks`Dialogs`RunWithSubmissionPolicy[If[
            Or[$VersionNumber >= 11.1, 
             ChoiceDialog[
              StringJoin["Wolfram Challenges is designed for version ", 
               ToString[11.1], 
               " or later of the Wolfram System, and may not function \
properly with the older ", 
               "kernel you are using. Contact Wolfram Research \
(www.wolfram.com) for upgrade information."]]], 
            If[
             Not[
              StringQ[
               If[
                Not[$CloudConnected], 
                CloudConnect[], $WolframID]]], 
             MessageDialog[
             "Users must authenticate with the cloud in order to submit \
solutions."], 
             Quiet[If[
                TrueQ[WolframChallenges`Common`$ActiveClearing], 
                Quiet[
                 Unset[
                  Once["public-2.10.0"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/user-9449da4d-3158-\
4f88-9478-f11a7a0d89ab/public/symbols/HandleResponse"]]]]]]; 
              Module[{CodeEquivalence`Utilities`Private`result$}, 
                Check[CodeEquivalence`Utilities`Private`result$ = 
                  Once["public-2.10.0"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/user-9449da4d-3158-\
4f88-9478-f11a7a0d89ab/public/symbols/HandleResponse"]]], 
                  Quiet[
                   Unset[
                    Once["public-2.10.0"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/user-9449da4d-3158-\
4f88-9478-f11a7a0d89ab/public/symbols/HandleResponse"]]]]]]; 
                CodeEquivalence`Utilities`Private`result$], 
              MessageName[$CharacterEncoding, "utf8"]][
              Quiet[If[
                 TrueQ[WolframChallenges`Common`$ActiveClearing], 
                 Quiet[
                  Unset[
                   Once["public-2.10.0"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/user-9449da4d-3158-\
4f88-9478-f11a7a0d89ab/public/symbols/CheckAnswer"]]]]]]; 
               Module[{CodeEquivalence`Utilities`Private`result$}, 
                 Check[CodeEquivalence`Utilities`Private`result$ = 
                   Once["public-2.10.0"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/user-9449da4d-3158-\
4f88-9478-f11a7a0d89ab/public/symbols/CheckAnswer"]]], 
                   Quiet[
                    Unset[
                    Once["public-2.10.0"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/user-9449da4d-3158-\
4f88-9478-f11a7a0d89ab/public/symbols/CheckAnswer"]]]]]]; 
                 CodeEquivalence`Utilities`Private`result$], 
               MessageName[$CharacterEncoding, "utf8"]][
               CloudObject[
               "https://www.wolframcloud.com/objects/user-9449da4d-3158-4f88-\
9478-f11a7a0d89ab/public/api/check"], {"RomanPalindromes"}, 
               "1146d2b1a5ebabf8"]]]]; Null])& )[]); 
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False; 
      Null)& )[], Evaluator -> Automatic, Method -> "Queued"], 
    DynamicModuleValues :> {}, 
    Initialization :> {
     WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}],
   InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {10, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[10], Selectable -> False],DynamicBox[
    ToBoxes[
     Refresh[Off[
        MessageName[$CharacterEncoding, "utf8"]]; If[
        Not[
         TrueQ[$CloudConnected]], 
        Column[{
          Row[{
            Text[
             Style[
             "Note: ", "SigninText", FontWeight -> "DemiBold", Background -> 
              None]], 
            Text[
             Button[
              
              PaneSelector[{
               False -> "Sign into the Wolfram Cloud", True -> 
                "Sign into the Wolfram Cloud"}, 
               Dynamic[
                CurrentValue["MouseOver"], 
                ImageSizeCache -> {48., {1., 12.}}], 
               BaseStyle -> {"SigninText", 
                 RGBColor["#36b1bf"]}, FrameMargins -> 0, ImageSize -> 
               Automatic], 
              CloudConnect[], Appearance -> None, Evaluator -> Automatic, 
              Method -> "Queued"]], 
            Text[
             Style[
             " to save your work on ", "SigninText", Background -> None]]}], 
          Text[
           Style[
           "Challenges and keep track of progress.", "SigninText", Background -> 
            None]]}, Alignment -> Left, Spacings -> 0], 
        Invisible[""]], UpdateInterval -> 1], StandardForm]]},
  "RowDefault"]], "SubmitRow",ExpressionUUID->"1d7a07d8-4930-49b9-9525-\
816b8f1d56d1"]
},
WindowSize->{1520, 781},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        ButtonBox[
         TagBox[
          GridBox[{{
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJzVmguUlVUVx4eXTDAoMSKGyEMFEc0oKRCmDBIMTSpEKkFGRh6ZNBCgaJGD
+QDKB1SKBoQouVKyJDGNkcBkWUG+SgXJ1JKsMAvIMJ+7/evsb90z557vfneu
F1zutf4z3+Ocs/c+j/36bq+66aOntKyoqJhVqX9GT5wzdObMiRef0VFvzqyf
dd7U+smTRtbPnjx18sxBda304WBFjaJ1RflJRFopOpZhnPcyVjlk2lek8p2h
+Ktiod13U6xQ/EIxFx0ifToqvmptbqKPPZ+v+Jti7P7WI41Ulh6KIXbdRfFf
cVRruv5ZcsS7oZExhnr9oOetb63dv6o4zNqeCM/9rafxPkXxsmKV3Y/2ZJ6J
jIovKtYo7lAMLDDWR6zNT60P+n7FG2+MtVup+I9ixP7S05PxKZPldruvUbzm
ybinlLWwedrjjfO6t4dus2fbyq1PRI4DFX29+7eM96N21sazhuLO66q3swba
d7jiFhtrkGKc8XjEeMK7pbU9RnFQOXT0+LO/nlHc4z3zzya0U8zW7APefw94
7fDer1U8W07eOtZ644NdaWPPBit+otiqWK3oVS5+Ef49jceTxnOwPW+peMVk
21gmXp2Cue1jz9s0c5wDFMcpRtnen6Q4U/FRxSHNHCuZ8+6BbJ2bM07K2IcH
Yz6t2Kt4U7E4o++hiumKDbYOu8SdwUbDJsVz4s7jHxRLFCcpWhQYc6Hx3mt9
fOpZoo7DFP3tuoXiT5JPbyhqUvofJS52QKZ7FecqjijAr71ihOLb4s7qE4qz
xWxS0Haw8Q7p+WSe9P/xipFF6nq4rcN2RaU9O9fmNKHdyBPp21oxT5xfvlHs
TJv+08TZ7V8r/mh4XHG34grFyYo24vZ9nc3xrxTHRfiMNxkTQrZae9fWZP+3
onsR+i7zxpnhPT9S8Vlx569TpF9Xk+9hxQfE2ZIxige98fDZN0fWJiHWlv1K
rPYexZU2d+dE+HUyWYhzjvSef9kbb3kR+m7z2nNWK8XFdthF9ma/SB984HM2
V8zv8aa7T0mcOKCAvgmxdpx7zhK++F+KSyJ8+5pMd5qMyLrdG2d7EfpuDXi/
5F0Ty3YK2nczXa60+4mS8xEJESMRi4y0uXkmeL8mRe97FAeJs+v494sia/xq
iqxQZhymba5P4Q3dGrRlLR9SLLH7i1P6sS8/JG4eLlJ8y3v3PXFn9q1IP+gx
RWfFh8Xt7VMDGVYWkPf6IvTtIe6sh8Qadg3aXiNu3yLvlBSeLyg6KLbYPT5o
oF0vEmejmLd/FJAbG8dexWa/KJ6f1ev3mWwhoUPPFB05Jy29+0+Jyz0hbPEK
xg36cEaZb87QB6XpvvJphuJ07x5bij063/Tk7PUTZ68L0Q3GlxxqWSALfv77
4s65mOyjvPfYzhbe/ScUmxW9gzmosuv2kTn6seJqcfWMh1JkJM+pEudzfKoV
53Mb7f79kssF0oj9Tq6MnyCuPSqQp739rwp0O9p0O9l7douNyXkf4Ok7S5yd
WBOMjT99xeb1rAIy4oOxZ2F8wFyd5t0j0wMZ+kIPGn982pJAJvYJZ2K25OKO
ExT/tL4rvbaPemOiXx9p6ofXBWNfqlht1w+nyMa+xUbNi7zjHHTz7rsXqS9E
bYBcG5/V1pPpXq/NCnFrstN7tsVr+8tgzL3B/c2Bvuj4OcWxBeSiXoWdejHl
Pf2pW+GrDpHi9V0gbu9hB4d7Mt2UocMmr21DBo8JXlvyftYOHzErpT3zh81u
THkPUZc5VfExRTspXt9tJgex6TxPrvEZ/S7z2lL7DPP3hNjrbby21Mz+Yte3
RtqzXsQHFxQhO/WfswIbUgwdrJijuM2TC7+2OaU9cWKT2qi4M/tk0O4+RZeg
HfswsRu/jYy92OTZXaTs2F3iFHKNJUX2wX9T+90cyEYs9vOgLfFiH69NB+8a
H/ElcfaI+uMECXJxcXHF3XYd5p/YB+rJlxUh88vBPetLTHFO5F1InxSXP24N
ZOtsMo8wHfDxVb6u4vYAc9I/6Jf41HERfdfa9VPSlPAF5DWJjWJuN0bkxX8e
aJgqufoUdrCPIW1vQuQQp0T0TXwj+XMX73l/cfYbnZK55Cxhf4gf1ntjXxrZ
z5vs+jdeO74rYHeoJbJHLxHnn2Ox6WvW9+vi7NVS7x3tyTk4j5eLswchkWN9
njEC2Xzfh/3jjMyQXJ14b0Sex4P7BcGY1Ed32PUqr129PWMedyjGils/fM13
IjJnEfX3rqbbY8E78iLyjh8Gsl2RoQs+YV0G3/HBmOjwhumRfAPg3LKPD5Om
sRR2iDPzuyzlUoi1qBfn2xrExehPmxzUK+cFso3LGA9d0+pBED6qXUVA4uwy
Z6WvtZtrzy/0+hL/s5++21wlA8LX/7+mLq7OTI2L+J/zMyyQi/MUq7VBnLEa
a1cr+fEIOQbxJ/WRg4NxGyRns4gpqu3atzH4X+Ig/MZgGwvf/WlxdvMbiuXi
6uWPmPx+jSwhfCf2c7Xd44vIG4iLD/BkqjZZiWFfCMbAPk4KdCCGvUHc2l0n
zod+wdqvDdr2EvtuJ1bvEBcP+zk7372oX00x3dGPWJBzRx5L7bkqGJf9kJzZ
060vueJsG/N+a/cDZAz6JjWScSb7daYLeUDviiJIXJ6d0IjgHfN9o3d/fmRt
smiB9eX7AXWAu8TlVA2K88TFiNRG3jSwT8ilmuSD4urHCTWJQVL0amvzTZ5P
DoBPIvbwfcGKoA/tyAmPtfssuxcj/ERf6w//tJoOtMja/Uws9/dk8XM5bFGV
6dDPdGLsSq89+8g/v9QJwjhhY2SeqJ2yZ7Cfid9tLt3njZcWl603HnyDwa5U
B3KsD9rfL7laB8S6tA76/ChDriY1FOuDDOz55XZPvFKKzmOtP/YtrFUSc2Gb
8fusyfCIHEulMN0Z6UPMlVaDgk4SZ2vDecJOYUOvtXtsUSymKkTEJ0ntCN2e
sOfojr+nNkmMekHAm31JXDOkwNicmQGhvtYfffZE+mAPa+yavdMh6HeEOH+b
xPz45Q3N1HmhNx61iTq7HmkyXRjwbCe5fcw3xlWRMZn3MTFdvXGoHfKtBxtw
uzj/zth+PntHSj/y/N9LrgZGjYqcspg9zjoc7Y2HzbnKdB0X4bfa6zvHZFxs
Mi8zHQ4tpGvGPMwP5MvbI+Js4lybV+rgve05fnqyOP+OHaSGwHcPcgbiZHKL
GuuP3PhuYgZ8VN8InxMDWeaXqlcwLnPcQ9x+vTrgMadAP2IXbAh2kd9V4Zvx
m3nfN609OfNpNh8v2XyQh0W/A9uc+rTIZETWqlifDD2pn2fVv8mnyRGIJyfE
dBGXU0yzNuQm2Fdyhwfs2RbJxX7kysTaQ0I9xcXL8FhnPGM1T5+wd3nfUQvo
21ryv5uFxLfRj3v37L3qAmOSz7LGrCO5a624eHNQRr9qaVrLI3b+TIZs7I/o
XirAh7g7Zqsh1gTfOyx4js5l+1mmuPMc1i2HG+8wJ0gImU8okR8xI/l7Ele+
bjqNtvfE5WFOU1dGfc8OxsbOd7Z3o0wWXzZkLXofF+CLT+Us5v1eVZrmFNC6
2Bgl8g1rjVsibVqZbJWxMcokB3Up4uVrJT+/3lVGPruCseGFLSZvKtm3NoM/
dQa+R6bVQxLKq4mUwKsygwcykD8eUw7dUmTgzBQTK5GzYrubvcfE+Qby3MuL
4IMseflDOUlc/SwtryCm58wlNV58Lt9+qeF3LTAm548aLDlasoeJVfDROyVO
yDB9X+rqyUcsg8+/y2QiduS7QJLj4GvxVcRkz5p82HHi62n2HhtA3LVBcueD
+iB1GGrpyW+/iPFqjUej8YR36u/X3kkSl9MONN0bxH0DbZScH8OPEufnxVXv
VhIX31OLTPJi4kq+LX5TXB63Qgr8/v3dQOLq7Jxbv8bP9yZ+68/3AfIgcia/
hkstY4qUEPO/UyQuVyfuT76HkteutvOclu9QWyE3SuzcbjvHbztW2tckLo9g
vxIbfE2C3zFl9CUv5BtN8pvApftS1nKRuPpuybZHXP6X+dvWUuh/YTQHOQ==

                "], {{0, 58}, {60, 0}}, {0, 255}, ColorFunction -> RGBColor], 
               
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], BoxID -> 
              "{\"type\":\"Image\",\"message\":\"SizeLimitReached\",\"\
imageData\":{\"imageSource\":\"data:image/png;base64,\
iVBORw0KGgoAAAANSUhEUgAAAB4AAAAdCAYAAAC9pNwMAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAA\
AOxAAADsQBlSsOGwAABL5JREFUSIm1l2mIllUUx393Rs1sUUizKNFSTPODhbbYouRMtmglWGhZQYlt\
QmL0oUUliEpbRLRMKwk0W6XUD1k2ViSCGmkoWplLWDqU0zK5TGYzvz7c8+LTOONMUAdenvvcc885/\
3vP/57zvNAKUTur96vt1DvUfgVdT3Wc2l69Rz2jNT7btBBwDPATMBw4D9gDTAKmAZtjWV9gIlAGDAW\
GqM8AA1NKL7UGRDHgyfE8oD6r3quuU0cfw+bKWDNJnarWxXyn1gYdoFarSV2kblev+RegL1W3qkvi/\
Xu1ovG6po76WuA04GlgQ0ppbMFpW+\
A64AogFXxsBN5OKdWklFYDvdX71OnAmcAYYGUxSCo4HUnOUy3wEVAPTCjlSZ0A9Azd8TFuC+\
wCqoFBwCnA1JTSPvUmYFEAK3Gl91F5j+P5Vj1dnaz2jPkO6jz1GnWG+pu6XH3DI/\
KnulQdor6qnhO23dTH1B7qBvX7pnKzqeCkWm0TeZ6rDla3hP67uDaT432W2hDjWnWUOl/\
tqparO9XDod/eVOCr1Tp1l1oZc+PVa9WvCrubpP6uzlSnqJXqrwX9frVCfSV8XKRuUw+\
pt5TilakD1VXAGqAP8EJKqUptDwyM3PWJ9T8Ah4GTgMsAgduCFyU5AZgOrFIvTimtBeYC/\
YFl6gq1AnV0IF2v7lG3BtLh6sjYXUkeUL+J8V+x+3nmK9dYKtU54WuDWqN+\
FrqJZcBq4CBwPnA68GEgHwDsj90BfAJ0BXrHezlwN/\
B82DeWYcCfMX6HzPjLgTrgfcwkukBdEnk7MVBOU28NhIfUEQWSlOSwuttMqLWNdO+\
oT4av9upz6jIz88vLgO3kGvs4cGfslMifMX4DGAy8BNTEXD1wb8wtABYDTwANoW/\
gSJ3oE2tnAf2AHUReS2xUHRwoH1WHxm57ma/Yk+rNTeSzJFWh36w+pc4OX/\
1DfzCeNWXkzlIfbPwU2BsoPwc6A/\
OBXuQyuiXGM4CFsX5b5A2gArgIWA98XDixfcBScsVrAKakQNQLOBc4BLxFJtBv5GtwF5lAdwMryGXy\
BOBAgJsKjCMTrCGOchDwOvmKfgd8GxusBXallDahlgWx5qjvxlGMC0Bjg1QfNnO0DeZ2OL4w94t6uf\
pi+BgR85+qsyNWOaEs1l3V683lMpnrc4W6ppngX5tL4wvqXvUq9TWjD8d7UaooidoxAqyL50J1ceja\
mT8GbjYXkB+bCP5IrBsctt3C9mX1A3Oj+DzAdaZA9xKAMqAT+cIPBQaklNaH7kbganIhqQa6RL5/\
AtqFbjcwM6VUp/YNMn5BLia1KaX6UqxiP+\
4A7AROLWAZTr6bD6aUVqptgEuAiwNgAv4gfwisTCn9rl4YZHyIfzb/\
GqBHSukAjSWIUm0mTZV6Soz3qd2PMjjavqu5Xzeop5krVb25To9qyTipbeM3JICoPtyKwLfH2p/\
NTeI4o6+3ZFtycEYwtCjL1FOPYdMxyFSUX5s7qWaRxNFMAk4mf2d9SSbQWeSKNZ9cMG4jV6y9wHLgb\
DI36oA5KaWFrdptSxK5e9PcY1er76k9/hPnzQTsry5Qd5g/ebqrXcx/bTaai9Cg/\
yNwpXqD2q4JXbk6TB3fWn9/A9izhAbbZ9AzAAAAAElFTkSuQmCC\",\"boundingBox\":{\"\
width\":30,\"height\":29,\"baseline\":19}},\"plotRange\":[0,1,0,1]}", 
              DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
              Magnification[0.5], ImageSizeRaw -> {60, 58}, 
              PlotRange -> {{0, 60}, {0, 58}}], 
             StyleBox[
             "\"WOLFRAM CHALLENGES\"", ShowStringCharacters -> False, 
              FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> 
              "Normal", FontColor -> GrayLevel[1]]}}, AutoDelete -> False, 
           GridBoxAlignment -> {
            "Columns" -> {Left, Left}, "Rows" -> {Center, Center}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
         Appearance -> None, ButtonFunction :> 
         SystemOpen["http://challenges.wolfram.com/"], Evaluator -> Automatic,
          Method -> "Preemptive"]}}, AutoDelete -> False, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellMargins -> 0, GeneratedCell -> True, 
   CellAutoOverwrite -> True, CellFrameMargins -> {{60, 0}, {4, 6}}, 
   CellFrameColor -> RGBColor[0.9961, 0.3098, 0.21569], ShowStringCharacters -> 
   False, Background -> RGBColor[0.9961, 0.3098, 0.21569]], 
  Cell["", "Text", CellMargins -> 0, ShowCellBracket -> False, 
   CellElementSpacings -> {"CellMinHeight" -> 5}, CellFrameMargins -> 3, 
   FontSize -> 1, CellFrame -> 0, Background -> 
   RGBColor[0.9686274509803922, 0.9137254901960784, 0.403921568627451]]},
ShowAutoSpellCheck->False,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (March 13, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], ShowCellBracket -> False, ShowGroupOpener -> False, 
    CellMargins -> {{65.14453125, 30}, {0., 30.}}, 
    CellFrameMargins -> {{66, Inherited}, {Inherited, 20}}, FontFamily -> 
    "Source Sans Pro Light", FontSize -> 50, FontColor -> 
    RGBColor[0.1843137254901961, 0.6509803921568628, 0.6941176470588235]], 
   Cell[
    StyleData["Section"], CellFrame -> {{0, 0}, {0, 1}}, ShowCellBracket -> 
    False, ShowGroupOpener -> False, 
    CellMargins -> {{66, 30}, {Inherited, 35}}, Deployed -> True, 
    CellFrameMargins -> {{0, Inherited}, {Inherited, 10}}, CellFrameColor -> 
    GrayLevel[0.7137], FontFamily -> "Source Sans Pro", FontSize -> 17, 
    FontWeight -> "DemiBold", FontColor -> Hue[0.51, 0.817, 0.72]], 
   Cell[
    StyleData["SectionNoLine", StyleDefinitions -> StyleData["Section"]], 
    CellFrame -> {{0, 0}, {0, 0}}, CellMargins -> {{49, 30}, {4, 0}}], 
   Cell[
    StyleData["SectionOnlyLine", StyleDefinitions -> StyleData["Section"]], 
    CellMargins -> {{66, 30}, {4, 35}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, CellFrameMargins -> 0, 
    FontSize -> 0.1], 
   Cell[
    StyleData["Subsection", StyleDefinitions -> StyleData["Section"]], 
    ShowCellBracket -> True, ShowGroupOpener -> True], 
   Cell[
    StyleData["Text"], ShowCellBracket -> True, 
    CellMargins -> {{66, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Item"], CellDingbat -> 
    StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
      RGBColor[0.21176470588235294`, 0.6941176470588235, 0.7490196078431373]],
     CellMargins -> {{81, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Description"], ShowCellBracket -> False, 
    CellMargins -> {{71, 30}, {0, 10}}, 
    AutoStyleOptions -> {
     "LocalVariableStyle" -> {FontColor -> RGBColor[0.263, 0.537, 0.345]}}, 
    LineSpacing -> {1.2, 0}, FontFamily -> "Source Sans Pro", FontSize -> 20, 
    FontSlant -> "Plain", 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, FontColor -> 
    GrayLevel[0.3]], 
   Cell[
    StyleData["WCIntroDivider"], Editable -> False, Selectable -> False, 
    Deletable -> False, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {-2, 35}}, ShowStringCharacters -> False], 
   Cell[
    StyleData["WCIntroDividerLine", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    CellFrame -> {{0, 0}, {0, 8}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, 
    CellFrameMargins -> {{0, 0}, {-1, 0}}, CellFrameColor -> 
    RGBColor[0.9961, 0.3098, 0.21569], FontSize -> 1], 
   Cell[
    StyleData["SubmitRow"], Editable -> False, Selectable -> False, Deletable -> 
    False, CellFrame -> {{0, 0}, {0, 2}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 30}}, 
    CellGroupingRules -> {"SectionGrouping", -5}, 
    CellFrameMargins -> {{Inherited, Inherited}, {20, 20}}, CellFrameColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["StandardForm"], FontSize -> 16], 
   Cell[
    StyleData["CodeFont"], FontSize -> 
    FEPrivate`If[False, 0.907029 Inherited, Inherited]], 
   Cell[
    StyleData["RefLink"], TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        ButtonBox[#, ButtonData -> #2, BaseStyle -> Dynamic[
           If[
            CurrentValue["MouseOver"], {
            "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
            "Link"}]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {BaseStyle -> "Link"}], 
   Cell[
    StyleData["InlineCode", StyleDefinitions -> StyleData["StandardForm"]]], 
   Cell[
    StyleData["SmallText", StyleDefinitions -> StyleData["Text"]], FontSize -> 
    0.975 Inherited, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.21176470588235294`, 0.7058823529411765, 0.7490196078431373]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["SubmitButton"], ShowCellBracket -> False, 
    CellMargins -> {{66, Inherited}, {25, Inherited}}, ShowCellLabel -> False,
     TextAlignment -> Center, ShowStringCharacters -> False], 
   Cell[
    StyleData["SigninText", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSize -> 12, FontColor -> 
    GrayLevel[0.25]], 
   Cell[
    StyleData["ButtonLabel", StyleDefinitions -> StyleData["Text"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontFamily -> 
    "Source Sans Pro", FontSize -> 18, FontWeight -> "DemiBold", FontColor -> 
    GrayLevel[1]], 
   Cell[
    StyleData[
    "ButtonLabelActive", StyleDefinitions -> StyleData["ButtonLabel"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]]}, 
  Visible -> False, FrontEndVersion -> 
  "11.1 for Microsoft Windows (64-bit) (March 13, 2017)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 98, 0, 139, "Title", "ExpressionUUID" -> \
"773be964-a6b5-4a53-8e99-1e4c1bb67f9a"],
Cell[681, 24, 691, 21, 99, "WCIntroDivider", "ExpressionUUID" -> \
"e442cfa9-e121-4840-ab88-603a053cbcd1"],
Cell[1375, 47, 85, 0, 38, "WCIntroDividerLine", "ExpressionUUID" -> \
"64e2a968-b5fc-4d0a-a16d-dd64e34d75ee"],
Cell[1463, 49, 433, 8, 145, "Description", "ExpressionUUID" -> \
"f91d09a8-24e6-4799-9e02-9aed72ad5f16"],
Cell[CellGroupData[{
Cell[1921, 61, 86, 0, 109, "Section", "ExpressionUUID" -> \
"474d63ed-a67a-4c62-abde-fe73740ea03e"],
Cell[2010, 63, 123, 0, 43, "Text", "ExpressionUUID" -> \
"0084a313-5704-47c1-81d4-e1d3c8702087"],
Cell[CellGroupData[{
Cell[2158, 67, 307, 8, 51, "Input", "ExpressionUUID" -> \
"df39b66f-6494-4fc6-8a01-40cccfd131b2",
 Evaluatable->False],
Cell[2468, 77, 362, 7, 51, "Output", "ExpressionUUID" -> \
"23213a71-1c43-4a19-9f20-3b4ba64534fb"]
}, Open  ]],
Cell[2845, 87, 119, 0, 43, "Text", "ExpressionUUID" -> \
"e01d7c5c-6a5a-40b6-aab2-d2679f37577c"],
Cell[2967, 89, 203, 3, 43, "Text", "ExpressionUUID" -> \
"1ad9bfaf-f8e0-42f5-a469-237051d4a3a4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3207, 97, 102, 0, 109, "Section", "ExpressionUUID" -> \
"9c4cd4c9-685d-469c-92cb-3a0986c99e2a"],
Cell[3312, 99, 378, 9, 79, "Text", "ExpressionUUID" -> \
"b2b9869b-7512-4e8c-804a-deec4065db5e"],
Cell[CellGroupData[{
Cell[3715, 112, 261, 7, 51, "Input", "ExpressionUUID" -> \
"0c90e647-e85b-49cd-9078-2efb609d538f",
 Evaluatable->False],
Cell[3979, 121, 180, 4, 51, "Output", "ExpressionUUID" -> \
"5fb5881b-74dc-46f3-bbd2-a70dc3698ae5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4208, 131, 90, 0, 109, "Subsection", "ExpressionUUID" -> \
"f63fef9f-4e0f-45c0-90ae-b3dcf05e5e09"],
Cell[CellGroupData[{
Cell[4323, 135, 262, 7, 51, "Input", "ExpressionUUID" -> \
"fb087825-e684-4d9b-9a6d-e0402c639e05",
 Evaluatable->False],
Cell[4588, 144, 211, 4, 51, "Output", "ExpressionUUID" -> \
"6ad59449-a2a7-4018-8e54-d0dc504042f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4836, 153, 262, 7, 51, "Input", "ExpressionUUID" -> \
"a644f4cf-2cb3-4391-a85e-5999be964927",
 Evaluatable->False],
Cell[5101, 162, 239, 6, 51, "Output", "ExpressionUUID" -> \
"9f45799a-caa3-4462-9528-c68311b798db"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5377, 173, 264, 7, 51, "Input", "ExpressionUUID" -> \
"f7a5daa2-9171-4ba1-9ada-bce81f253ed1",
 Evaluatable->False],
Cell[5644, 182, 365, 7, 51, "Output", "ExpressionUUID" -> \
"c68c0ff8-f447-4779-9f4d-639a30c970a0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6058, 195, 103, 0, 109, "Subsection", "ExpressionUUID" -> \
"58b65de9-edf0-46ba-9165-2d4ab8a43d0a"],
Cell[6164, 197, 169, 3, 70, "Text", "ExpressionUUID" -> \
"b1150919-519e-4078-94f2-92c9aa0b5c0f"],
Cell[6336, 202, 222, 5, 70, "Input", "ExpressionUUID" -> \
"ad6a5838-cb78-4b4e-a6b4-c619192267a1",
 Evaluatable->False],
Cell[6561, 209, 312, 8, 70, "Text", "ExpressionUUID" -> \
"0a9c1fa8-b7e4-434d-bc84-9bc765e1c5e7"],
Cell[6876, 219, 229, 3, 70, "Text", "ExpressionUUID" -> \
"7aef20cb-c473-474c-8b3f-b7fc5a5a07b7"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7154, 228, 685, 22, 92, "WCIntroDivider", "ExpressionUUID" -> \
"5271c5b7-4dcd-40eb-bd6d-fd1906ba8b26",
 CellGroupingRules->{"SectionGrouping", 0}],
Cell[7842, 252, 131, 2, 63, "WCIntroDividerLine", "ExpressionUUID" -> \
"1b86d021-8d7f-4d41-b438-a51777bc04ba"],
Cell[CellGroupData[{
Cell[7998, 258, 191, 5, 51, "Input", "ExpressionUUID" -> \
"23815c57-6679-4c47-b86d-afd7ea211ec8"],
Cell[8192, 265, 228, 5, 51, "Output", "ExpressionUUID" -> \
"4f69fadc-17bd-4b44-8029-33cb5cab255d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8457, 275, 307, 8, 51, "Input", "ExpressionUUID" -> \
"1edda291-1ec8-4033-a3f5-1683ef5c5c56"],
Cell[8767, 285, 381, 8, 51, "Output", "ExpressionUUID" -> \
"55d6029a-d067-41a8-91d2-7286a133c323"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9185, 298, 418, 9, 51, "Input", "ExpressionUUID" -> \
"f34b06c2-d2d3-4b1d-bc7d-57146ea414bb"],
Cell[9606, 309, 294, 7, 51, "Output", "ExpressionUUID" -> \
"99e6cb09-cc00-472e-97da-a66c4b957c74"]
}, Open  ]],
Cell[9915, 319, 518, 15, 51, "Input", "ExpressionUUID" -> \
"fdf358a8-0cc1-490a-9118-ceb78601bb11"],
Cell[10436, 336, 529, 15, 87, "Input", "ExpressionUUID" -> \
"40fbd224-5ef3-42b9-b83c-429d643aa4ce"],
Cell[10968, 353, 662, 20, 96, "WCIntroDivider", "ExpressionUUID" -> \
"30ffc637-83a3-48f0-8f87-f67a52bc905e"],
Cell[11633, 375, 94, 0, 63, "WCIntroDividerLine", "ExpressionUUID" -> \
"50c0a197-63c8-4a34-a625-b264e0282452"],
Cell[11730, 377, 682, 18, 87, "Input", "ExpressionUUID" -> \
"b9b9d681-5ab4-4a11-b330-ffc0aa62b247"]
}, Open  ]],
Cell[12427, 398, 7542, 168, 157, "SubmitRow", "ExpressionUUID" -> \
"1d7a07d8-4930-49b9-9525-816b8f1d56d1"]
}
]
*)

